#n
#nvoid MPU_Config(void)
{
#tMPU_Region_InitTypeDef MPU_InitStruct = {0};
#n
#t/* Disables the MPU */
#tHAL_MPU_Disable();
#n#t/** Initializes and configures the Region and the memory to be protected#n#t*/
#tMPU_InitStruct.Enable = MPU_REGION_ENABLE;
#tMPU_InitStruct.Number = MPU_REGION_NUMBER0;
#tMPU_InitStruct.BaseAddress = 0x0;
#tMPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
#tMPU_InitStruct.SubRegionDisable = 0x87;
#tMPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
#tMPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
#tMPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
#tMPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
#tMPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
#tMPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
#n
#tHAL_MPU_ConfigRegion(&MPU_InitStruct);
#t/* Enables the MPU */
#tHAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
#n}
