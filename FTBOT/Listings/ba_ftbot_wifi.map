Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    wifimain.o(.text.mainThread) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    wifimain.o(.text.mainThread) refers to wifimain.o(.bss.driveControlMutId) for driveControlMutId
    wifimain.o(.text.mainThread) refers to wifimain.o(.data.driveDisp) for driveDisp
    wifimain.o(.text.mainThread) refers to e4ftbotterminal.o(.text.E4ftbotTerminalInit) for E4ftbotTerminalInit
    wifimain.o(.text.mainThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    wifimain.o(.text.mainThread) refers to wifimain.o(.bss.MsgQId_nix) for MsgQId_nix
    wifimain.o(.text.mainThread) refers to receiveinit.o(.text.receive_init) for receive_init
    wifimain.o(.text.mainThread) refers to initcom.o(.text.uart_init) for uart_init
    wifimain.o(.text.mainThread) refers to wifimain.o(.rodata.str1.1) for .L.str
    wifimain.o(.text.mainThread) refers to printf.o(.text) for printf
    wifimain.o(.text.mainThread) refers to initcom.o(.text.wifi_init) for wifi_init
    wifimain.o(.text.mainThread) refers to transmitthread.o(.text.transmitThread) for transmitThread
    wifimain.o(.text.mainThread) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    wifimain.o(.text.mainThread) refers to receivethread.o(.text.receiveThread) for receiveThread
    wifimain.o(.text.mainThread) refers to drivethread.o(.text.driveThread) for driveThread
    wifimain.o(.text.mainThread) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    wifimain.o(.text.mainThread) refers to rtx_thread.o(.text.osThreadSetPriority) for osThreadSetPriority
    wifimain.o(.text.mainThread) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    wifimain.o(.text.mainThread) refers to drivegettersetter.o(.text.motGetCurrSpeed) for motGetCurrSpeed
    wifimain.o(.text.mainThread) refers to wifimain.o(.bss.driveInfo) for driveInfo
    wifimain.o(.text.mainThread) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    wifimain.o(.text.mainThread) refers to e4ftbotterminal.o(.text.E4setPosDisp) for E4setPosDisp
    wifimain.o(.text.mainThread) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    wifimain.o(.text.mainThread) refers to rtx_delay.o(.text.osDelay) for osDelay
    wifimain.o(.ARM.exidx.text.mainThread) refers to wifimain.o(.text.mainThread) for [Anonymous Symbol]
    initcom.o(.text.concatenate3Strings) refers to h1_alloc_threads.o(.text) for malloc
    initcom.o(.text.concatenate3Strings) refers to exit.o(.text) for exit
    initcom.o(.ARM.exidx.text.concatenate3Strings) refers to initcom.o(.text.concatenate3Strings) for [Anonymous Symbol]
    initcom.o(.text.uart_init) refers to main.o(.bss.huart2) for huart2
    initcom.o(.text.uart_init) refers to initcom.o(.rodata.uart_init.command) for uart_init.command
    initcom.o(.text.uart_init) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) for HAL_UART_Transmit
    initcom.o(.text.uart_init) refers to rtx_delay.o(.text.osDelay) for osDelay
    initcom.o(.text.uart_init) refers to wifimain.o(.bss.MsgQId_nix) for MsgQId_nix
    initcom.o(.text.uart_init) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for osMessageQueueGetCount
    initcom.o(.text.uart_init) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    initcom.o(.text.uart_init) refers to initcom.o(.bss.uart_init.buffer_msgQ) for uart_init.buffer_msgQ
    initcom.o(.text.uart_init) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for osMessageQueueReset
    initcom.o(.ARM.exidx.text.uart_init) refers to initcom.o(.text.uart_init) for [Anonymous Symbol]
    initcom.o(.text.wifi_init) refers to initcom.o(.rodata.str1.1) for .L.str.1
    initcom.o(.text.wifi_init) refers to initcom.o(.text.concatenate3Strings) for concatenate3Strings
    initcom.o(.text.wifi_init) refers to initcom.o(.bss.wifi_init.commandBuffer) for wifi_init.commandBuffer
    initcom.o(.text.wifi_init) refers to initcom.o(.rodata.wifi_init.udpCommand) for wifi_init.udpCommand
    initcom.o(.text.wifi_init) refers to snprintf.o(.text) for snprintf
    initcom.o(.text.wifi_init) refers to main.o(.bss.huart2) for huart2
    initcom.o(.text.wifi_init) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) for HAL_UART_Transmit
    initcom.o(.text.wifi_init) refers to rtx_delay.o(.text.osDelay) for osDelay
    initcom.o(.text.wifi_init) refers to wifimain.o(.bss.MsgQId_nix) for MsgQId_nix
    initcom.o(.text.wifi_init) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for osMessageQueueGetCount
    initcom.o(.text.wifi_init) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    initcom.o(.text.wifi_init) refers to initcom.o(.bss.wifi_init.buffer_msgQ) for wifi_init.buffer_msgQ
    initcom.o(.ARM.exidx.text.wifi_init) refers to initcom.o(.text.wifi_init) for [Anonymous Symbol]
    transmitthread.o(.text.transmitThread) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    transmitthread.o(.text.transmitThread) refers to transmitthread.o(.bss.transmitId) for transmitId
    transmitthread.o(.text.transmitThread) refers to rtx_thread.o(.text.osThreadSetPriority) for osThreadSetPriority
    transmitthread.o(.text.transmitThread) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    transmitthread.o(.text.transmitThread) refers to transmitthread.o(.bss.uartTxSemaphore) for uartTxSemaphore
    transmitthread.o(.text.transmitThread) refers to potentiometervoltage.o(.text.getBatteryVoltageRaw) for getBatteryVoltageRaw
    transmitthread.o(.text.transmitThread) refers to poticalc.o(.text.calcPotiRaw2Volt) for calcPotiRaw2Volt
    transmitthread.o(.text.transmitThread) refers to wifimain.o(.bss.driveControlMutId) for driveControlMutId
    transmitthread.o(.text.transmitThread) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    transmitthread.o(.text.transmitThread) refers to drivegettersetter.o(.text.motGetCurrSpeed) for motGetCurrSpeed
    transmitthread.o(.text.transmitThread) refers to wifimain.o(.bss.driveInfo) for driveInfo
    transmitthread.o(.text.transmitThread) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    transmitthread.o(.text.transmitThread) refers to transmitthread.o(.bss.transmitThread.buffer_stream) for transmitThread.buffer_stream
    transmitthread.o(.text.transmitThread) refers to pb_encode.o(.text.pb_ostream_from_buffer) for pb_ostream_from_buffer
    transmitthread.o(.text.transmitThread) refers to ftbot.pb.o(.rodata.ftbot_RobotStatus_msg) for ftbot_RobotStatus_msg
    transmitthread.o(.text.transmitThread) refers to pb_encode.o(.text.pb_encode) for pb_encode
    transmitthread.o(.text.transmitThread) refers to transmitthread.o(.bss.transmitThread.buffer_transmit) for transmitThread.buffer_transmit
    transmitthread.o(.text.transmitThread) refers to transmitthread.o(.rodata.str1.1) for .L.str
    transmitthread.o(.text.transmitThread) refers to snprintf.o(.text) for snprintf
    transmitthread.o(.text.transmitThread) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    transmitthread.o(.text.transmitThread) refers to main.o(.bss.huart2) for huart2
    transmitthread.o(.text.transmitThread) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) for HAL_UART_Transmit_DMA
    transmitthread.o(.text.transmitThread) refers to rtx_delay.o(.text.osDelay) for osDelay
    transmitthread.o(.ARM.exidx.text.transmitThread) refers to transmitthread.o(.text.transmitThread) for [Anonymous Symbol]
    transmitthread.o(.text.HAL_UART_TxCpltCallback) refers to transmitthread.o(.bss.uartTxSemaphore) for uartTxSemaphore
    transmitthread.o(.text.HAL_UART_TxCpltCallback) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    transmitthread.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to transmitthread.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    poticalc.o(.ARM.exidx.text.calcPotiRaw2Volt) refers to poticalc.o(.text.calcPotiRaw2Volt) for [Anonymous Symbol]
    potentiometervoltage.o(.text.getBatteryVoltageRaw) refers to main.o(.bss.hadc1) for hadc1
    potentiometervoltage.o(.text.getBatteryVoltageRaw) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Start) for HAL_ADC_Start
    potentiometervoltage.o(.text.getBatteryVoltageRaw) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) for HAL_ADC_PollForConversion
    potentiometervoltage.o(.text.getBatteryVoltageRaw) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_GetValue) for HAL_ADC_GetValue
    potentiometervoltage.o(.ARM.exidx.text.getBatteryVoltageRaw) refers to potentiometervoltage.o(.text.getBatteryVoltageRaw) for [Anonymous Symbol]
    receivethread.o(.text.receiveThread) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    receivethread.o(.text.receiveThread) refers to receivethread.o(.bss.receiveId) for receiveId
    receivethread.o(.text.receiveThread) refers to rtx_thread.o(.text.osThreadSetPriority) for osThreadSetPriority
    receivethread.o(.text.receiveThread) refers to wifimain.o(.bss.MsgQId_nix) for MsgQId_nix
    receivethread.o(.text.receiveThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    receivethread.o(.text.receiveThread) refers to receivethread.o(.bss.receiveThread.buffer_rx) for receiveThread.buffer_rx
    receivethread.o(.text.receiveThread) refers to receivethread.o(.rodata.str1.1) for .L.str
    receivethread.o(.text.receiveThread) refers to strncmp.o(.text) for strncmp
    receivethread.o(.text.receiveThread) refers to strchr.o(.text) for strchr
    receivethread.o(.text.receiveThread) refers to atoi.o(.text) for atoi
    receivethread.o(.text.receiveThread) refers to receivethread.o(.text.processReceivedData) for processReceivedData
    receivethread.o(.text.receiveThread) refers to rt_memclr.o(.text) for __aeabi_memclr
    receivethread.o(.ARM.exidx.text.receiveThread) refers to receivethread.o(.text.receiveThread) for [Anonymous Symbol]
    receivethread.o(.text.processReceivedData) refers to pb_decode.o(.text.pb_istream_from_buffer) for pb_istream_from_buffer
    receivethread.o(.text.processReceivedData) refers to ftbot.pb.o(.rodata.ftbot_SetSpeedSteering_msg) for ftbot_SetSpeedSteering_msg
    receivethread.o(.text.processReceivedData) refers to pb_decode.o(.text.pb_decode) for pb_decode
    receivethread.o(.text.processReceivedData) refers to receivethread.o(.text.convertSpeedSteeringToWheelSpeeds) for convertSpeedSteeringToWheelSpeeds
    receivethread.o(.text.processReceivedData) refers to drivegettersetter.o(.text.motSetNomSpeed) for motSetNomSpeed
    receivethread.o(.ARM.exidx.text.processReceivedData) refers to receivethread.o(.text.processReceivedData) for [Anonymous Symbol]
    receivethread.o(.ARM.exidx.text.convertSpeedSteeringToWheelSpeeds) refers to receivethread.o(.text.convertSpeedSteeringToWheelSpeeds) for [Anonymous Symbol]
    receiveinit.o(.text.receive_init) refers to main.o(.bss.huart2) for huart2
    receiveinit.o(.text.receive_init) refers to receiveinit.o(.text.RxHalfCpltCallback) for RxHalfCpltCallback
    receiveinit.o(.text.receive_init) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterCallback) for HAL_UART_RegisterCallback
    receiveinit.o(.text.receive_init) refers to receiveinit.o(.text.RxCpltCallback) for RxCpltCallback
    receiveinit.o(.text.receive_init) refers to receiveinit.o(ETTI4dmaVar) for buffer_dma
    receiveinit.o(.text.receive_init) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_DMA) for HAL_UART_Receive_DMA
    receiveinit.o(.ARM.exidx.text.receive_init) refers to receiveinit.o(.text.receive_init) for [Anonymous Symbol]
    receiveinit.o(.text.RxHalfCpltCallback) refers to wifimain.o(.bss.MsgQId_nix) for MsgQId_nix
    receiveinit.o(.text.RxHalfCpltCallback) refers to receiveinit.o(ETTI4dmaVar) for buffer_dma
    receiveinit.o(.text.RxHalfCpltCallback) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    receiveinit.o(.ARM.exidx.text.RxHalfCpltCallback) refers to receiveinit.o(.text.RxHalfCpltCallback) for [Anonymous Symbol]
    receiveinit.o(.text.RxCpltCallback) refers to wifimain.o(.bss.MsgQId_nix) for MsgQId_nix
    receiveinit.o(.text.RxCpltCallback) refers to receiveinit.o(ETTI4dmaVar) for buffer_dma
    receiveinit.o(.text.RxCpltCallback) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    receiveinit.o(.ARM.exidx.text.RxCpltCallback) refers to receiveinit.o(.text.RxCpltCallback) for [Anonymous Symbol]
    drivethread.o(.text.driveUserTimerCallback) refers to drivethread.o(.bss.driveId) for driveId
    drivethread.o(.text.driveUserTimerCallback) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    drivethread.o(.ARM.exidx.text.driveUserTimerCallback) refers to drivethread.o(.text.driveUserTimerCallback) for [Anonymous Symbol]
    drivethread.o(.text.driveThread) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    drivethread.o(.text.driveThread) refers to drivethread.o(.bss.driveId) for driveId
    drivethread.o(.text.driveThread) refers to rtx_thread.o(.text.osThreadSetPriority) for osThreadSetPriority
    drivethread.o(.text.driveThread) refers to wifimain.o(.bss.driveControlMutId) for driveControlMutId
    drivethread.o(.text.driveThread) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    drivethread.o(.text.driveThread) refers to drivethread.o(.data.leftMotorDescriptor) for leftMotorDescriptor
    drivethread.o(.text.driveThread) refers to drivethread.o(.data.rightMotorDescriptor) for rightMotorDescriptor
    drivethread.o(.text.driveThread) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    drivethread.o(.text.driveThread) refers to rtx_delay.o(.text.osDelay) for osDelay
    drivethread.o(.ARM.exidx.text.driveThread) refers to drivethread.o(.text.driveThread) for [Anonymous Symbol]
    drivegettersetter.o(.text.motSetNomSpeed) refers to drivethread.o(.bss.powerFail) for powerFail
    drivegettersetter.o(.text.motSetNomSpeed) refers to drivethread.o(.data.leftMotorDescriptor) for leftMotorDescriptor
    drivegettersetter.o(.text.motSetNomSpeed) refers to drivethread.o(.data.rightMotorDescriptor) for rightMotorDescriptor
    drivegettersetter.o(.ARM.exidx.text.motSetNomSpeed) refers to drivegettersetter.o(.text.motSetNomSpeed) for [Anonymous Symbol]
    drivegettersetter.o(.text.motGetCurrSpeed) refers to drivethread.o(.data.leftMotorDescriptor) for leftMotorDescriptor
    drivegettersetter.o(.text.motGetCurrSpeed) refers to drivethread.o(.data.rightMotorDescriptor) for rightMotorDescriptor
    drivegettersetter.o(.ARM.exidx.text.motGetCurrSpeed) refers to drivegettersetter.o(.text.motGetCurrSpeed) for [Anonymous Symbol]
    ftbot.pb.o(.rodata.ftbot_SetSpeedSteering_msg) refers to ftbot.pb.o(.rodata.ftbot_SetSpeedSteering_field_info) for ftbot_SetSpeedSteering_field_info
    ftbot.pb.o(.rodata.ftbot_SetSpeedSteering_msg) refers to ftbot.pb.o(.rodata.ftbot_SetSpeedSteering_submsg_info) for ftbot_SetSpeedSteering_submsg_info
    ftbot.pb.o(.rodata.ftbot_RobotStatus_msg) refers to ftbot.pb.o(.rodata.ftbot_RobotStatus_field_info) for ftbot_RobotStatus_field_info
    ftbot.pb.o(.rodata.ftbot_RobotStatus_msg) refers to ftbot.pb.o(.rodata.ftbot_RobotStatus_submsg_info) for ftbot_RobotStatus_submsg_info
    pb_common.o(.text.pb_field_iter_begin) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    pb_common.o(.text.pb_field_iter_begin) refers to pb_common.o(.text.load_descriptor_values) for load_descriptor_values
    pb_common.o(.ARM.exidx.text.pb_field_iter_begin) refers to pb_common.o(.text.pb_field_iter_begin) for [Anonymous Symbol]
    pb_common.o(.ARM.exidx.text.load_descriptor_values) refers to pb_common.o(.text.load_descriptor_values) for [Anonymous Symbol]
    pb_common.o(.text.pb_field_iter_begin_extension) refers to pb_common.o(.text.pb_field_iter_begin) for pb_field_iter_begin
    pb_common.o(.ARM.exidx.text.pb_field_iter_begin_extension) refers to pb_common.o(.text.pb_field_iter_begin_extension) for [Anonymous Symbol]
    pb_common.o(.text.pb_field_iter_next) refers to pb_common.o(.text.advance_iterator) for advance_iterator
    pb_common.o(.text.pb_field_iter_next) refers to pb_common.o(.text.load_descriptor_values) for load_descriptor_values
    pb_common.o(.ARM.exidx.text.pb_field_iter_next) refers to pb_common.o(.text.pb_field_iter_next) for [Anonymous Symbol]
    pb_common.o(.ARM.exidx.text.advance_iterator) refers to pb_common.o(.text.advance_iterator) for [Anonymous Symbol]
    pb_common.o(.text.pb_field_iter_find) refers to pb_common.o(.text.advance_iterator) for advance_iterator
    pb_common.o(.text.pb_field_iter_find) refers to pb_common.o(.text.load_descriptor_values) for load_descriptor_values
    pb_common.o(.ARM.exidx.text.pb_field_iter_find) refers to pb_common.o(.text.pb_field_iter_find) for [Anonymous Symbol]
    pb_common.o(.text.pb_field_iter_find_extension) refers to pb_common.o(.text.advance_iterator) for advance_iterator
    pb_common.o(.text.pb_field_iter_find_extension) refers to pb_common.o(.text.load_descriptor_values) for load_descriptor_values
    pb_common.o(.ARM.exidx.text.pb_field_iter_find_extension) refers to pb_common.o(.text.pb_field_iter_find_extension) for [Anonymous Symbol]
    pb_common.o(.text.pb_field_iter_begin_const) refers to pb_common.o(.text.pb_const_cast) for pb_const_cast
    pb_common.o(.text.pb_field_iter_begin_const) refers to pb_common.o(.text.pb_field_iter_begin) for pb_field_iter_begin
    pb_common.o(.ARM.exidx.text.pb_field_iter_begin_const) refers to pb_common.o(.text.pb_field_iter_begin_const) for [Anonymous Symbol]
    pb_common.o(.ARM.exidx.text.pb_const_cast) refers to pb_common.o(.text.pb_const_cast) for [Anonymous Symbol]
    pb_common.o(.text.pb_field_iter_begin_extension_const) refers to pb_common.o(.text.pb_const_cast) for pb_const_cast
    pb_common.o(.text.pb_field_iter_begin_extension_const) refers to pb_common.o(.text.pb_field_iter_begin_extension) for pb_field_iter_begin_extension
    pb_common.o(.ARM.exidx.text.pb_field_iter_begin_extension_const) refers to pb_common.o(.text.pb_field_iter_begin_extension_const) for [Anonymous Symbol]
    pb_common.o(.ARM.exidx.text.pb_default_field_callback) refers to pb_common.o(.text.pb_default_field_callback) for [Anonymous Symbol]
    pb_decode.o(.text.pb_read) refers to pb_decode.o(.text.buf_read) for buf_read
    pb_decode.o(.text.pb_read) refers to pb_decode.o(.rodata.str1.1) for .L.str
    pb_decode.o(.ARM.exidx.text.pb_read) refers to pb_decode.o(.text.pb_read) for [Anonymous Symbol]
    pb_decode.o(.text.buf_read) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    pb_decode.o(.ARM.exidx.text.buf_read) refers to pb_decode.o(.text.buf_read) for [Anonymous Symbol]
    pb_decode.o(.text.pb_istream_from_buffer) refers to pb_decode.o(.text.buf_read) for buf_read
    pb_decode.o(.ARM.exidx.text.pb_istream_from_buffer) refers to pb_decode.o(.text.pb_istream_from_buffer) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_varint32) refers to pb_decode.o(.text.pb_decode_varint32_eof) for pb_decode_varint32_eof
    pb_decode.o(.ARM.exidx.text.pb_decode_varint32) refers to pb_decode.o(.text.pb_decode_varint32) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_varint32_eof) refers to pb_decode.o(.text.pb_readbyte) for pb_readbyte
    pb_decode.o(.text.pb_decode_varint32_eof) refers to pb_decode.o(.rodata.str1.1) for .L.str.2
    pb_decode.o(.ARM.exidx.text.pb_decode_varint32_eof) refers to pb_decode.o(.text.pb_decode_varint32_eof) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_varint) refers to pb_decode.o(.text.pb_readbyte) for pb_readbyte
    pb_decode.o(.text.pb_decode_varint) refers to pb_decode.o(.rodata.str1.1) for .L.str.2
    pb_decode.o(.ARM.exidx.text.pb_decode_varint) refers to pb_decode.o(.text.pb_decode_varint) for [Anonymous Symbol]
    pb_decode.o(.text.pb_readbyte) refers to pb_decode.o(.rodata.str1.1) for .L.str
    pb_decode.o(.ARM.exidx.text.pb_readbyte) refers to pb_decode.o(.text.pb_readbyte) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_tag) refers to pb_decode.o(.text.pb_decode_varint32_eof) for pb_decode_varint32_eof
    pb_decode.o(.ARM.exidx.text.pb_decode_tag) refers to pb_decode.o(.text.pb_decode_tag) for [Anonymous Symbol]
    pb_decode.o(.text.pb_skip_field) refers to pb_decode.o(.text.pb_skip_varint) for pb_skip_varint
    pb_decode.o(.text.pb_skip_field) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.text.pb_skip_field) refers to pb_decode.o(.text.pb_skip_string) for pb_skip_string
    pb_decode.o(.text.pb_skip_field) refers to pb_decode.o(.rodata.str1.1) for .L.str.3
    pb_decode.o(.ARM.exidx.text.pb_skip_field) refers to pb_decode.o(.text.pb_skip_field) for [Anonymous Symbol]
    pb_decode.o(.text.pb_skip_varint) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.pb_skip_varint) refers to pb_decode.o(.text.pb_skip_varint) for [Anonymous Symbol]
    pb_decode.o(.text.pb_skip_string) refers to pb_decode.o(.text.pb_decode_varint32) for pb_decode_varint32
    pb_decode.o(.text.pb_skip_string) refers to pb_decode.o(.rodata.str1.1) for .L.str.5
    pb_decode.o(.text.pb_skip_string) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.pb_skip_string) refers to pb_decode.o(.text.pb_skip_string) for [Anonymous Symbol]
    pb_decode.o(.text.pb_make_string_substream) refers to pb_decode.o(.text.pb_decode_varint32) for pb_decode_varint32
    pb_decode.o(.text.pb_make_string_substream) refers to pb_decode.o(.rodata.str1.1) for .L.str.4
    pb_decode.o(.ARM.exidx.text.pb_make_string_substream) refers to pb_decode.o(.text.pb_make_string_substream) for [Anonymous Symbol]
    pb_decode.o(.text.pb_close_string_substream) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.pb_close_string_substream) refers to pb_decode.o(.text.pb_close_string_substream) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_ex) refers to pb_decode.o(.text.pb_decode_inner) for pb_decode_inner
    pb_decode.o(.text.pb_decode_ex) refers to pb_decode.o(.text.pb_make_string_substream) for pb_make_string_substream
    pb_decode.o(.text.pb_decode_ex) refers to pb_decode.o(.text.pb_close_string_substream) for pb_close_string_substream
    pb_decode.o(.ARM.exidx.text.pb_decode_ex) refers to pb_decode.o(.text.pb_decode_ex) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_inner) refers to pb_common.o(.text.pb_field_iter_begin) for pb_field_iter_begin
    pb_decode.o(.text.pb_decode_inner) refers to pb_decode.o(.text.pb_message_set_to_defaults) for pb_message_set_to_defaults
    pb_decode.o(.text.pb_decode_inner) refers to pb_decode.o(.rodata.str1.1) for .L.str.6
    pb_decode.o(.text.pb_decode_inner) refers to pb_decode.o(.text.pb_decode_tag) for pb_decode_tag
    pb_decode.o(.text.pb_decode_inner) refers to pb_common.o(.text.pb_field_iter_find) for pb_field_iter_find
    pb_decode.o(.text.pb_decode_inner) refers to pb_common.o(.text.pb_field_iter_find_extension) for pb_field_iter_find_extension
    pb_decode.o(.text.pb_decode_inner) refers to pb_decode.o(.text.decode_extension) for decode_extension
    pb_decode.o(.text.pb_decode_inner) refers to pb_decode.o(.text.pb_skip_field) for pb_skip_field
    pb_decode.o(.text.pb_decode_inner) refers to pb_decode.o(.text.decode_field) for decode_field
    pb_decode.o(.ARM.exidx.text.pb_decode_inner) refers to pb_decode.o(.text.pb_decode_inner) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode) refers to pb_decode.o(.text.pb_decode_inner) for pb_decode_inner
    pb_decode.o(.ARM.exidx.text.pb_decode) refers to pb_decode.o(.text.pb_decode) for [Anonymous Symbol]
    pb_decode.o(.ARM.exidx.text.pb_release) refers to pb_decode.o(.text.pb_release) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_bool) refers to pb_decode.o(.text.pb_decode_varint32) for pb_decode_varint32
    pb_decode.o(.ARM.exidx.text.pb_decode_bool) refers to pb_decode.o(.text.pb_decode_bool) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_svarint) refers to pb_decode.o(.text.pb_decode_varint) for pb_decode_varint
    pb_decode.o(.ARM.exidx.text.pb_decode_svarint) refers to pb_decode.o(.text.pb_decode_svarint) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_fixed32) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.pb_decode_fixed32) refers to pb_decode.o(.text.pb_decode_fixed32) for [Anonymous Symbol]
    pb_decode.o(.text.pb_decode_fixed64) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.pb_decode_fixed64) refers to pb_decode.o(.text.pb_decode_fixed64) for [Anonymous Symbol]
    pb_decode.o(.text.pb_message_set_to_defaults) refers to pb_decode.o(.text.pb_istream_from_buffer) for pb_istream_from_buffer
    pb_decode.o(.text.pb_message_set_to_defaults) refers to pb_decode.o(.text.pb_decode_tag) for pb_decode_tag
    pb_decode.o(.text.pb_message_set_to_defaults) refers to pb_decode.o(.text.pb_field_set_to_default) for pb_field_set_to_default
    pb_decode.o(.text.pb_message_set_to_defaults) refers to pb_decode.o(.text.decode_field) for decode_field
    pb_decode.o(.text.pb_message_set_to_defaults) refers to pb_common.o(.text.pb_field_iter_next) for pb_field_iter_next
    pb_decode.o(.ARM.exidx.text.pb_message_set_to_defaults) refers to pb_decode.o(.text.pb_message_set_to_defaults) for [Anonymous Symbol]
    pb_decode.o(.text.decode_extension) refers to pb_decode.o(.text.default_extension_decoder) for default_extension_decoder
    pb_decode.o(.ARM.exidx.text.decode_extension) refers to pb_decode.o(.text.decode_extension) for [Anonymous Symbol]
    pb_decode.o(.text.decode_field) refers to pb_decode.o(.text.decode_static_field) for decode_static_field
    pb_decode.o(.text.decode_field) refers to pb_decode.o(.text.decode_pointer_field) for decode_pointer_field
    pb_decode.o(.text.decode_field) refers to pb_decode.o(.text.decode_callback_field) for decode_callback_field
    pb_decode.o(.text.decode_field) refers to pb_decode.o(.rodata.str1.1) for .L.str.11
    pb_decode.o(.ARM.exidx.text.decode_field) refers to pb_decode.o(.text.decode_field) for [Anonymous Symbol]
    pb_decode.o(.text.pb_field_set_to_default) refers to pb_common.o(.text.pb_field_iter_begin_extension) for pb_field_iter_begin_extension
    pb_decode.o(.text.pb_field_set_to_default) refers to pb_decode.o(.text.pb_message_set_to_defaults) for pb_message_set_to_defaults
    pb_decode.o(.text.pb_field_set_to_default) refers to pb_common.o(.text.pb_field_iter_begin) for pb_field_iter_begin
    pb_decode.o(.text.pb_field_set_to_default) refers to rt_memclr.o(.text) for __aeabi_memclr
    pb_decode.o(.ARM.exidx.text.pb_field_set_to_default) refers to pb_decode.o(.text.pb_field_set_to_default) for [Anonymous Symbol]
    pb_decode.o(.text.default_extension_decoder) refers to pb_common.o(.text.pb_field_iter_begin_extension) for pb_field_iter_begin_extension
    pb_decode.o(.text.default_extension_decoder) refers to pb_decode.o(.rodata.str1.1) for .L.str.10
    pb_decode.o(.text.default_extension_decoder) refers to pb_decode.o(.text.decode_field) for decode_field
    pb_decode.o(.ARM.exidx.text.default_extension_decoder) refers to pb_decode.o(.text.default_extension_decoder) for [Anonymous Symbol]
    pb_decode.o(.text.decode_static_field) refers to pb_decode.o(.text.decode_basic_field) for decode_basic_field
    pb_decode.o(.text.decode_static_field) refers to pb_decode.o(.text.pb_make_string_substream) for pb_make_string_substream
    pb_decode.o(.text.decode_static_field) refers to pb_decode.o(.rodata.str1.1) for .L.str.12
    pb_decode.o(.text.decode_static_field) refers to pb_decode.o(.text.pb_close_string_substream) for pb_close_string_substream
    pb_decode.o(.text.decode_static_field) refers to rt_memclr.o(.text) for __aeabi_memclr
    pb_decode.o(.text.decode_static_field) refers to pb_common.o(.text.pb_field_iter_begin) for pb_field_iter_begin
    pb_decode.o(.text.decode_static_field) refers to pb_decode.o(.text.pb_message_set_to_defaults) for pb_message_set_to_defaults
    pb_decode.o(.ARM.exidx.text.decode_static_field) refers to pb_decode.o(.text.decode_static_field) for [Anonymous Symbol]
    pb_decode.o(.text.decode_pointer_field) refers to pb_decode.o(.rodata.str1.1) for .L.str.17
    pb_decode.o(.ARM.exidx.text.decode_pointer_field) refers to pb_decode.o(.text.decode_pointer_field) for [Anonymous Symbol]
    pb_decode.o(.text.decode_callback_field) refers to pb_decode.o(.text.pb_skip_field) for pb_skip_field
    pb_decode.o(.text.decode_callback_field) refers to pb_decode.o(.text.pb_make_string_substream) for pb_make_string_substream
    pb_decode.o(.text.decode_callback_field) refers to pb_decode.o(.rodata.str1.1) for .L.str.21
    pb_decode.o(.text.decode_callback_field) refers to pb_decode.o(.text.pb_close_string_substream) for pb_close_string_substream
    pb_decode.o(.text.decode_callback_field) refers to pb_decode.o(.text.read_raw_value) for read_raw_value
    pb_decode.o(.text.decode_callback_field) refers to pb_decode.o(.text.pb_istream_from_buffer) for pb_istream_from_buffer
    pb_decode.o(.ARM.exidx.text.decode_callback_field) refers to pb_decode.o(.text.decode_callback_field) for [Anonymous Symbol]
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.rodata.str1.1) for .L.str.13
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.text.pb_dec_bool) for pb_dec_bool
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.text.pb_dec_varint) for pb_dec_varint
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.text.pb_decode_fixed32) for pb_decode_fixed32
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.text.pb_decode_fixed64) for pb_decode_fixed64
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.text.pb_dec_bytes) for pb_dec_bytes
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.text.pb_dec_string) for pb_dec_string
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.text.pb_dec_submessage) for pb_dec_submessage
    pb_decode.o(.text.decode_basic_field) refers to pb_decode.o(.text.pb_dec_fixed_length_bytes) for pb_dec_fixed_length_bytes
    pb_decode.o(.ARM.exidx.text.decode_basic_field) refers to pb_decode.o(.text.decode_basic_field) for [Anonymous Symbol]
    pb_decode.o(.text.pb_dec_bool) refers to pb_decode.o(.text.pb_decode_bool) for pb_decode_bool
    pb_decode.o(.ARM.exidx.text.pb_dec_bool) refers to pb_decode.o(.text.pb_dec_bool) for [Anonymous Symbol]
    pb_decode.o(.text.pb_dec_varint) refers to pb_decode.o(.text.pb_decode_varint) for pb_decode_varint
    pb_decode.o(.text.pb_dec_varint) refers to pb_decode.o(.rodata.str1.1) for .L.str.14
    pb_decode.o(.text.pb_dec_varint) refers to pb_decode.o(.text.pb_decode_svarint) for pb_decode_svarint
    pb_decode.o(.ARM.exidx.text.pb_dec_varint) refers to pb_decode.o(.text.pb_dec_varint) for [Anonymous Symbol]
    pb_decode.o(.text.pb_dec_bytes) refers to pb_decode.o(.text.pb_decode_varint32) for pb_decode_varint32
    pb_decode.o(.text.pb_dec_bytes) refers to pb_decode.o(.rodata.str1.1) for .L.str.16
    pb_decode.o(.text.pb_dec_bytes) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.pb_dec_bytes) refers to pb_decode.o(.text.pb_dec_bytes) for [Anonymous Symbol]
    pb_decode.o(.text.pb_dec_string) refers to pb_decode.o(.text.pb_decode_varint32) for pb_decode_varint32
    pb_decode.o(.text.pb_dec_string) refers to pb_decode.o(.rodata.str1.1) for .L.str.5
    pb_decode.o(.text.pb_dec_string) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.pb_dec_string) refers to pb_decode.o(.text.pb_dec_string) for [Anonymous Symbol]
    pb_decode.o(.text.pb_dec_submessage) refers to pb_decode.o(.text.pb_make_string_substream) for pb_make_string_substream
    pb_decode.o(.text.pb_dec_submessage) refers to pb_decode.o(.rodata.str1.1) for .L.str.19
    pb_decode.o(.text.pb_dec_submessage) refers to pb_decode.o(.text.pb_decode_inner) for pb_decode_inner
    pb_decode.o(.text.pb_dec_submessage) refers to pb_decode.o(.text.pb_close_string_substream) for pb_close_string_substream
    pb_decode.o(.ARM.exidx.text.pb_dec_submessage) refers to pb_decode.o(.text.pb_dec_submessage) for [Anonymous Symbol]
    pb_decode.o(.text.pb_dec_fixed_length_bytes) refers to pb_decode.o(.text.pb_decode_varint32) for pb_decode_varint32
    pb_decode.o(.text.pb_dec_fixed_length_bytes) refers to pb_decode.o(.rodata.str1.1) for .L.str.16
    pb_decode.o(.text.pb_dec_fixed_length_bytes) refers to rt_memclr.o(.text) for __aeabi_memclr
    pb_decode.o(.text.pb_dec_fixed_length_bytes) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.pb_dec_fixed_length_bytes) refers to pb_decode.o(.text.pb_dec_fixed_length_bytes) for [Anonymous Symbol]
    pb_decode.o(.text.read_raw_value) refers to pb_decode.o(.rodata.str1.1) for .L.str.2
    pb_decode.o(.text.read_raw_value) refers to pb_decode.o(.text.pb_read) for pb_read
    pb_decode.o(.ARM.exidx.text.read_raw_value) refers to pb_decode.o(.text.read_raw_value) for [Anonymous Symbol]
    pb_encode.o(.text.pb_ostream_from_buffer) refers to pb_encode.o(.text.buf_write) for buf_write
    pb_encode.o(.ARM.exidx.text.pb_ostream_from_buffer) refers to pb_encode.o(.text.pb_ostream_from_buffer) for [Anonymous Symbol]
    pb_encode.o(.text.buf_write) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    pb_encode.o(.ARM.exidx.text.buf_write) refers to pb_encode.o(.text.buf_write) for [Anonymous Symbol]
    pb_encode.o(.text.pb_write) refers to pb_encode.o(.rodata.str1.1) for .L.str
    pb_encode.o(.ARM.exidx.text.pb_write) refers to pb_encode.o(.text.pb_write) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode) refers to pb_common.o(.text.pb_field_iter_begin_const) for pb_field_iter_begin_const
    pb_encode.o(.text.pb_encode) refers to pb_encode.o(.text.encode_extension_field) for encode_extension_field
    pb_encode.o(.text.pb_encode) refers to pb_encode.o(.text.encode_field) for encode_field
    pb_encode.o(.text.pb_encode) refers to pb_common.o(.text.pb_field_iter_next) for pb_field_iter_next
    pb_encode.o(.ARM.exidx.text.pb_encode) refers to pb_encode.o(.text.pb_encode) for [Anonymous Symbol]
    pb_encode.o(.text.encode_extension_field) refers to pb_encode.o(.text.default_extension_encoder) for default_extension_encoder
    pb_encode.o(.ARM.exidx.text.encode_extension_field) refers to pb_encode.o(.text.encode_extension_field) for [Anonymous Symbol]
    pb_encode.o(.text.encode_field) refers to pb_encode.o(.text.safe_read_bool) for safe_read_bool
    pb_encode.o(.text.encode_field) refers to pb_encode.o(.text.pb_check_proto3_default_value) for pb_check_proto3_default_value
    pb_encode.o(.text.encode_field) refers to pb_encode.o(.rodata.str1.1) for .L.str.5
    pb_encode.o(.text.encode_field) refers to pb_encode.o(.text.encode_callback_field) for encode_callback_field
    pb_encode.o(.text.encode_field) refers to pb_encode.o(.text.encode_array) for encode_array
    pb_encode.o(.text.encode_field) refers to pb_encode.o(.text.encode_basic_field) for encode_basic_field
    pb_encode.o(.ARM.exidx.text.encode_field) refers to pb_encode.o(.text.encode_field) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_ex) refers to pb_encode.o(.text.pb_encode_submessage) for pb_encode_submessage
    pb_encode.o(.text.pb_encode_ex) refers to pb_encode.o(.text.pb_encode) for pb_encode
    pb_encode.o(.text.pb_encode_ex) refers to pb_encode.o(.text.pb_write) for pb_write
    pb_encode.o(.ARM.exidx.text.pb_encode_ex) refers to pb_encode.o(.text.pb_encode_ex) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_submessage) refers to pb_encode.o(.text.pb_encode) for pb_encode
    pb_encode.o(.text.pb_encode_submessage) refers to pb_encode.o(.text.pb_encode_varint) for pb_encode_varint
    pb_encode.o(.text.pb_encode_submessage) refers to pb_encode.o(.text.pb_write) for pb_write
    pb_encode.o(.text.pb_encode_submessage) refers to pb_encode.o(.rodata.str1.1) for .L.str
    pb_encode.o(.ARM.exidx.text.pb_encode_submessage) refers to pb_encode.o(.text.pb_encode_submessage) for [Anonymous Symbol]
    pb_encode.o(.text.pb_get_encoded_size) refers to pb_encode.o(.text.pb_encode) for pb_encode
    pb_encode.o(.ARM.exidx.text.pb_get_encoded_size) refers to pb_encode.o(.text.pb_get_encoded_size) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_varint) refers to pb_encode.o(.text.pb_write) for pb_write
    pb_encode.o(.text.pb_encode_varint) refers to pb_encode.o(.text.pb_encode_varint_32) for pb_encode_varint_32
    pb_encode.o(.ARM.exidx.text.pb_encode_varint) refers to pb_encode.o(.text.pb_encode_varint) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_varint_32) refers to pb_encode.o(.text.pb_write) for pb_write
    pb_encode.o(.ARM.exidx.text.pb_encode_varint_32) refers to pb_encode.o(.text.pb_encode_varint_32) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_svarint) refers to pb_encode.o(.text.pb_encode_varint) for pb_encode_varint
    pb_encode.o(.ARM.exidx.text.pb_encode_svarint) refers to pb_encode.o(.text.pb_encode_svarint) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_fixed32) refers to pb_encode.o(.text.pb_write) for pb_write
    pb_encode.o(.ARM.exidx.text.pb_encode_fixed32) refers to pb_encode.o(.text.pb_encode_fixed32) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_fixed64) refers to pb_encode.o(.text.pb_write) for pb_write
    pb_encode.o(.ARM.exidx.text.pb_encode_fixed64) refers to pb_encode.o(.text.pb_encode_fixed64) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_tag) refers to pb_encode.o(.text.pb_encode_varint) for pb_encode_varint
    pb_encode.o(.ARM.exidx.text.pb_encode_tag) refers to pb_encode.o(.text.pb_encode_tag) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_tag_for_field) refers to pb_encode.o(.rodata.str1.1) for .L.str.2
    pb_encode.o(.text.pb_encode_tag_for_field) refers to pb_encode.o(.text.pb_encode_tag) for pb_encode_tag
    pb_encode.o(.ARM.exidx.text.pb_encode_tag_for_field) refers to pb_encode.o(.text.pb_encode_tag_for_field) for [Anonymous Symbol]
    pb_encode.o(.text.pb_encode_string) refers to pb_encode.o(.text.pb_encode_varint) for pb_encode_varint
    pb_encode.o(.text.pb_encode_string) refers to pb_encode.o(.text.pb_write) for pb_write
    pb_encode.o(.ARM.exidx.text.pb_encode_string) refers to pb_encode.o(.text.pb_encode_string) for [Anonymous Symbol]
    pb_encode.o(.text.default_extension_encoder) refers to pb_common.o(.text.pb_field_iter_begin_extension_const) for pb_field_iter_begin_extension_const
    pb_encode.o(.text.default_extension_encoder) refers to pb_encode.o(.rodata.str1.1) for .L.str.4
    pb_encode.o(.text.default_extension_encoder) refers to pb_encode.o(.text.encode_field) for encode_field
    pb_encode.o(.ARM.exidx.text.default_extension_encoder) refers to pb_encode.o(.text.default_extension_encoder) for [Anonymous Symbol]
    pb_encode.o(.ARM.exidx.text.safe_read_bool) refers to pb_encode.o(.text.safe_read_bool) for [Anonymous Symbol]
    pb_encode.o(.text.pb_check_proto3_default_value) refers to pb_encode.o(.text.safe_read_bool) for safe_read_bool
    pb_encode.o(.text.pb_check_proto3_default_value) refers to pb_common.o(.text.pb_field_iter_begin) for pb_field_iter_begin
    pb_encode.o(.text.pb_check_proto3_default_value) refers to pb_common.o(.text.pb_field_iter_next) for pb_field_iter_next
    pb_encode.o(.text.pb_check_proto3_default_value) refers to pb_common.o(.text.pb_default_field_callback) for pb_default_field_callback
    pb_encode.o(.ARM.exidx.text.pb_check_proto3_default_value) refers to pb_encode.o(.text.pb_check_proto3_default_value) for [Anonymous Symbol]
    pb_encode.o(.text.encode_callback_field) refers to pb_encode.o(.rodata.str1.1) for .L.str.6
    pb_encode.o(.ARM.exidx.text.encode_callback_field) refers to pb_encode.o(.text.encode_callback_field) for [Anonymous Symbol]
    pb_encode.o(.text.encode_array) refers to pb_encode.o(.rodata.str1.1) for .L.str.7
    pb_encode.o(.text.encode_array) refers to pb_encode.o(.text.pb_encode_tag) for pb_encode_tag
    pb_encode.o(.text.encode_array) refers to pb_encode.o(.text.pb_enc_varint) for pb_enc_varint
    pb_encode.o(.text.encode_array) refers to pb_encode.o(.text.pb_encode_varint) for pb_encode_varint
    pb_encode.o(.text.encode_array) refers to pb_encode.o(.text.pb_write) for pb_write
    pb_encode.o(.text.encode_array) refers to pb_encode.o(.text.pb_enc_fixed) for pb_enc_fixed
    pb_encode.o(.text.encode_array) refers to pb_encode.o(.text.pb_encode_tag_for_field) for pb_encode_tag_for_field
    pb_encode.o(.text.encode_array) refers to pb_encode.o(.text.encode_basic_field) for encode_basic_field
    pb_encode.o(.ARM.exidx.text.encode_array) refers to pb_encode.o(.text.encode_array) for [Anonymous Symbol]
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.text.pb_encode_tag_for_field) for pb_encode_tag_for_field
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.text.pb_enc_bool) for pb_enc_bool
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.text.pb_enc_varint) for pb_enc_varint
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.text.pb_enc_fixed) for pb_enc_fixed
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.text.pb_enc_bytes) for pb_enc_bytes
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.text.pb_enc_string) for pb_enc_string
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.text.pb_enc_submessage) for pb_enc_submessage
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.text.pb_enc_fixed_length_bytes) for pb_enc_fixed_length_bytes
    pb_encode.o(.text.encode_basic_field) refers to pb_encode.o(.rodata.str1.1) for .L.str.2
    pb_encode.o(.ARM.exidx.text.encode_basic_field) refers to pb_encode.o(.text.encode_basic_field) for [Anonymous Symbol]
    pb_encode.o(.text.pb_enc_varint) refers to pb_encode.o(.rodata.str1.1) for .L.str.9
    pb_encode.o(.text.pb_enc_varint) refers to pb_encode.o(.text.pb_encode_varint) for pb_encode_varint
    pb_encode.o(.text.pb_enc_varint) refers to pb_encode.o(.text.pb_encode_svarint) for pb_encode_svarint
    pb_encode.o(.ARM.exidx.text.pb_enc_varint) refers to pb_encode.o(.text.pb_enc_varint) for [Anonymous Symbol]
    pb_encode.o(.text.pb_enc_fixed) refers to pb_encode.o(.text.pb_encode_fixed32) for pb_encode_fixed32
    pb_encode.o(.text.pb_enc_fixed) refers to pb_encode.o(.text.pb_encode_fixed64) for pb_encode_fixed64
    pb_encode.o(.text.pb_enc_fixed) refers to pb_encode.o(.rodata.str1.1) for .L.str.9
    pb_encode.o(.ARM.exidx.text.pb_enc_fixed) refers to pb_encode.o(.text.pb_enc_fixed) for [Anonymous Symbol]
    pb_encode.o(.text.pb_enc_bool) refers to pb_encode.o(.text.safe_read_bool) for safe_read_bool
    pb_encode.o(.text.pb_enc_bool) refers to pb_encode.o(.text.pb_encode_varint) for pb_encode_varint
    pb_encode.o(.ARM.exidx.text.pb_enc_bool) refers to pb_encode.o(.text.pb_enc_bool) for [Anonymous Symbol]
    pb_encode.o(.text.pb_enc_bytes) refers to pb_encode.o(.text.pb_encode_string) for pb_encode_string
    pb_encode.o(.text.pb_enc_bytes) refers to pb_encode.o(.rodata.str1.1) for .L.str.10
    pb_encode.o(.ARM.exidx.text.pb_enc_bytes) refers to pb_encode.o(.text.pb_enc_bytes) for [Anonymous Symbol]
    pb_encode.o(.text.pb_enc_string) refers to pb_encode.o(.rodata.str1.1) for .L.str.11
    pb_encode.o(.text.pb_enc_string) refers to pb_encode.o(.text.pb_encode_string) for pb_encode_string
    pb_encode.o(.ARM.exidx.text.pb_enc_string) refers to pb_encode.o(.text.pb_enc_string) for [Anonymous Symbol]
    pb_encode.o(.text.pb_enc_submessage) refers to pb_encode.o(.rodata.str1.1) for .L.str.13
    pb_encode.o(.text.pb_enc_submessage) refers to pb_encode.o(.text.pb_encode_submessage) for pb_encode_submessage
    pb_encode.o(.ARM.exidx.text.pb_enc_submessage) refers to pb_encode.o(.text.pb_enc_submessage) for [Anonymous Symbol]
    pb_encode.o(.text.pb_enc_fixed_length_bytes) refers to pb_encode.o(.text.pb_encode_string) for pb_encode_string
    pb_encode.o(.ARM.exidx.text.pb_enc_fixed_length_bytes) refers to pb_encode.o(.text.pb_enc_fixed_length_bytes) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.MPU_Config) for MPU_Config
    main.o(.text.main) refers to stm32f7xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to main.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to main.o(.text.MX_DMA_Init) for MX_DMA_Init
    main.o(.text.main) refers to main.o(.text.MX_USART6_UART_Init) for MX_USART6_UART_Init
    main.o(.text.main) refers to main.o(.text.MX_USART2_UART_Init) for MX_USART2_UART_Init
    main.o(.text.main) refers to main.o(.text.MX_ADC1_Init) for MX_ADC1_Init
    main.o(.text.main) refers to main.o(.text.MX_CRC_Init) for MX_CRC_Init
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to wifimain.o(.text.mainThread) for mainThread
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable) for HAL_MPU_Disable
    main.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for HAL_MPU_ConfigRegion
    main.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable) for HAL_MPU_Enable
    main.o(.ARM.exidx.text.MPU_Config) refers to main.o(.text.MPU_Config) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for HAL_PWREx_EnableOverDrive
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.MX_GPIO_Init) refers to main.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    main.o(.text.MX_DMA_Init) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    main.o(.text.MX_DMA_Init) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    main.o(.ARM.exidx.text.MX_DMA_Init) refers to main.o(.text.MX_DMA_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.MX_USART6_UART_Init) refers to main.o(.text.MX_USART6_UART_Init) for [Anonymous Symbol]
    main.o(.text.MX_USART2_UART_Init) refers to main.o(.bss.huart2) for huart2
    main.o(.text.MX_USART2_UART_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    main.o(.text.MX_USART2_UART_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.ARM.exidx.text.MX_USART2_UART_Init) refers to main.o(.text.MX_USART2_UART_Init) for [Anonymous Symbol]
    main.o(.text.MX_ADC1_Init) refers to main.o(.bss.hadc1) for hadc1
    main.o(.text.MX_ADC1_Init) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) for HAL_ADC_Init
    main.o(.text.MX_ADC1_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.text.MX_ADC1_Init) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) for HAL_ADC_ConfigChannel
    main.o(.ARM.exidx.text.MX_ADC1_Init) refers to main.o(.text.MX_ADC1_Init) for [Anonymous Symbol]
    main.o(.text.MX_CRC_Init) refers to main.o(.bss.hcrc) for hcrc
    main.o(.text.MX_CRC_Init) refers to stm32f7xx_hal_crc.o(.text.HAL_CRC_Init) for HAL_CRC_Init
    main.o(.text.MX_CRC_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.ARM.exidx.text.MX_CRC_Init) refers to main.o(.text.MX_CRC_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.text.HAL_TIM_PeriodElapsedCallback) refers to stm32f7xx_hal.o(.text.HAL_IncTick) for HAL_IncTick
    main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.DMA1_Stream5_IRQHandler) refers to main.o(.bss.hdma_usart2_rx) for hdma_usart2_rx
    stm32f7xx_it.o(.text.DMA1_Stream5_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.DMA1_Stream5_IRQHandler) refers to stm32f7xx_it.o(.text.DMA1_Stream5_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.DMA1_Stream6_IRQHandler) refers to main.o(.bss.hdma_usart2_tx) for hdma_usart2_tx
    stm32f7xx_it.o(.text.DMA1_Stream6_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.DMA1_Stream6_IRQHandler) refers to stm32f7xx_it.o(.text.DMA1_Stream6_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.USART2_IRQHandler) refers to main.o(.bss.huart2) for huart2
    stm32f7xx_it.o(.text.USART2_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.USART2_IRQHandler) refers to stm32f7xx_it.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler) refers to stm32f7xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.TIM6_DAC_IRQHandler) refers to stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler) refers to main.o(.bss.hdma_usart6_rx) for hdma_usart6_rx
    stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.DMA2_Stream1_IRQHandler) refers to stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler) refers to main.o(.bss.hdma_usart6_tx) for hdma_usart6_tx
    stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.DMA2_Stream6_IRQHandler) refers to stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.USART6_IRQHandler) refers to main.o(.bss.huart6) for huart6
    stm32f7xx_it.o(.text.USART6_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for HAL_UART_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.USART6_IRQHandler) refers to stm32f7xx_it.o(.text.USART6_IRQHandler) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    irq_armv7m.o(.text) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsException) refers to rtx_delay.o(.text.IsException) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_delay.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsException) refers to rtx_evflags.o(.text.IsException) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_evflags.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for isrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for EventFlagsClear
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for isrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsEventFlagsPtrValid) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_evflags.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_evflags.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsSet) refers to rtx_evflags.o(.text.atomic_set32) for atomic_set32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxObject) refers to rtx_evflags.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_set32) refers to rtx_evflags.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsClear) refers to rtx_evflags.o(.text.atomic_clr32) for atomic_clr32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_clr32) refers to rtx_evflags.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxEventFlagsDestroy) for osRtxEventFlagsDestroy
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.osRtxEventFlagsDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.osRtxEventFlagsDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.osRtxEventFlagsDestroy) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsDestroy) refers to rtx_evflags.o(.text.osRtxEventFlagsDestroy) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelProtect) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtected) refers to rtx_evr.o(.text.EvrRtxKernelProtected) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetClass) refers to rtx_evr.o(.text.EvrRtxThreadGetClass) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetZone) refers to rtx_evr.o(.text.EvrRtxThreadGetZone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdogDone) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdogDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPrivilegedProtected) refers to rtx_evr.o(.text.EvrRtxThreadPrivilegedProtected) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadTerminateZone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadWatchdogExpired) refers to rtx_evr.o(.text.EvrRtxThreadWatchdogExpired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for osRtxKernelBeforeInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsException) refers to rtx_kernel.o(.text.IsException) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_kernel.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsPrivileged) refers to rtx_kernel.o(.text.IsPrivileged) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.1) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.osRtxKernelState) for osRtxKernelState
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsFault) for IsFault
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsSVCallIrq) for IsSVCallIrq
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsPendSvIrq) for IsPendSvIrq
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsTickIrq) for IsTickIrq
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsFault) refers to rtx_kernel.o(.text.IsFault) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsSVCallIrq) refers to rtx_kernel.o(.text.IsSVCallIrq) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsPendSvIrq) refers to rtx_kernel.o(.text.IsPendSvIrq) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsTickIrq) refers to rtx_kernel.o(.text.IsTickIrq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelProtect) for EvrRtxKernelProtect
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for svcRtxKernelProtect
    rtx_kernel.o(.ARM.exidx.text.osKernelProtect) refers to rtx_kernel.o(.text.osKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelDestroyClass) for EvrRtxKernelDestroyClass
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.IsTickIrq) for IsTickIrq
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for svcRtxKernelDestroyClass
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.osKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelState) refers to rtx_kernel.o(.text.osRtxKernelState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.SVC_Setup) for SVC_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.SVC_Setup) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    rtx_kernel.o(.ARM.exidx.text.SVC_Setup) refers to rtx_kernel.o(.text.SVC_Setup) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.KernelBlock) for KernelBlock
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelBlock) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.GetPendSV) for GetPendSV
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.ClrPendSV) for ClrPendSV
    rtx_kernel.o(.ARM.exidx.text.KernelBlock) refers to rtx_kernel.o(.text.KernelBlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.GetPendSV) refers to rtx_kernel.o(.text.GetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.ClrPendSV) refers to rtx_kernel.o(.text.ClrPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.KernelUnblock) for KernelUnblock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.text.SetPendSV) for SetPendSV
    rtx_kernel.o(.text.KernelUnblock) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.ARM.exidx.text.KernelUnblock) refers to rtx_kernel.o(.text.KernelUnblock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.SetPendSV) refers to rtx_kernel.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.1) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.$Sub$$_fp_init) refers to fpinit.o(x$fpl$fpinit) for $Super$$_fp_init
    rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init) refers to rtx_lib.o(.text.$Sub$$_fp_init) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemHeadPtr) refers to rtx_memory.o(.text.MemHeadPtr) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemBlockPtr) refers to rtx_memory.o(.text.MemBlockPtr) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_link_get) for atomic_link_get
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_inc32) for atomic_inc32
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_get) refers to rtx_mempool.o(.text.atomic_link_get) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_inc32) refers to rtx_mempool.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_link_put) for atomic_link_put
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_dec32) for atomic_dec32
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_put) refers to rtx_mempool.o(.text.atomic_link_put) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_dec32) refers to rtx_mempool.o(.text.atomic_dec32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsException) refers to rtx_mempool.o(.text.IsException) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mempool.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for isrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for isrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsMemoryPoolPtrValid) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxObject) refers to rtx_mempool.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolDestroy) for osRtxMemoryPoolDestroy
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.osRtxMemoryPoolDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.osRtxMemoryPoolDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osRtxMemoryPoolDestroy) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolDestroy) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsException) refers to rtx_msgqueue.o(.text.IsException) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_msgqueue.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for isrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for isrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsMessageQueuePtrValid) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxObject) refers to rtx_msgqueue.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.atomic_inc32) for atomic_inc32
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32) refers to rtx_msgqueue.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for atomic_dec32_nz
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_wr8) for atomic_wr8
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8) refers to rtx_msgqueue.o(.text.atomic_wr8) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) for osRtxMessageQueueDestroy
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueDestroy) refers to rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxObject) refers to rtx_mutex.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsException) refers to rtx_mutex.o(.text.IsException) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mutex.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsMutexPtrValid) refers to rtx_mutex.o(.text.IsMutexPtrValid) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexId) refers to rtx_mutex.o(.text.osRtxMutexId) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexOwnerUnlock) for osRtxMutexOwnerUnlock
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexDestroy) for osRtxMutexDestroy
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerUnlock) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.osRtxMutexOwnerUnlock) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.osRtxMutexOwnerUnlock) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerUnlock) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerUnlock) refers to rtx_mutex.o(.text.osRtxMutexOwnerUnlock) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.osRtxMutexDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.osRtxMutexDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.osRtxMutexDestroy) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexDestroy) refers to rtx_mutex.o(.text.osRtxMutexDestroy) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsException) refers to rtx_semaphore.o(.text.IsException) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_semaphore.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for isrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for isrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsSemaphorePtrValid) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxObject) refers to rtx_semaphore.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxSemaphoreDestroy) for osRtxSemaphoreDestroy
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphoreDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.osRtxSemaphoreDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.osRtxSemaphoreDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.osRtxSemaphoreDestroy) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreDestroy) refers to rtx_semaphore.o(.text.osRtxSemaphoreDestroy) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_system.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.isr_queue_get) for isr_queue_get
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxEventFlagsObject) for osRtxEventFlagsObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxSemaphoreObject) for osRtxSemaphoreObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for osRtxMemoryPoolObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMessageObject) for osRtxMessageObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_get) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.osRtxObject) for osRtxObject
    rtx_system.o(.ARM.exidx.text.isr_queue_get) refers to rtx_system.o(.text.isr_queue_get) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_system.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject) refers to rtx_system.o(.text.osRtxEventFlagsObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject) refers to rtx_system.o(.text.osRtxSemaphoreObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMessageObject) refers to rtx_system.o(.text.osRtxMessageObject) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.isr_queue_put) for isr_queue_put
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.SetPendSV) for SetPendSV
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_put) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.ARM.exidx.text.isr_queue_put) refers to rtx_system.o(.text.isr_queue_put) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.SetPendSV) refers to rtx_system.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_system.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lim) refers to rtx_system.o(.text.atomic_inc16_lim) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxObject) refers to rtx_system.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_system.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_thread.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxObject) refers to rtx_thread.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMutexObject) for osRtxMutexObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMutexObject) refers to rtx_thread.o(.text.osRtxMutexObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.StackOffsetR0) for StackOffsetR0
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.StackOffsetR0) refers to rtx_thread.o(.text.StackOffsetR0) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.SetPrivileged) for SetPrivileged
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.SetPrivileged) refers to rtx_thread.o(.text.SetPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_thread.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for osRtxThreadBeforeFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadId) refers to rtx_thread.o(.text.osRtxThreadId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadEntry) for osThreadEntry
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.xPSR_InitVal) for xPSR_InitVal
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsException) refers to rtx_thread.o(.text.IsException) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for svcRtxThreadGetClass
    rtx_thread.o(.ARM.exidx.text.osThreadGetClass) refers to rtx_thread.o(.text.osThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for svcRtxThreadGetZone
    rtx_thread.o(.ARM.exidx.text.osThreadGetZone) refers to rtx_thread.o(.text.osThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdog) for EvrRtxThreadFeedWatchdog
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for svcRtxThreadFeedWatchdog
    rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.osThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadProtectPrivileged) for EvrRtxThreadProtectPrivileged
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for svcRtxThreadProtectPrivileged
    rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.osThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadSuspendClass) for EvrRtxThreadSuspendClass
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.IsTickIrq) for IsTickIrq
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for svcRtxThreadSuspendClass
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass) refers to rtx_thread.o(.text.osThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsTickIrq) refers to rtx_thread.o(.text.IsTickIrq) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadResumeClass) for EvrRtxThreadResumeClass
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.IsTickIrq) for IsTickIrq
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for svcRtxThreadResumeClass
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadResumeClass) refers to rtx_thread.o(.text.osThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadTerminateZone) for EvrRtxThreadTerminateZone
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsFault) for IsFault
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsSVCallIrq) for IsSVCallIrq
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsPendSvIrq) for IsPendSvIrq
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsTickIrq) for IsTickIrq
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.svcRtxThreadTerminateZone) for svcRtxThreadTerminateZone
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone) refers to rtx_thread.o(.text.osThreadTerminateZone) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsFault) refers to rtx_thread.o(.text.IsFault) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsSVCallIrq) refers to rtx_thread.o(.text.IsSVCallIrq) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsPendSvIrq) refers to rtx_thread.o(.text.IsPendSvIrq) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminateZone) refers to rtx_thread.o(.text.svcRtxThreadTerminateZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for svcRtxThreadSetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.osThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for svcRtxThreadGetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.osThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for isrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsThreadPtrValid) refers to rtx_thread.o(.text.IsThreadPtrValid) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadEntry) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.xPSR_InitVal) refers to rtx_thread.o(.text.xPSR_InitVal) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_thread.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_thread.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadState) for osRtxThreadState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadState) refers to rtx_thread.o(.text.osRtxThreadState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for osRtxThreadPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsSet) refers to rtx_thread.o(.text.atomic_set32) for atomic_set32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_set32) refers to rtx_thread.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for ThreadFlagsClear
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsClear) refers to rtx_thread.o(.text.atomic_clr32) for atomic_clr32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_clr32) refers to rtx_thread.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerUnlink) for TimerUnlink
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsException) refers to rtx_timer.o(.text.IsException) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_timer.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerUnlink) refers to rtx_timer.o(.text.TimerUnlink) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsTimerPtrValid) refers to rtx_timer.o(.text.IsTimerPtrValid) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.osRtxTimerId) refers to rtx_timer.o(.text.osRtxTimerId) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.osRtxTimerDestroy) for osRtxTimerDestroy
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.osRtxTimerDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.osRtxTimerDestroy) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.ARM.exidx.text.osRtxTimerDestroy) refers to rtx_timer.o(.text.osRtxTimerDestroy) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    retarget_io.o(.text._sys_open) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text._sys_open) refers to strcmpv7m_pel.o(.text) for strcmp
    retarget_io.o(.ARM.exidx.text._sys_open) refers to retarget_io.o(.text._sys_open) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_close) refers to retarget_io.o(.text._sys_close) for [Anonymous Symbol]
    retarget_io.o(.text._sys_write) refers to e4ftbotterminal.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text._sys_write) refers to retarget_io.o(.text._sys_write) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_read) refers to retarget_io.o(.text._sys_read) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_istty) refers to retarget_io.o(.text._sys_istty) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_seek) refers to retarget_io.o(.text._sys_seek) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_flen) refers to retarget_io.o(.text._sys_flen) for [Anonymous Symbol]
    retarget_os_rtos2.o(.text._mutex_initialize) refers to retarget_os_rtos2.o(.text.os_kernel_is_initialized) for os_kernel_is_initialized
    retarget_os_rtos2.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    retarget_os_rtos2.o(.ARM.exidx.text._mutex_initialize) refers to retarget_os_rtos2.o(.text._mutex_initialize) for [Anonymous Symbol]
    retarget_os_rtos2.o(.text.os_kernel_is_initialized) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    retarget_os_rtos2.o(.ARM.exidx.text.os_kernel_is_initialized) refers to retarget_os_rtos2.o(.text.os_kernel_is_initialized) for [Anonymous Symbol]
    retarget_os_rtos2.o(.text._mutex_acquire) refers to retarget_os_rtos2.o(.text.os_kernel_is_running) for os_kernel_is_running
    retarget_os_rtos2.o(.text._mutex_acquire) refers to retarget_os_rtos2.o(.text.is_thread_mode) for is_thread_mode
    retarget_os_rtos2.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    retarget_os_rtos2.o(.ARM.exidx.text._mutex_acquire) refers to retarget_os_rtos2.o(.text._mutex_acquire) for [Anonymous Symbol]
    retarget_os_rtos2.o(.text.os_kernel_is_running) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    retarget_os_rtos2.o(.ARM.exidx.text.os_kernel_is_running) refers to retarget_os_rtos2.o(.text.os_kernel_is_running) for [Anonymous Symbol]
    retarget_os_rtos2.o(.ARM.exidx.text.is_thread_mode) refers to retarget_os_rtos2.o(.text.is_thread_mode) for [Anonymous Symbol]
    retarget_os_rtos2.o(.text._mutex_release) refers to retarget_os_rtos2.o(.text.os_kernel_is_running) for os_kernel_is_running
    retarget_os_rtos2.o(.text._mutex_release) refers to retarget_os_rtos2.o(.text.is_thread_mode) for is_thread_mode
    retarget_os_rtos2.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    retarget_os_rtos2.o(.ARM.exidx.text._mutex_release) refers to retarget_os_rtos2.o(.text._mutex_release) for [Anonymous Symbol]
    retarget_os_rtos2.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    retarget_os_rtos2.o(.ARM.exidx.text._mutex_free) refers to retarget_os_rtos2.o(.text._mutex_free) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f7xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f7xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f7xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_DeInit) refers to stm32f7xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f7xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f7xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_IncTick) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_IncTick) refers to stm32f7xx_hal.o(.bss.uwTick) for uwTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f7xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTick) refers to stm32f7xx_hal.o(.bss.uwTick) for uwTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f7xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f7xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_Delay) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal.o(.text.HAL_Delay) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f7xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f7xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f7xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f7xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f7xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f7xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f7xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f7xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableFMCMemorySwapping) refers to stm32f7xx_hal.o(.text.HAL_EnableFMCMemorySwapping) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableFMCMemorySwapping) refers to stm32f7xx_hal.o(.text.HAL_DisableFMCMemorySwapping) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for HAL_ADC_ConvHalfCpltCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for HAL_ADC_LevelOutOfWindowCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for HAL_ADCEx_InjectedConvCpltCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_ADC_MspInit) for HAL_ADC_MspInit
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f7xx_hal_adc.o(.text.ADC_Init) for ADC_Init
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Init) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Init) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvHalfCpltCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_LevelOutOfWindowCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ErrorCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspInit) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.ADC_Init) refers to stm32f7xx_hal_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32f7xx_hal_msp.o(.text.HAL_ADC_MspDeInit) for HAL_ADC_MspDeInit
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_DeInit) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspDeInit) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_RegisterCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_RegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for HAL_ADC_ConvHalfCpltCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for HAL_ADC_LevelOutOfWindowCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for HAL_ADCEx_InjectedConvCpltCallback
    stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback) refers to stm32f7xx_hal_msp.o(.text.HAL_ADC_MspInit) for HAL_ADC_MspInit
    stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback) refers to stm32f7xx_hal_msp.o(.text.HAL_ADC_MspDeInit) for HAL_ADC_MspDeInit
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_UnRegisterCallback) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Start) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Start) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForConversion) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_PollForConversion) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_PollForEvent) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForEvent) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_PollForEvent) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_IT) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_IT) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_IRQHandler) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32f7xx_hal_adc.o(.text.ADC_DMAConvCplt) for ADC_DMAConvCplt
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32f7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for ADC_DMAHalfConvCplt
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32f7xx_hal_adc.o(.text.ADC_DMAError) for ADC_DMAError
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_DMA) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAConvCplt) refers to stm32f7xx_hal_adc.o(.text.ADC_DMAConvCplt) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAHalfConvCplt) refers to stm32f7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAError) refers to stm32f7xx_hal_adc.o(.text.ADC_DMAError) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_DMA) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetValue) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_GetValue) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConfigChannel) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_AnalogWDGConfig) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetState) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetError) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_GetError) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart_IT) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop_IT) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedGetValue) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAConvCplt) for ADC_MultiModeDMAConvCplt
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAHalfConvCplt) for ADC_MultiModeDMAHalfConvCplt
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAError) for ADC_MultiModeDMAError
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAConvCplt) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAConvCplt) refers to stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAConvCplt) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAHalfConvCplt) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for HAL_ADC_ConvHalfCpltCallback
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAHalfConvCplt) refers to stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAHalfConvCplt) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAError) refers to stm32f7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAError) refers to stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAError) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeGetValue) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConvCpltCallback) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeConfigChannel) refers to stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f7xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f7xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.text.HAL_CRC_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_CRC_MspInit) for HAL_CRC_MspInit
    stm32f7xx_hal_crc.o(.text.HAL_CRC_Init) refers to stm32f7xx_hal_crc_ex.o(.text.HAL_CRCEx_Polynomial_Set) for HAL_CRCEx_Polynomial_Set
    stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_Init) refers to stm32f7xx_hal_crc.o(.text.HAL_CRC_Init) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_MspInit) refers to stm32f7xx_hal_crc.o(.text.HAL_CRC_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.text.HAL_CRC_DeInit) refers to stm32f7xx_hal_msp.o(.text.HAL_CRC_MspDeInit) for HAL_CRC_MspDeInit
    stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_DeInit) refers to stm32f7xx_hal_crc.o(.text.HAL_CRC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_MspDeInit) refers to stm32f7xx_hal_crc.o(.text.HAL_CRC_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.text.HAL_CRC_Accumulate) refers to stm32f7xx_hal_crc.o(.text.CRC_Handle_8) for CRC_Handle_8
    stm32f7xx_hal_crc.o(.text.HAL_CRC_Accumulate) refers to stm32f7xx_hal_crc.o(.text.CRC_Handle_16) for CRC_Handle_16
    stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_Accumulate) refers to stm32f7xx_hal_crc.o(.text.HAL_CRC_Accumulate) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.ARM.exidx.text.CRC_Handle_8) refers to stm32f7xx_hal_crc.o(.text.CRC_Handle_8) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.ARM.exidx.text.CRC_Handle_16) refers to stm32f7xx_hal_crc.o(.text.CRC_Handle_16) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.text.HAL_CRC_Calculate) refers to stm32f7xx_hal_crc.o(.text.CRC_Handle_8) for CRC_Handle_8
    stm32f7xx_hal_crc.o(.text.HAL_CRC_Calculate) refers to stm32f7xx_hal_crc.o(.text.CRC_Handle_16) for CRC_Handle_16
    stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_Calculate) refers to stm32f7xx_hal_crc.o(.text.HAL_CRC_Calculate) for [Anonymous Symbol]
    stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_GetState) refers to stm32f7xx_hal_crc.o(.text.HAL_CRC_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_crc_ex.o(.ARM.exidx.text.HAL_CRCEx_Polynomial_Set) refers to stm32f7xx_hal_crc_ex.o(.text.HAL_CRCEx_Polynomial_Set) for [Anonymous Symbol]
    stm32f7xx_hal_crc_ex.o(.ARM.exidx.text.HAL_CRCEx_Input_Data_Reverse) refers to stm32f7xx_hal_crc_ex.o(.text.HAL_CRCEx_Input_Data_Reverse) for [Anonymous Symbol]
    stm32f7xx_hal_crc_ex.o(.ARM.exidx.text.HAL_CRCEx_Output_Data_Reverse) refers to stm32f7xx_hal_crc_ex.o(.text.HAL_CRCEx_Output_Data_Reverse) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f7xx_hal_dma.o(.text.DMA_CheckFifoParam) for DMA_CheckFifoParam
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam) refers to stm32f7xx_hal_dma.o(.text.DMA_CheckFifoParam) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) refers to stm32f7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset) for DMA_CalcBaseAndBitshift.flagBitshiftOffset
    stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift) refers to stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32f7xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig) refers to stm32f7xx_hal_dma.o(.text.DMA_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32f7xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to stm32f7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart) refers to stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) for [Anonymous Symbol]
    stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig) refers to stm32f7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) for [Anonymous Symbol]
    stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory) refers to stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMAError) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for HAL_TIMEx_Break2Callback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for TIM_OC5_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for TIM_OC6_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC5_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC6_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI3_SetConfig) for TIM_TI3_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI4_SetConfig) for TIM_TI4_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI3_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI3_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI4_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI4_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for TIM_OC5_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for TIM_OC6_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) refers to stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.TIM_ITRx_SetConfig) for TIM_ITRx_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_ITRx_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_ITRx_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to transmitthread.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32f7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_AdvFeatureConfig) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) refers to stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_CheckIdleState) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_DeInit) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to transmitthread.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RegisterRxEventCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterRxEventCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterRxEventCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_UnRegisterRxEventCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterRxEventCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout) refers to stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Receive) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32f7xx_hal_uart.o(.text.UART_TxISR_16BIT) for UART_TxISR_16BIT
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32f7xx_hal_uart.o(.text.UART_TxISR_8BIT) for UART_TxISR_8BIT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT) refers to stm32f7xx_hal_uart.o(.text.UART_TxISR_16BIT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT) refers to stm32f7xx_hal_uart.o(.text.UART_TxISR_8BIT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_RxISR_16BIT) for UART_RxISR_16BIT
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_RxISR_8BIT) for UART_RxISR_8BIT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMATransmitCplt) for UART_DMATransmitCplt
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxHalfCplt) for UART_DMATxHalfCplt
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt) refers to stm32f7xx_hal_uart.o(.text.UART_DMATransmitCplt) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_DMAError) refers to stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer) for UART_EndTxTransfer
    stm32f7xx_hal_uart.o(.text.UART_DMAError) refers to stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAError) refers to stm32f7xx_hal_uart.o(.text.UART_DMAError) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMAReceiveCplt) for UART_DMAReceiveCplt
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxHalfCplt) for UART_DMARxHalfCplt
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DMAPause) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DMAResume) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer) for UART_EndTxTransfer
    stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndTxTransfer) refers to stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer) refers to stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Abort) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxAbortCallback) for UART_DMATxAbortCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxAbortCallback) for UART_DMARxAbortCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for UART_DMATxOnlyAbortCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for UART_DMARxOnlyAbortCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.UART_DMAAbortOnError) for UART_DMAAbortOnError
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.UART_EndTransmit_IT) for UART_EndTransmit_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError) refers to stm32f7xx_hal_uart.o(.text.UART_DMAAbortOnError) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndTransmit_IT) refers to stm32f7xx_hal_uart.o(.text.UART_EndTransmit_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ReceiverTimeout_Config) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_EnableReceiverTimeout) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_EnableReceiverTimeout) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DisableReceiverTimeout) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DisableReceiverTimeout) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnableMuteMode) refers to stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_DisableMuteMode) refers to stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode) refers to stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter) refers to stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver) refers to stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak) refers to stm32f7xx_hal_uart.o(.text.HAL_LIN_SendBreak) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_GetError) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT) refers to stm32f7xx_hal_uart.o(.text.UART_RxISR_16BIT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT) refers to stm32f7xx_hal_uart.o(.text.UART_RxISR_8BIT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt) refers to stm32f7xx_hal_uart.o(.text.UART_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_GetRxEventType) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_GetRxEventType) for [Anonymous Symbol]
    stm32f7xx_ll_crc.o(.text.LL_CRC_DeInit) refers to stm32f7xx_ll_crc.o(.text.LL_AHB1_GRP1_ForceReset) for LL_AHB1_GRP1_ForceReset
    stm32f7xx_ll_crc.o(.text.LL_CRC_DeInit) refers to stm32f7xx_ll_crc.o(.text.LL_AHB1_GRP1_ReleaseReset) for LL_AHB1_GRP1_ReleaseReset
    stm32f7xx_ll_crc.o(.ARM.exidx.text.LL_CRC_DeInit) refers to stm32f7xx_ll_crc.o(.text.LL_CRC_DeInit) for [Anonymous Symbol]
    stm32f7xx_ll_crc.o(.ARM.exidx.text.LL_AHB1_GRP1_ForceReset) refers to stm32f7xx_ll_crc.o(.text.LL_AHB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f7xx_ll_crc.o(.ARM.exidx.text.LL_AHB1_GRP1_ReleaseReset) refers to stm32f7xx_ll_crc.o(.text.LL_AHB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f7xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f7xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit) refers to stm32f7xx_ll_pwr.o(.text.LL_PWR_DeInit) for [Anonymous Symbol]
    stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for LL_RCC_HSI_SetCalibTrimming
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for LL_RCC_GetAPB1Prescaler
    stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for LL_RCC_GetAPB2Prescaler
    stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource) for LL_RCC_GetUSARTClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSE_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockSource) for LL_RCC_GetUARTClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUARTClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource) for LL_RCC_GetI2CClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource) for LL_RCC_GetI2SClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) for RCC_PLLI2S_GetFreqDomain_I2S
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN) for LL_RCC_PLLI2S_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetR) for LL_RCC_PLLI2S_GetR
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource) for LL_RCC_GetLPTIMClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockSource) for LL_RCC_GetSAIClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) for RCC_PLLSAI_GetFreqDomain_SAI
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) for RCC_PLLI2S_GetFreqDomain_SAI
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSAIClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN) for LL_RCC_PLLSAI_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetQ) for LL_RCC_PLLSAI_GetQ
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVQ) for LL_RCC_PLLSAI_GetDIVQ
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN) for LL_RCC_PLLI2S_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetQ) for LL_RCC_PLLI2S_GetQ
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetDIVQ) for LL_RCC_PLLI2S_GetDIVQ
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockSource) for LL_RCC_GetSDMMCClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCK48MClockSource) for LL_RCC_GetCK48MClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) for RCC_PLL_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) for RCC_PLLSAI_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSDMMCClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCK48MClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCK48MClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for LL_RCC_PLL_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetQ) for LL_RCC_PLL_GetQ
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN) for LL_RCC_PLLSAI_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetP) for LL_RCC_PLLSAI_GetP
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockSource) for LL_RCC_GetRNGClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) for RCC_PLL_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) for RCC_PLLSAI_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRNGClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockSource) for LL_RCC_GetCECClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCECClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCECClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource) for LL_RCC_GetUSBClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) for RCC_PLL_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) for RCC_PLLSAI_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLTDCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLTDCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) for RCC_PLLSAI_GetFreqDomain_LTDC
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLTDCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLTDCClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN) for LL_RCC_PLLSAI_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetR) for LL_RCC_PLLSAI_GetR
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVR) for LL_RCC_PLLSAI_GetDIVR
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.rodata.aRCC_PLLSAIDIVRPrescTable) for aRCC_PLLSAIDIVRPrescTable
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSPDIFRXClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSPDIFRXClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) for RCC_PLLI2S_GetFreqDomain_SPDIFRX
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSPDIFRXClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSPDIFRXClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN) for LL_RCC_PLLI2S_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetP) for LL_RCC_PLLI2S_GetP
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for LL_RCC_PLL_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetP) for LL_RCC_PLL_GetP
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetN) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetP) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetP) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetN) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetDIVQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetP) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetP) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetR) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetR) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetDIVR) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVR) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetN) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetDIVQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetDIVQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetP) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetP) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetR) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetR) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_Init1msTick) refers to stm32f7xx_ll_utils.o(.text.LL_InitTick) for LL_InitTick
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32f7xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_InitTick) refers to stm32f7xx_ll_utils.o(.text.LL_InitTick) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32f7xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32f7xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling) for LL_PWR_GetRegulVoltageScaling
    stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_PWR_IsEnabledOverDriveMode) for LL_PWR_IsEnabledOverDriveMode
    stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PWR_GetRegulVoltageScaling) refers to stm32f7xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PWR_IsEnabledOverDriveMode) refers to stm32f7xx_ll_utils.o(.text.LL_PWR_IsEnabledOverDriveMode) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to stm32f7xx_ll_utils.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to stm32f7xx_ll_utils.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy) refers to stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency) refers to stm32f7xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) for LL_SetFlashLatency
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for LL_RCC_SetAPB2Prescaler
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for LL_RCC_HSE_EnableBypass
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for LL_RCC_HSE_DisableBypass
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLLSAI_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLLSAI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLLI2S_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLLI2S_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f7xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.text.HAL_ADC_MspInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_ADC_MspInit) refers to stm32f7xx_hal_msp.o(.text.HAL_ADC_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.text.HAL_ADC_MspDeInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_ADC_MspDeInit) refers to stm32f7xx_hal_msp.o(.text.HAL_ADC_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_CRC_MspInit) refers to stm32f7xx_hal_msp.o(.text.HAL_CRC_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_CRC_MspDeInit) refers to stm32f7xx_hal_msp.o(.text.HAL_CRC_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for HAL_RCCEx_PeriphCLKConfig
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.text.Error_Handler) for Error_Handler
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.bss.hdma_usart2_rx) for hdma_usart2_rx
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) for HAL_DMA_Init
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.bss.hdma_usart2_tx) for hdma_usart2_tx
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.bss.hdma_usart6_rx) for hdma_usart6_rx
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.bss.hdma_usart6_tx) for hdma_usart6_tx
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_DeInit) for HAL_DMA_DeInit
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for HAL_RCC_GetClockConfig
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for HAL_TIM_Base_Start_IT
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f7xx_hal_timebase_tim.o(.text.HAL_SuspendTick) refers to stm32f7xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f7xx_hal_timebase_tim.o(.text.HAL_ResumeTick) refers to stm32f7xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    startup_stm32f746xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(RESET) refers to startup_stm32f746xx.o(STACK) for __initial_sp
    startup_stm32f746xx.o(RESET) refers to startup_stm32f746xx.o(.text) for Reset_Handler
    startup_stm32f746xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.DMA1_Stream5_IRQHandler) for DMA1_Stream5_IRQHandler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.DMA1_Stream6_IRQHandler) for DMA1_Stream6_IRQHandler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler) for TIM6_DAC_IRQHandler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler) for DMA2_Stream1_IRQHandler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler) for DMA2_Stream6_IRQHandler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.USART6_IRQHandler) for USART6_IRQHandler
    startup_stm32f746xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(.text) refers to system_stm32f7xx.o(.text.SystemInit) for SystemInit
    startup_stm32f746xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f746xx.o(.text) refers to startup_stm32f746xx.o(HEAP) for Heap_Mem
    startup_stm32f746xx.o(.text) refers to startup_stm32f746xx.o(STACK) for Stack_Mem
    system_stm32f7xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f7xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f7xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f7xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f7xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    e4ftbotterminal.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to e4ftbotterminal.o(.bss.pEmbDispHandle) for pEmbDispHandle
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to e4ftbotterminal.o(.bss.__termSem) for __termSem
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to e4ftbotterminal.o(.rodata.str1.1) for .L.str
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to __2printf.o(.text) for __2printf
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to stdio_streams.o(.bss) for __stdout
    e4ftbotterminal.o(.text.E4ftbotTerminalInit) refers to fflush_locked.o(.text) for fflush
    e4ftbotterminal.o(.ARM.exidx.text.E4ftbotTerminalInit) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.ARM.exidx.text.E4ftbotTerminalInit) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.ARM.exidx.text.E4ftbotTerminalInit) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.ARM.exidx.text.E4ftbotTerminalInit) refers to e4ftbotterminal.o(.text.E4ftbotTerminalInit) for [Anonymous Symbol]
    e4ftbotterminal.o(.text.E4ClearScreen) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.text.E4ClearScreen) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.text.E4ClearScreen) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.text.E4ClearScreen) refers to e4ftbotterminal.o(.rodata.str1.1) for .L.str
    e4ftbotterminal.o(.text.E4ClearScreen) refers to __2printf.o(.text) for __2printf
    e4ftbotterminal.o(.text.E4ClearScreen) refers to stdio_streams.o(.bss) for __stdout
    e4ftbotterminal.o(.text.E4ClearScreen) refers to fflush_locked.o(.text) for fflush
    e4ftbotterminal.o(.ARM.exidx.text.E4ClearScreen) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.ARM.exidx.text.E4ClearScreen) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.ARM.exidx.text.E4ClearScreen) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.ARM.exidx.text.E4ClearScreen) refers to e4ftbotterminal.o(.text.E4ClearScreen) for [Anonymous Symbol]
    e4ftbotterminal.o(.text.E4setPosDisp) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.text.E4setPosDisp) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.text.E4setPosDisp) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.text.E4setPosDisp) refers to __2printf.o(.text) for __2printf
    e4ftbotterminal.o(.text.E4setPosDisp) refers to stdio_streams.o(.bss) for __stdout
    e4ftbotterminal.o(.text.E4setPosDisp) refers to fflush_locked.o(.text) for fflush
    e4ftbotterminal.o(.ARM.exidx.text.E4setPosDisp) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.ARM.exidx.text.E4setPosDisp) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.ARM.exidx.text.E4setPosDisp) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.ARM.exidx.text.E4setPosDisp) refers to e4ftbotterminal.o(.text.E4setPosDisp) for [Anonymous Symbol]
    e4ftbotterminal.o(.text.stdout_putchar) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.text.stdout_putchar) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.text.stdout_putchar) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.text.stdout_putchar) refers to e4ftbotterminal.o(.bss.__termSem) for __termSem
    e4ftbotterminal.o(.text.stdout_putchar) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    e4ftbotterminal.o(.text.stdout_putchar) refers to e4ftbotterminal.o(.bss.pEmbDispHandle) for pEmbDispHandle
    e4ftbotterminal.o(.text.stdout_putchar) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) for HAL_UART_Transmit
    e4ftbotterminal.o(.text.stdout_putchar) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    e4ftbotterminal.o(.ARM.exidx.text.stdout_putchar) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.ARM.exidx.text.stdout_putchar) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.ARM.exidx.text.stdout_putchar) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.ARM.exidx.text.stdout_putchar) refers to e4ftbotterminal.o(.text.stdout_putchar) for [Anonymous Symbol]
    e4ftbotterminal.o(.bss.pEmbDispHandle) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.bss.pEmbDispHandle) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.bss.pEmbDispHandle) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.bss.__termSem) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.bss.__termSem) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.bss.__termSem) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    e4ftbotterminal.o(.rodata.str1.1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    e4ftbotterminal.o(.rodata.str1.1) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    e4ftbotterminal.o(.rodata.str1.1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    h1_alloc.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    h1_alloc_threads.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free_threads.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc_threads.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Finalize$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_free) for _mutex_free
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to retarget_os_rtos2.o(.text._mutex_initialize) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free_threads.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc_threads.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    printf.o(.text) refers (Special) to _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) for _printf_a
    printf.o(.text) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    printf.o(.text) refers (Special) to _printf_charcount.o(.text) for _printf_charcount
    printf.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    printf.o(.text) refers (Special) to _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) for _printf_e
    printf.o(.text) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    printf.o(.text) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    printf.o(.text) refers (Special) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    printf.o(.text) refers (Special) to _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) for _printf_g
    printf.o(.text) refers (Special) to _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) for _printf_i
    printf.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    printf.o(.text) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    printf.o(.text) refers (Special) to _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) for _printf_lc
    printf.o(.text) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    printf.o(.text) refers (Special) to _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) for _printf_lld
    printf.o(.text) refers (Special) to _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) for _printf_lli
    printf.o(.text) refers (Special) to _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) for _printf_llo
    printf.o(.text) refers (Special) to _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) for _printf_llu
    printf.o(.text) refers (Special) to _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) for _printf_llx
    printf.o(.text) refers (Special) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    printf.o(.text) refers (Special) to _printf_hex_int_ll_ptr.o(.text) for _printf_longlong_hex
    printf.o(.text) refers (Special) to _printf_oct_int_ll.o(.text) for _printf_longlong_oct
    printf.o(.text) refers (Special) to _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) for _printf_ls
    printf.o(.text) refers (Special) to _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) for _printf_n
    printf.o(.text) refers (Special) to _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) for _printf_o
    printf.o(.text) refers (Special) to _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) for _printf_p
    printf.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    printf.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_post_padding
    printf.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    printf.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    printf.o(.text) refers (Special) to _printf_truncate.o(.text) for _printf_truncate_signed
    printf.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    printf.o(.text) refers (Special) to _printf_wctomb.o(.text) for _printf_wctomb
    printf.o(.text) refers (Special) to _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) for _printf_x
    printf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    printf.o(.text) refers to stdio_streams.o(.bss) for __stdout
    snprintf.o(.text) refers (Special) to _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) for _printf_a
    snprintf.o(.text) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    snprintf.o(.text) refers (Special) to _printf_charcount.o(.text) for _printf_charcount
    snprintf.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    snprintf.o(.text) refers (Special) to _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) for _printf_e
    snprintf.o(.text) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    snprintf.o(.text) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    snprintf.o(.text) refers (Special) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    snprintf.o(.text) refers (Special) to _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) for _printf_g
    snprintf.o(.text) refers (Special) to _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) for _printf_i
    snprintf.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    snprintf.o(.text) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    snprintf.o(.text) refers (Special) to _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) for _printf_lc
    snprintf.o(.text) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    snprintf.o(.text) refers (Special) to _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) for _printf_lld
    snprintf.o(.text) refers (Special) to _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) for _printf_lli
    snprintf.o(.text) refers (Special) to _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) for _printf_llo
    snprintf.o(.text) refers (Special) to _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) for _printf_llu
    snprintf.o(.text) refers (Special) to _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) for _printf_llx
    snprintf.o(.text) refers (Special) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    snprintf.o(.text) refers (Special) to _printf_hex_int_ll_ptr.o(.text) for _printf_longlong_hex
    snprintf.o(.text) refers (Special) to _printf_oct_int_ll.o(.text) for _printf_longlong_oct
    snprintf.o(.text) refers (Special) to _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) for _printf_ls
    snprintf.o(.text) refers (Special) to _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) for _printf_n
    snprintf.o(.text) refers (Special) to _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) for _printf_o
    snprintf.o(.text) refers (Special) to _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) for _printf_p
    snprintf.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    snprintf.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_post_padding
    snprintf.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    snprintf.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    snprintf.o(.text) refers (Special) to _printf_truncate.o(.text) for _printf_truncate_signed
    snprintf.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    snprintf.o(.text) refers (Special) to _printf_wctomb.o(.text) for _printf_wctomb
    snprintf.o(.text) refers (Special) to _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) for _printf_x
    snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    __2printf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    __2printf.o(.text) refers to stdio_streams.o(.bss) for __stdout
    noretval__2printf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    noretval__2printf.o(.text) refers to stdio_streams.o(.bss) for __stdout
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_signed
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    atoi.o(.text) refers to rt_errno_addr_intlibspace.o(.text) for __aeabi_errno_addr
    atoi.o(.text) refers to strtol.o(.text) for strtol
    fflush.o(.text) refers to stdio.o(.text) for _fflush
    fflush.o(.text) refers to fseek.o(.text) for _fseek
    fflush.o(.text) refers to stdio_streams.o(.bss) for __stdin
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    fflush_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers to stdio.o(.text) for _fflush
    fflush_locked.o(.text) refers to fseek.o(.text) for _fseek
    fflush_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    f2d.o(x$fpl$f2d) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_threads.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_threads.o(.text) for __Heap_Initialize
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_init_threads.o(.text) refers to retarget_os_rtos2.o(.text._mutex_initialize) for _mutex_initialize
    h1_free_threads.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    h1_free_threads.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    h1_free_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char_common.o(.text) refers to __printf_flags_ss_wp.o(.text) for __printf
    _printf_char_file.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file.o(.text) refers to ferror_locked.o(.text) for ferror
    _printf_char_file.o(.text) refers to fputc_locked.o(.text) for fputc
    _printf_wctomb.o(.text) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_wctomb.o(.text) refers to _c16rtomb.o(.text) for _wcrtomb
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_wctomb.o(.text) refers to _printf_wctomb.o(.constdata) for .constdata
    _printf_wctomb.o(.constdata) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_longlong_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_longlong_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_oct_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll.o(.text) refers to _printf_hex_ll.o(.constdata) for .constdata
    _printf_hex_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int.o(.text) refers to _printf_hex_int.o(.constdata) for .constdata
    _printf_hex_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll.o(.text) refers to _printf_hex_int_ll.o(.constdata) for .constdata
    _printf_hex_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ptr.o(.text) refers to _printf_hex_ptr.o(.constdata) for .constdata
    _printf_hex_int_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ptr.o(.text) refers to _printf_hex_int_ptr.o(.constdata) for .constdata
    _printf_hex_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll_ptr.o(.text) refers to _printf_hex_ll_ptr.o(.constdata) for .constdata
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_hex_int_ll_ptr.o(.constdata) for .constdata
    _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) refers (Weak) to _printf_char.o(.text) for _printf_char
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) refers (Weak) to _printf_charcount.o(.text) for _printf_charcount
    _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_int_hex
    _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_hex_ptr
    _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_int_oct
    _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) refers (Weak) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Weak) to _printf_wchar.o(.text) for _printf_wchar
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Weak) to _printf_wchar.o(.text) for _printf_wstring
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_ll_oct
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_ll_hex
    strtol.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    strtol.o(.text) refers to _strtoul.o(.text) for _strtoul
    strtol.o(.text) refers to rt_errno_addr_intlibspace.o(.text) for __aeabi_errno_addr
    fseek.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    fseek.o(.text) refers to ftell.o(.text) for _ftell_internal
    fseek.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    fseek.o(.text) refers to stdio.o(.text) for _seterr
    stdio.o(.text) refers to retarget_io.o(.text._sys_seek) for _sys_seek
    stdio.o(.text) refers to retarget_io.o(.text._sys_write) for _sys_write
    streamlock.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    initio.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000026) for __rt_lib_init_stdio_2
    initio.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio.o(.text) refers to fopen_locked.o(.text) for freopen
    initio.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio.o(.text) refers to h1_free_threads.o(.text) for free
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    initio_locked.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000026) for __rt_lib_init_stdio_2
    initio_locked.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio_locked.o(.text) refers to retarget_os_rtos2.o(.text._mutex_initialize) for _mutex_initialize
    initio_locked.o(.text) refers to fopen_locked.o(.text) for freopen
    initio_locked.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio_locked.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to h1_free_threads.o(.text) for free
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to rtx_lib.o(.text.$Sub$$_fp_init) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000011) refers (Weak) to rt_locale_intlibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers (Weak) to initio_locked.o(.text) for _initio
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    printf2.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    printf2b.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_ctype_table.o(.text) refers to rt_locale_intlibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_threads.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_d2e) for _btod_d2e
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers to rt_locale_intlibspace.o(.text) for __rt_locale
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec_accurate.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec_accurate.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec_accurate.o(.text) refers to btod_accurate.o(.text) for _btod_main
    _printf_fp_dec_accurate.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec_accurate.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers to rt_locale_intlibspace.o(.text) for __rt_locale
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_hex.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_hex.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers to _printf_fp_hex.o(.constdata) for .constdata
    _printf_fp_hex.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    _printf_wchar.o(.text) refers (Weak) to _printf_wctomb.o(.text) for _printf_wctomb
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to rt_errno_addr_intlibspace.o(.text) for __aeabi_errno_addr
    fputc.o(i.fputc) refers to flsbuf.o(.text) for __flsbuf_byte
    ftell.o(.text) refers to rt_errno_addr_intlibspace.o(.text) for __aeabi_errno_addr
    fopen.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen.o(.text) refers to fseek.o(.text) for _fseek
    fopen.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fclose.o(.text) refers to stdio.o(.text) for _fflush
    fclose.o(.text) refers to retarget_io.o(.text._sys_close) for _sys_close
    fclose.o(.text) refers to h1_free_threads.o(.text) for free
    fclose.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fputc_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    fputc_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputc_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    ferror_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    ferror_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    setvbuf_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    setvbuf_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen_locked.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen_locked.o(.text) refers to fseek.o(.text) for _fseek
    fopen_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen_locked.o(.text) refers to retarget_os_rtos2.o(.text._mutex_initialize) for _mutex_initialize
    fopen_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fopen_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    _c16rtomb.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    defsig_rtred_outer.o(.text) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig_rtred_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtred_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) refers (Weak) to initio_locked.o(.text) for _terminateio
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f746xx.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_threads.o(.text) for __Heap_Finalize
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    bigflt0.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers to btod.o(CL$$btod_d2e_norm_op1) for _d2e_norm_op1
    btod.o(CL$$btod_d2e_norm_op1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e_norm_op1) refers to btod.o(CL$$btod_d2e_denorm_low) for _d2e_denorm_low
    btod.o(CL$$btod_d2e_denorm_low) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_ediv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_emuld) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_edivd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_e2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_mult_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_div_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod_accurate.o(.text) refers to btod_accurate_common.o(.text) for _btod_common
    flsbuf.o(.text) refers to stdio.o(.text) for _deferredlazyseek
    flsbuf.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    flsbuf.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    flsbuf.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv7m_pel.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000018) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000018) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv7m_pel.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    flsbuf_fwide.o(.text) refers to flsbuf.o(.text) for __flsbuf
    istatus.o(x$fpl$ieeestatus) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    h1_final_threads.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_free) for _mutex_free
    _printf_char_file_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    _printf_char_file_locked.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    _printf_char_file_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    btod_accurate_common.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    fwritefast.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fwritefast_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    fwritefast_locked.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast_locked.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    fwritefast_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    assert_stdio.o(.text) refers to fputs_locked.o(.text) for fputs
    assert_stdio.o(.text) refers to fflush_locked.o(.text) for fflush
    assert_stdio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    fputs.o(.text) refers to fputc_locked.o(.text) for fputc
    fputs_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_acquire) for _mutex_acquire
    fputs_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputs_locked.o(.text) refers (Weak) to retarget_os_rtos2.o(.text._mutex_release) for _mutex_release
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing wifimain.o(.text), (0 bytes).
    Removing wifimain.o(.ARM.exidx.text.mainThread), (8 bytes).
    Removing initcom.o(.text), (0 bytes).
    Removing initcom.o(.ARM.exidx.text.concatenate3Strings), (8 bytes).
    Removing initcom.o(.ARM.exidx.text.uart_init), (8 bytes).
    Removing initcom.o(.ARM.exidx.text.wifi_init), (8 bytes).
    Removing transmitthread.o(.text), (0 bytes).
    Removing transmitthread.o(.ARM.exidx.text.transmitThread), (8 bytes).
    Removing transmitthread.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing poticalc.o(.text), (0 bytes).
    Removing poticalc.o(.ARM.exidx.text.calcPotiRaw2Volt), (8 bytes).
    Removing potentiometervoltage.o(.text), (0 bytes).
    Removing potentiometervoltage.o(.ARM.exidx.text.getBatteryVoltageRaw), (8 bytes).
    Removing receivethread.o(.text), (0 bytes).
    Removing receivethread.o(.ARM.exidx.text.receiveThread), (8 bytes).
    Removing receivethread.o(.ARM.exidx.text.processReceivedData), (8 bytes).
    Removing receivethread.o(.ARM.exidx.text.convertSpeedSteeringToWheelSpeeds), (8 bytes).
    Removing receiveinit.o(.text), (0 bytes).
    Removing receiveinit.o(.ARM.exidx.text.receive_init), (8 bytes).
    Removing receiveinit.o(.ARM.exidx.text.RxHalfCpltCallback), (8 bytes).
    Removing receiveinit.o(.ARM.exidx.text.RxCpltCallback), (8 bytes).
    Removing drivethread.o(.text), (0 bytes).
    Removing drivethread.o(.text.driveUserTimerCallback), (26 bytes).
    Removing drivethread.o(.ARM.exidx.text.driveUserTimerCallback), (8 bytes).
    Removing drivethread.o(.ARM.exidx.text.driveThread), (8 bytes).
    Removing drivethread.o(.bss.timerId), (4 bytes).
    Removing drivegettersetter.o(.text), (0 bytes).
    Removing drivegettersetter.o(.ARM.exidx.text.motSetNomSpeed), (8 bytes).
    Removing drivegettersetter.o(.ARM.exidx.text.motGetCurrSpeed), (8 bytes).
    Removing ftbot.pb.o(.text), (0 bytes).
    Removing pb_common.o(.text), (0 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_field_iter_begin), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.load_descriptor_values), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_field_iter_begin_extension), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_field_iter_next), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.advance_iterator), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_field_iter_find), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_field_iter_find_extension), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_field_iter_begin_const), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_const_cast), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_field_iter_begin_extension_const), (8 bytes).
    Removing pb_common.o(.ARM.exidx.text.pb_default_field_callback), (8 bytes).
    Removing pb_decode.o(.text), (0 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_read), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.buf_read), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_istream_from_buffer), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_varint32), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_varint32_eof), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_varint), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_readbyte), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_tag), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_skip_field), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_skip_varint), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_skip_string), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_make_string_substream), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_close_string_substream), (8 bytes).
    Removing pb_decode.o(.text.pb_decode_ex), (124 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_ex), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_inner), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode), (8 bytes).
    Removing pb_decode.o(.text.pb_release), (10 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_release), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_bool), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_svarint), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_fixed32), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_decode_fixed64), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_message_set_to_defaults), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.decode_extension), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.decode_field), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_field_set_to_default), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.default_extension_decoder), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.decode_static_field), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.decode_pointer_field), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.decode_callback_field), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.decode_basic_field), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_dec_bool), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_dec_varint), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_dec_bytes), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_dec_string), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_dec_submessage), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.pb_dec_fixed_length_bytes), (8 bytes).
    Removing pb_decode.o(.ARM.exidx.text.read_raw_value), (8 bytes).
    Removing pb_encode.o(.text), (0 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_ostream_from_buffer), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.buf_write), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_write), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.encode_extension_field), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.encode_field), (8 bytes).
    Removing pb_encode.o(.text.pb_encode_ex), (122 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_ex), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_submessage), (8 bytes).
    Removing pb_encode.o(.text.pb_get_encoded_size), (66 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_get_encoded_size), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_varint), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_varint_32), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_svarint), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_fixed32), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_fixed64), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_tag), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_tag_for_field), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_encode_string), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.default_extension_encoder), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.safe_read_bool), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_check_proto3_default_value), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.encode_callback_field), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.encode_array), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.encode_basic_field), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_enc_varint), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_enc_fixed), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_enc_bool), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_enc_bytes), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_enc_string), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_enc_submessage), (8 bytes).
    Removing pb_encode.o(.ARM.exidx.text.pb_enc_fixed_length_bytes), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.MPU_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_DMA_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_USART6_UART_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_USART2_UART_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_ADC1_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_CRC_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stm32f7xx_it.o(.text), (0 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.DMA1_Stream5_IRQHandler), (8 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.DMA1_Stream6_IRQHandler), (8 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.TIM6_DAC_IRQHandler), (8 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.DMA2_Stream1_IRQHandler), (8 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.DMA2_Stream6_IRQHandler), (8 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.USART6_IRQHandler), (8 bytes).
    Removing irq_armv7m.o(.rodata), (2 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (84 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (106 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (86 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.IsException), (20 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_evflags.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsSet), (106 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (96 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (126 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsWait), (138 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (86 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (320 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.IsEventFlagsPtrValid), (34 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsEventFlagsPtrValid), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (92 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsCheck), (124 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_all), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_any), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsId), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsSet), (26 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxObject), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_set32), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (216 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsClear), (26 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_clr32), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (214 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (124 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsDestroy), (90 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsDestroy), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelProtect), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtect), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelProtected), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtected), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelDestroyClass), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelDestroyClass), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetClass), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetZone), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetZone), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFeedWatchdogDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdogDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadProtectPrivileged), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPrivilegedProtected), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPrivilegedProtected), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspendClass), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspendClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumeClass), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumeClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminateZone), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminateZone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadWatchdogExpired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadWatchdogExpired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSet), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsSetDone), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWait), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (14 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (14 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (14 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (10 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (118 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsPrivileged), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (108 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (70 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (70 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (138 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.IsFault), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsFault), (8 bytes).
    Removing rtx_kernel.o(.text.IsSVCallIrq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsSVCallIrq), (8 bytes).
    Removing rtx_kernel.o(.text.IsPendSvIrq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsPendSvIrq), (8 bytes).
    Removing rtx_kernel.o(.text.IsTickIrq), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsTickIrq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (132 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (68 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (72 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelProtect), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelDestroyClass), (130 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelDestroyClass), (14 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (76 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (94 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (94 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.KernelBlock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelBlock), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.GetPendSV), (18 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.ClrPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.ClrPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (238 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.KernelUnblock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelUnblock), (8 bytes).
    Removing rtx_kernel.o(.text.SetPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelProtect), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemHeadPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemBlockPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_get), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_put), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_dec32), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (114 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.IsException), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mempool.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (94 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (94 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolFree), (114 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (80 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (86 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (640 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.IsMemoryPoolPtrValid), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsMemoryPoolPtrValid), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxObject), (10 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolId), (10 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (158 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (162 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (122 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolDestroy), (122 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolDestroy), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (80 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (86 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsMessageQueuePtrValid), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (124 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text.osRtxMessageQueueDestroy), (122 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueDestroy), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (72 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (72 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (78 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsMutexPtrValid), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexId), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (96 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerUnlock), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexDestroy), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (86 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsSemaphorePtrValid), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (124 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphoreDestroy), (90 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreDestroy), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_get), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMessageObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_put), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lim), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMutexObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.StackOffsetR0), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.SetPrivileged), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetClass), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetClass), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetZone), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetZone), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (78 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (78 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFeedWatchdog), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.osThreadProtectPrivileged), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspendClass), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.IsTickIrq), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsTickIrq), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspendClass), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResumeClass), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResumeClass), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminateZone), (126 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone), (8 bytes).
    Removing rtx_thread.o(.text.IsFault), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsFault), (8 bytes).
    Removing rtx_thread.o(.text.IsSVCallIrq), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsSVCallIrq), (8 bytes).
    Removing rtx_thread.o(.text.IsPendSvIrq), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsPendSvIrq), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminateZone), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminateZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetAffinityMask), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetAffinityMask), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.isrRtxThreadFlagsSet), (134 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (114 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsThreadPtrValid), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEntry), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.xPSR_InitVal), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (186 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPriority), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (252 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (120 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (144 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (62 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (234 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (310 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFeedWatchdog), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadProtectPrivileged), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetAffinityMask), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetAffinityMask), (10 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (310 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsSet), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.atomic_set32), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (214 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsClear), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.atomic_clr32), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (190 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (138 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.IsException), (20 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_timer.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (100 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (86 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (78 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (86 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerUnlink), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (400 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.IsTimerPtrValid), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsTimerPtrValid), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerId), (10 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerId), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (158 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (110 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (104 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (88 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerDestroy), (94 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerDestroy), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_open), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_close), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_write), (8 bytes).
    Removing retarget_io.o(.text._sys_read), (88 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_read), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_istty), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_seek), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_flen), (8 bytes).
    Removing retarget_os_rtos2.o(.text), (0 bytes).
    Removing retarget_os_rtos2.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing retarget_os_rtos2.o(.ARM.exidx.text.os_kernel_is_initialized), (8 bytes).
    Removing retarget_os_rtos2.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing retarget_os_rtos2.o(.ARM.exidx.text.os_kernel_is_running), (8 bytes).
    Removing retarget_os_rtos2.o(.ARM.exidx.text.is_thread_mode), (8 bytes).
    Removing retarget_os_rtos2.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing retarget_os_rtos2.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing stm32f7xx_hal.o(.text), (0 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_InitTick), (112 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DeInit), (82 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_SetTickFreq), (106 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_Delay), (66 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_EnableCompensationCell), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DisableCompensationCell), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_EnableFMCMemorySwapping), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableFMCMemorySwapping), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DisableFMCMemorySwapping), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableFMCMemorySwapping), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text), (0 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Init), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_LevelOutOfWindowCallback), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ErrorCallback), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_DeInit), (130 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_RegisterCallback), (258 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_RegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_UnRegisterCallback), (276 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_UnRegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_Stop), (108 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForConversion), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_PollForEvent), (198 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForEvent), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_IT), (454 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_Stop_IT), (126 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_IRQHandler), (540 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_Start_DMA), (526 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.ADC_DMAConvCplt), (178 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAConvCplt), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.ADC_DMAHalfConvCplt), (22 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAHalfConvCplt), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.ADC_DMAError), (38 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.ADC_DMAError), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_Stop_DMA), (190 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetValue), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig), (184 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_AnalogWDGConfig), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_GetState), (12 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetState), (8 bytes).
    Removing stm32f7xx_hal_adc.o(.text.HAL_ADC_GetError), (12 bytes).
    Removing stm32f7xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetError), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart), (398 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT), (410 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart_IT), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop), (162 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion), (264 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedPollForConversion), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT), (174 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop_IT), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue), (90 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedGetValue), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA), (432 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStart_DMA), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAConvCplt), (156 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAConvCplt), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAHalfConvCplt), (22 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAHalfConvCplt), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.ADC_MultiModeDMAError), (38 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAError), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA), (158 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStop_DMA), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue), (18 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeGetValue), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConvCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel), (730 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel), (132 bytes).
    Removing stm32f7xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ), (56 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.SysTick_Config), (82 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (36 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority), (118 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority), (66 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (48 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (64 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (48 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (20 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive), (64 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (52 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text), (0 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_Init), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text.HAL_CRC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text.HAL_CRC_DeInit), (106 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text.HAL_CRC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text.HAL_CRC_Accumulate), (140 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_Accumulate), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text.CRC_Handle_8), (220 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.CRC_Handle_8), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text.CRC_Handle_16), (100 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.CRC_Handle_16), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text.HAL_CRC_Calculate), (152 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_Calculate), (8 bytes).
    Removing stm32f7xx_hal_crc.o(.text.HAL_CRC_GetState), (12 bytes).
    Removing stm32f7xx_hal_crc.o(.ARM.exidx.text.HAL_CRC_GetState), (8 bytes).
    Removing stm32f7xx_hal_crc_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_crc_ex.o(.ARM.exidx.text.HAL_CRCEx_Polynomial_Set), (8 bytes).
    Removing stm32f7xx_hal_crc_ex.o(.text.HAL_CRCEx_Input_Data_Reverse), (44 bytes).
    Removing stm32f7xx_hal_crc_ex.o(.ARM.exidx.text.HAL_CRCEx_Input_Data_Reverse), (8 bytes).
    Removing stm32f7xx_hal_crc_ex.o(.text.HAL_CRCEx_Output_Data_Reverse), (44 bytes).
    Removing stm32f7xx_hal_crc_ex.o(.ARM.exidx.text.HAL_CRCEx_Output_Data_Reverse), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text), (0 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_DeInit), (180 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_Start), (142 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (506 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (182 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (210 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_GetState), (14 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError), (12 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart), (176 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart), (8 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig), (68 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig), (8 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT), (8204 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT), (8 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory), (44 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (604 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (46 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (46 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (38 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (86 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (56 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (10 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (210 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (56 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (58 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (110 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (42 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (106 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (106 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (190 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (240 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (322 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit), (570 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (200 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (18 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (18 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (320 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (40 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (486 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (752 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (200 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (86 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (200 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (92 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text), (0 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (178 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start), (248 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (70 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (82 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (388 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (42 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (22 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMAError), (154 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (92 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Init), (168 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (178 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start), (572 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd), (54 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (314 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (686 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (428 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (1148 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (188 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (116 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (460 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Init), (168 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (178 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (572 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (314 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (686 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (428 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (1148 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (460 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Init), (168 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (178 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start), (680 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (286 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (792 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (400 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (1132 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt), (212 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (116 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (430 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (144 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (128 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (230 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (224 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (254 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (248 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (308 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (128 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (334 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (390 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (382 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (438 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (896 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (470 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (196 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig), (240 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig), (250 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC3_SetConfig), (248 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC4_SetConfig), (170 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC5_SetConfig), (160 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC5_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC6_SetConfig), (162 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC6_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (304 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig), (278 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI2_SetConfig), (108 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI3_SetConfig), (106 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI3_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI4_SetConfig), (108 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI4_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel), (432 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (406 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (62 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (736 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt), (42 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (22 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (202 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (62 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart), (736 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (202 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (92 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (472 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig), (52 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (394 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage), (80 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_ITRx_SetConfig), (42 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_ITRx_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage), (82 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (44 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro), (150 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig), (302 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (150 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (86 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (14 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (14 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (14 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (14 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (14 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (14 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_GetChannelState), (142 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurstState), (14 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init), (286 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit), (128 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start), (348 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop), (102 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT), (360 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (114 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (442 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (110 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start), (416 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd), (54 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop), (208 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT), (522 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT), (338 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA), (850 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt), (188 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN), (116 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA), (326 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start), (416 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop), (208 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT), (522 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT), (338 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA), (850 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (326 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start), (186 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop), (182 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (210 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (206 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent), (186 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (186 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (228 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt), (30 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt), (30 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization), (344 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime), (274 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (84 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5), (108 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState), (14 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState), (94 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text), (0 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_InitCallbacksToDefault), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_AdvFeatureConfig), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_CheckIdleState), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init), (200 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_LIN_Init), (258 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init), (250 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DeInit), (146 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback), (416 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_UnRegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterRxEventCallback), (146 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RegisterRxEventCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterRxEventCallback), (122 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_UnRegisterRxEventCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Receive), (430 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_IT), (196 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_TxISR_16BIT), (150 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_TxISR_8BIT), (140 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_IT), (140 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT), (380 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAError), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DMAPause), (224 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DMAResume), (206 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop), (280 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndTxTransfer), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Abort), (434 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit), (188 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive), (302 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT), (512 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMATxAbortCallback), (100 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMARxAbortCallback), (112 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT), (206 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback), (38 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT), (334 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback), (64 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndTransmit_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config), (30 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ReceiverTimeout_Config), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_EnableReceiverTimeout), (108 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_EnableReceiverTimeout), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DisableReceiverTimeout), (108 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DisableReceiverTimeout), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode), (110 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnableMuteMode), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode), (110 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_DisableMuteMode), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode), (20 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter), (154 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver), (154 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_LIN_SendBreak), (90 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_GetState), (28 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_GetError), (14 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_RxISR_16BIT), (316 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_RxISR_8BIT), (312 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init), (238 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_RS485Ex_Init), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set), (92 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_MultiProcessorEx_AddressLength_Set), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle), (560 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT), (176 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA), (176 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_GetRxEventType), (12 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_GetRxEventType), (8 bytes).
    Removing stm32f7xx_ll_crc.o(.text), (0 bytes).
    Removing stm32f7xx_ll_crc.o(.text.LL_CRC_DeInit), (62 bytes).
    Removing stm32f7xx_ll_crc.o(.ARM.exidx.text.LL_CRC_DeInit), (8 bytes).
    Removing stm32f7xx_ll_crc.o(.text.LL_AHB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f7xx_ll_crc.o(.ARM.exidx.text.LL_AHB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f7xx_ll_crc.o(.text.LL_AHB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f7xx_ll_crc.o(.ARM.exidx.text.LL_AHB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f7xx_ll_pwr.o(.text), (0 bytes).
    Removing stm32f7xx_ll_pwr.o(.text.LL_PWR_DeInit), (38 bytes).
    Removing stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit), (8 bytes).
    Removing stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit), (206 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_Enable), (18 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming), (30 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq), (54 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq), (86 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq), (38 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq), (36 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq), (36 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq), (510 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSE_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq), (568 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUARTClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUARTClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq), (446 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq), (84 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S), (108 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_I2S), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq), (148 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq), (226 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSAIClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSAIClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI), (134 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_SAI), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI), (130 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_SAI), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq), (132 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSDMMCClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSDMMCClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCK48MClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCK48MClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M), (118 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_48M), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M), (124 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_48M), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq), (78 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRNGClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRNGClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq), (78 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCECClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCECClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq), (78 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLTDCClockFreq), (32 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLTDCClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC), (140 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_LTDC), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSPDIFRXClockFreq), (32 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSPDIFRXClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX), (124 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS), (124 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetN), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetN), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetP), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetP), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetN), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetDIVQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetP), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetP), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetR), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetR), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVR), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetDIVR), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetN), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetDIVQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetDIVQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetP), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetP), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetR), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetR), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.rodata.aRCC_PLLSAIDIVRPrescTable), (4 bytes).
    Removing stm32f7xx_ll_utils.o(.text), (0 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_Init1msTick), (20 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_InitTick), (54 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_InitTick), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_mDelay), (74 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_SetSystemCoreClock), (20 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency), (568 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PWR_GetRegulVoltageScaling), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_PWR_IsEnabledOverDriveMode), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PWR_IsEnabledOverDriveMode), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_FLASH_SetLatency), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_FLASH_GetLatency), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (114 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy), (66 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency), (64 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_Enable), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS), (54 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (194 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (134 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_Enable), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLLSAI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLLSAI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLLI2S_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLLI2S_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_Enable), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_SetSysClkSource), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.text), (0 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_ADC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.text.HAL_ADC_MspDeInit), (60 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_CRC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.text.HAL_CRC_MspDeInit), (44 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_CRC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit), (156 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.text), (0 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.text.HAL_SuspendTick), (20 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.text.HAL_ResumeTick), (20 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing system_stm32f7xx.o(.text), (0 bytes).
    Removing system_stm32f7xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f7xx.o(.text.SystemCoreClockUpdate), (302 bytes).
    Removing system_stm32f7xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing e4ftbotterminal.o(.text), (0 bytes).
    Removing e4ftbotterminal.o(.ARM.exidx.text.E4ftbotTerminalInit), (8 bytes).
    Removing e4ftbotterminal.o(.text.E4ClearScreen), (30 bytes).
    Removing e4ftbotterminal.o(.ARM.exidx.text.E4ClearScreen), (8 bytes).
    Removing e4ftbotterminal.o(.ARM.exidx.text.E4setPosDisp), (8 bytes).
    Removing e4ftbotterminal.o(.ARM.exidx.text.stdout_putchar), (8 bytes).

2085 unused section(s) (total 104672 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert_stdio.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.s                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate_common.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/locale.c                         0x00000000   Number         0  _c16rtomb.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m_pel.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_truncate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_charcount.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wctomb.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_longlong_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec_accurate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_hex.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wchar.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file_locked.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_u.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_c.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_n.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_x.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_p.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_o.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_i.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_e.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_g.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_a.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lli.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lld.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llu.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ll.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_l.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lc.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ls.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llo.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llx.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  atoi.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtol.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio_streams.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fseek.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  streamlock.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ftell.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flsbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs_locked.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strchr.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strncmp.o ABSOLUTE
    ../clib/wchar.c                          0x00000000   Number         0  flsbuf_fwide.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/f2d.s                           0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/istatus.s                       0x00000000   Number         0  istatus.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/printf2.s                       0x00000000   Number         0  printf2.o ABSOLUTE
    ../fplib/printf2a.s                      0x00000000   Number         0  printf2a.o ABSOLUTE
    ../fplib/printf2b.s                      0x00000000   Number         0  printf2b.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    E4ftbotTerminal.c                        0x00000000   Number         0  e4ftbotterminal.o ABSOLUTE
    RTE/Device/STM32F746ZGTx/startup_stm32f746xx.s 0x00000000   Number         0  startup_stm32f746xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    driveGetterSetter.c                      0x00000000   Number         0  drivegettersetter.o ABSOLUTE
    driveThread.c                            0x00000000   Number         0  drivethread.o ABSOLUTE
    ftbot.pb.c                               0x00000000   Number         0  ftbot.pb.o ABSOLUTE
    initCom.c                                0x00000000   Number         0  initcom.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    pb_common.c                              0x00000000   Number         0  pb_common.o ABSOLUTE
    pb_decode.c                              0x00000000   Number         0  pb_decode.o ABSOLUTE
    pb_encode.c                              0x00000000   Number         0  pb_encode.o ABSOLUTE
    potentiometerVoltage.c                   0x00000000   Number         0  potentiometervoltage.o ABSOLUTE
    potiCalc.c                               0x00000000   Number         0  poticalc.o ABSOLUTE
    receiveInit.c                            0x00000000   Number         0  receiveinit.o ABSOLUTE
    receiveThread.c                          0x00000000   Number         0  receivethread.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    retarget_os_rtos2.c                      0x00000000   Number         0  retarget_os_rtos2.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32f7xx_hal.c                          0x00000000   Number         0  stm32f7xx_hal.o ABSOLUTE
    stm32f7xx_hal_adc.c                      0x00000000   Number         0  stm32f7xx_hal_adc.o ABSOLUTE
    stm32f7xx_hal_adc_ex.c                   0x00000000   Number         0  stm32f7xx_hal_adc_ex.o ABSOLUTE
    stm32f7xx_hal_cortex.c                   0x00000000   Number         0  stm32f7xx_hal_cortex.o ABSOLUTE
    stm32f7xx_hal_crc.c                      0x00000000   Number         0  stm32f7xx_hal_crc.o ABSOLUTE
    stm32f7xx_hal_crc_ex.c                   0x00000000   Number         0  stm32f7xx_hal_crc_ex.o ABSOLUTE
    stm32f7xx_hal_dma.c                      0x00000000   Number         0  stm32f7xx_hal_dma.o ABSOLUTE
    stm32f7xx_hal_dma_ex.c                   0x00000000   Number         0  stm32f7xx_hal_dma_ex.o ABSOLUTE
    stm32f7xx_hal_gpio.c                     0x00000000   Number         0  stm32f7xx_hal_gpio.o ABSOLUTE
    stm32f7xx_hal_msp.c                      0x00000000   Number         0  stm32f7xx_hal_msp.o ABSOLUTE
    stm32f7xx_hal_pwr.c                      0x00000000   Number         0  stm32f7xx_hal_pwr.o ABSOLUTE
    stm32f7xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f7xx_hal_pwr_ex.o ABSOLUTE
    stm32f7xx_hal_rcc.c                      0x00000000   Number         0  stm32f7xx_hal_rcc.o ABSOLUTE
    stm32f7xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f7xx_hal_rcc_ex.o ABSOLUTE
    stm32f7xx_hal_tim.c                      0x00000000   Number         0  stm32f7xx_hal_tim.o ABSOLUTE
    stm32f7xx_hal_tim_ex.c                   0x00000000   Number         0  stm32f7xx_hal_tim_ex.o ABSOLUTE
    stm32f7xx_hal_timebase_tim.c             0x00000000   Number         0  stm32f7xx_hal_timebase_tim.o ABSOLUTE
    stm32f7xx_hal_uart.c                     0x00000000   Number         0  stm32f7xx_hal_uart.o ABSOLUTE
    stm32f7xx_hal_uart_ex.c                  0x00000000   Number         0  stm32f7xx_hal_uart_ex.o ABSOLUTE
    stm32f7xx_it.c                           0x00000000   Number         0  stm32f7xx_it.o ABSOLUTE
    stm32f7xx_ll_crc.c                       0x00000000   Number         0  stm32f7xx_ll_crc.o ABSOLUTE
    stm32f7xx_ll_pwr.c                       0x00000000   Number         0  stm32f7xx_ll_pwr.o ABSOLUTE
    stm32f7xx_ll_rcc.c                       0x00000000   Number         0  stm32f7xx_ll_rcc.o ABSOLUTE
    stm32f7xx_ll_utils.c                     0x00000000   Number         0  stm32f7xx_ll_utils.o ABSOLUTE
    system_stm32f7xx.c                       0x00000000   Number         0  system_stm32f7xx.o ABSOLUTE
    transmitThread.c                         0x00000000   Number         0  transmitthread.o ABSOLUTE
    wifiMain.c                               0x00000000   Number         0  wifimain.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorSVC                            0x00000006   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    TCB_ZONE_OFS                             0x00000044   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      456  startup_stm32f746xx.o(RESET)
    !!!main                                  0x080001c8   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001d0   Section       92  __scatter.o(!!!scatter)
    !!dczerorl                               0x0800022c   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_copy                           0x08000268   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x08000284   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x08000288   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x080002a4   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000001  0x080002a4   Section        6  _printf_n.o(.ARM.Collect$$_printf_percent$$00000001)
    .ARM.Collect$$_printf_percent$$00000002  0x080002aa   Section        6  _printf_p.o(.ARM.Collect$$_printf_percent$$00000002)
    .ARM.Collect$$_printf_percent$$00000003  0x080002b0   Section        6  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    .ARM.Collect$$_printf_percent$$00000004  0x080002b6   Section        6  _printf_e.o(.ARM.Collect$$_printf_percent$$00000004)
    .ARM.Collect$$_printf_percent$$00000005  0x080002bc   Section        6  _printf_g.o(.ARM.Collect$$_printf_percent$$00000005)
    .ARM.Collect$$_printf_percent$$00000006  0x080002c2   Section        6  _printf_a.o(.ARM.Collect$$_printf_percent$$00000006)
    .ARM.Collect$$_printf_percent$$00000007  0x080002c8   Section       10  _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007)
    .ARM.Collect$$_printf_percent$$00000008  0x080002d2   Section        6  _printf_i.o(.ARM.Collect$$_printf_percent$$00000008)
    .ARM.Collect$$_printf_percent$$00000009  0x080002d8   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$0000000A  0x080002de   Section        6  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    .ARM.Collect$$_printf_percent$$0000000B  0x080002e4   Section        6  _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B)
    .ARM.Collect$$_printf_percent$$0000000C  0x080002ea   Section        6  _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C)
    .ARM.Collect$$_printf_percent$$0000000D  0x080002f0   Section        6  _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D)
    .ARM.Collect$$_printf_percent$$0000000E  0x080002f6   Section        6  _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E)
    .ARM.Collect$$_printf_percent$$0000000F  0x080002fc   Section        6  _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F)
    .ARM.Collect$$_printf_percent$$00000010  0x08000302   Section        6  _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010)
    .ARM.Collect$$_printf_percent$$00000011  0x08000308   Section        6  _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011)
    .ARM.Collect$$_printf_percent$$00000012  0x0800030e   Section       10  _printf_l.o(.ARM.Collect$$_printf_percent$$00000012)
    .ARM.Collect$$_printf_percent$$00000013  0x08000318   Section        6  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    .ARM.Collect$$_printf_percent$$00000014  0x0800031e   Section        6  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000015  0x08000324   Section        6  _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015)
    .ARM.Collect$$_printf_percent$$00000016  0x0800032a   Section        6  _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016)
    .ARM.Collect$$_printf_percent$$00000017  0x08000330   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x08000334   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x08000336   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0800033a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800033a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x0800033a   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x08000342   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000342   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x08000342   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000011          0x08000342   Section        6  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000348   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000014          0x08000348   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000014)
    .ARM.Collect$$libinit$$00000015          0x08000354   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000354   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000018          0x08000354   Section       10  libinit2.o(.ARM.Collect$$libinit$$00000018)
    .ARM.Collect$$libinit$$00000019          0x0800035e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800035e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800035e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800035e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800035e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800035e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800035e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000026          0x0800035e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000026)
    .ARM.Collect$$libinit$$00000027          0x08000362   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x08000362   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000362   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000362   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x08000362   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x08000362   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000364   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000366   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000003      0x08000366   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000004      0x0800036a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800036a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800036a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800036a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x0800036a   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x0800036e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800036e   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000370   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000370   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000370   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000376   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800037e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000382   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000382   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800038a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800038c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800038c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000390   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    [Anonymous Symbol]                       0x08000398   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x080003c0   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x080003d0   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x080003e2   Number         0  irq_armv7m.o(.text)
    SVC_ContextSaveRegs                      0x0800041a   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x08000430   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x0800044a   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x0800044c   Number         0  irq_armv7m.o(.text)
    $v0                                      0x08000498   Number         0  startup_stm32f746xx.o(.text)
    .text                                    0x08000498   Section       64  startup_stm32f746xx.o(.text)
    AlignUp                                  0x080004d9   Thumb Code    10  h1_alloc_threads.o(.text)
    .text                                    0x080004d8   Section        0  h1_alloc_threads.o(.text)
    Heap1_SizeAdjust                         0x080004e3   Thumb Code     6  h1_alloc_threads.o(.text)
    .text                                    0x0800057e   Section      240  lludivv7m.o(.text)
    .text                                    0x08000670   Section        0  printf.o(.text)
    .text                                    0x08000688   Section        0  snprintf.o(.text)
    .text                                    0x080006c8   Section        0  __2printf.o(.text)
    .text                                    0x080006e0   Section        0  _printf_dec.o(.text)
    .text                                    0x08000758   Section        0  __printf_flags_ss_wp.o(.text)
    .text                                    0x080008e0   Section        0  atoi.o(.text)
    .text                                    0x080008fc   Section        0  fflush_locked.o(.text)
    .text                                    0x0800098c   Section        0  exit.o(.text)
    .text                                    0x0800099e   Section        0  strchr.o(.text)
    .text                                    0x080009b2   Section        0  strncmp.o(.text)
    .text                                    0x08000a48   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000ad2   Section       68  rt_memclr.o(.text)
    .text                                    0x08000b16   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000b68   Section      124  strcmpv7m_pel.o(.text)
    .text                                    0x08000be4   Section        0  heapauxi.o(.text)
    .text                                    0x08000bec   Section        8  rt_heap_descriptor_intlibspace.o(.text)
    .text                                    0x08000bf4   Section        8  rt_errno_addr_intlibspace.o(.text)
    .text                                    0x08000bfc   Section        0  hguard.o(.text)
    .text                                    0x08000c00   Section        0  init_alloc.o(.text)
    .text                                    0x08000c8a   Section        0  h1_init_threads.o(.text)
    .text                                    0x08000c9c   Section        0  h1_free_threads.o(.text)
    .text                                    0x08000d12   Section        0  _printf_pad.o(.text)
    .text                                    0x08000d60   Section        0  _printf_truncate.o(.text)
    .text                                    0x08000d84   Section        0  _printf_str.o(.text)
    .text                                    0x08000dd6   Section        0  _printf_intcommon.o(.text)
    .text                                    0x08000e88   Section        0  _printf_charcount.o(.text)
    _printf_input_char                       0x08000eb1   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x08000eb0   Section        0  _printf_char_common.o(.text)
    .text                                    0x08000ee0   Section        0  _snputc.o(.text)
    .text                                    0x08000ef0   Section        0  _printf_wctomb.o(.text)
    .text                                    0x08000fac   Section        0  _printf_longlong_dec.o(.text)
    _printf_longlong_oct_internal            0x08001029   Thumb Code     0  _printf_oct_int_ll.o(.text)
    .text                                    0x08001028   Section        0  _printf_oct_int_ll.o(.text)
    _printf_hex_common                       0x08001099   Thumb Code     0  _printf_hex_int_ll_ptr.o(.text)
    .text                                    0x08001098   Section        0  _printf_hex_int_ll_ptr.o(.text)
    .text                                    0x0800112c   Section        0  strtol.o(.text)
    .text                                    0x0800119c   Section        0  fseek.o(.text)
    .text                                    0x08001294   Section        0  stdio.o(.text)
    .text                                    0x0800139c   Section        0  initio_locked.o(.text)
    .text                                    0x08001564   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080015c8   Section        8  libspace.o(.text)
    .text                                    0x080015d0   Section       16  rt_ctype_table.o(.text)
    AlignUpOffset                            0x080015e1   Thumb Code    14  h1_extend_threads.o(.text)
    .text                                    0x080015e0   Section        0  maybetermalloc2.o(.text)
    .text                                    0x080015e0   Section        0  h1_extend_threads.o(.text)
    .text                                    0x08001632   Section      138  lludiv10.o(.text)
    _fp_digits                               0x080016bd   Thumb Code   432  _printf_fp_dec.o(.text)
    .text                                    0x080016bc   Section        0  _printf_fp_dec.o(.text)
    .text                                    0x08001ad8   Section        0  _printf_fp_hex.o(.text)
    .text                                    0x08001dd4   Section        0  _printf_char.o(.text)
    .text                                    0x08001e00   Section        0  _printf_wchar.o(.text)
    .text                                    0x08001e2c   Section        0  _strtoul.o(.text)
    .text                                    0x08001eca   Section        0  ftell.o(.text)
    .text                                    0x08001f0c   Section        0  fclose.o(.text)
    .text                                    0x08001f58   Section        0  setvbuf_locked.o(.text)
    _freopen_locked                          0x08001fc1   Thumb Code   180  fopen_locked.o(.text)
    .text                                    0x08001fc0   Section        0  fopen_locked.o(.text)
    .text                                    0x0800210c   Section        0  _c16rtomb.o(.text)
    .text                                    0x08002154   Section        0  defsig_rtred_outer.o(.text)
    .text                                    0x08002162   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x08002170   Section        0  sys_exit.o(.text)
    .text                                    0x0800217c   Section        2  use_no_semi.o(.text)
    .text                                    0x0800217e   Section        0  indicate_semi.o(.text)
    .text                                    0x0800217e   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080021c8   Section        8  rt_locale_intlibspace.o(.text)
    .text                                    0x080021d0   Section        0  term_alloc.o(.text)
    .text                                    0x080021e0   Section        0  _printf_fp_infnan.o(.text)
    .text                                    0x08002260   Section        0  _chval.o(.text)
    .text                                    0x0800227c   Section        0  bigflt0.o(.text)
    .text                                    0x08002360   Section        0  flsbuf.o(.text)
    .text                                    0x08002542   Section        0  defsig_exit.o(.text)
    .text                                    0x0800254c   Section        0  defsig_rtred_inner.o(.text)
    .text                                    0x08002580   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x080025d0   Section        0  h1_final_threads.o(.text)
    .text                                    0x080025dc   Section        0  _printf_char_file_locked.o(.text)
    .text                                    0x0800261c   Section        0  defsig_general.o(.text)
    .text                                    0x0800264e   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08002660   Section        0  rtx_lib.o(.text.$Sub$$_fp_init)
    ADC_Init                                 0x08002679   Thumb Code   388  stm32f7xx_hal_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x08002678   Section        0  stm32f7xx_hal_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x08002800   Section        0  stm32f7xx_it.o(.text.DMA1_Stream5_IRQHandler)
    [Anonymous Symbol]                       0x08002810   Section        0  stm32f7xx_it.o(.text.DMA1_Stream6_IRQHandler)
    [Anonymous Symbol]                       0x08002820   Section        0  stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler)
    [Anonymous Symbol]                       0x08002830   Section        0  stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler)
    DMA_CalcBaseAndBitshift                  0x08002841   Thumb Code    86  stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    [Anonymous Symbol]                       0x08002840   Section        0  stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    DMA_CheckFifoParam                       0x08002899   Thumb Code   240  stm32f7xx_hal_dma.o(.text.DMA_CheckFifoParam)
    [Anonymous Symbol]                       0x08002898   Section        0  stm32f7xx_hal_dma.o(.text.DMA_CheckFifoParam)
    DMA_SetConfig                            0x08002989   Thumb Code    80  stm32f7xx_hal_dma.o(.text.DMA_SetConfig)
    [Anonymous Symbol]                       0x08002988   Section        0  stm32f7xx_hal_dma.o(.text.DMA_SetConfig)
    [Anonymous Symbol]                       0x080029d8   Section        0  e4ftbotterminal.o(.text.E4ftbotTerminalInit)
    [Anonymous Symbol]                       0x08002a94   Section        0  e4ftbotterminal.o(.text.E4setPosDisp)
    [Anonymous Symbol]                       0x08002ac0   Section        0  main.o(.text.Error_Handler)
    [Anonymous Symbol]                       0x08002ac8   Section        0  rtx_evr.o(.text.EvrRtxDelay)
    [Anonymous Symbol]                       0x08002ad0   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x08002ad8   Section        0  rtx_evr.o(.text.EvrRtxDelayError)
    [Anonymous Symbol]                       0x08002ae0   Section        0  rtx_evr.o(.text.EvrRtxDelayStarted)
    [Anonymous Symbol]                       0x08002ae8   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08002af0   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x08002af8   Section        0  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08002b08   Section        0  rtx_evr.o(.text.EvrRtxKernelGetState)
    [Anonymous Symbol]                       0x08002b10   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x08002b18   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x08002b20   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x08002b28   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x08002b30   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08002b40   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x08002b50   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x08002b60   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x08002b70   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x08002b80   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x08002b90   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x08002b98   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x08002ba8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x08002bb8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08002bc8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetCount)
    [Anonymous Symbol]                       0x08002bd8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x08002be8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x08002bf0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x08002c00   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x08002c10   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08002c20   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x08002c30   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x08002c40   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08002c50   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x08002c60   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x08002c68   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueReset)
    [Anonymous Symbol]                       0x08002c70   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueResetDone)
    [Anonymous Symbol]                       0x08002c78   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x08002c88   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquire)
    [Anonymous Symbol]                       0x08002c98   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    [Anonymous Symbol]                       0x08002ca8   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x08002cb0   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x08002cc0   Section        0  rtx_evr.o(.text.EvrRtxMutexCreated)
    [Anonymous Symbol]                       0x08002cd0   Section        0  rtx_evr.o(.text.EvrRtxMutexDelete)
    [Anonymous Symbol]                       0x08002cd8   Section        0  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    [Anonymous Symbol]                       0x08002ce0   Section        0  rtx_evr.o(.text.EvrRtxMutexError)
    [Anonymous Symbol]                       0x08002cf0   Section        0  rtx_evr.o(.text.EvrRtxMutexNew)
    [Anonymous Symbol]                       0x08002cf8   Section        0  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    [Anonymous Symbol]                       0x08002d00   Section        0  rtx_evr.o(.text.EvrRtxMutexRelease)
    [Anonymous Symbol]                       0x08002d08   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x08002d18   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x08002d28   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    [Anonymous Symbol]                       0x08002d38   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x08002d40   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    [Anonymous Symbol]                       0x08002d50   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    [Anonymous Symbol]                       0x08002d60   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreError)
    [Anonymous Symbol]                       0x08002d70   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    [Anonymous Symbol]                       0x08002d80   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    [Anonymous Symbol]                       0x08002d88   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08002d90   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    [Anonymous Symbol]                       0x08002da0   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x08002db0   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x08002dc0   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x08002dc8   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x08002dd8   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x08002de0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x08002df0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08002df8   Section        0  rtx_evr.o(.text.EvrRtxThreadGetId)
    [Anonymous Symbol]                       0x08002e00   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x08002e08   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x08002e18   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x08002e20   Section        0  rtx_evr.o(.text.EvrRtxThreadPriorityUpdated)
    [Anonymous Symbol]                       0x08002e30   Section        0  rtx_evr.o(.text.EvrRtxThreadSetPriority)
    [Anonymous Symbol]                       0x08002e40   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x08002e48   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x08002e58   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x08002e68   Section        0  stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback)
    [Anonymous Symbol]                       0x08002e70   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel)
    [Anonymous Symbol]                       0x08003108   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback)
    [Anonymous Symbol]                       0x08003110   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback)
    [Anonymous Symbol]                       0x08003118   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback)
    [Anonymous Symbol]                       0x08003120   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_GetValue)
    [Anonymous Symbol]                       0x08003130   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_Init)
    [Anonymous Symbol]                       0x08003230   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback)
    [Anonymous Symbol]                       0x08003238   Section        0  stm32f7xx_hal_msp.o(.text.HAL_ADC_MspInit)
    [Anonymous Symbol]                       0x080032b8   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_PollForConversion)
    [Anonymous Symbol]                       0x080033e8   Section        0  stm32f7xx_hal_adc.o(.text.HAL_ADC_Start)
    [Anonymous Symbol]                       0x080035a0   Section        0  stm32f7xx_hal_crc_ex.o(.text.HAL_CRCEx_Polynomial_Set)
    [Anonymous Symbol]                       0x08003678   Section        0  stm32f7xx_hal_crc.o(.text.HAL_CRC_Init)
    [Anonymous Symbol]                       0x08003748   Section        0  stm32f7xx_hal_msp.o(.text.HAL_CRC_MspInit)
    [Anonymous Symbol]                       0x08003788   Section        0  stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort)
    [Anonymous Symbol]                       0x08003878   Section        0  stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT)
    [Anonymous Symbol]                       0x080038c0   Section        0  stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    [Anonymous Symbol]                       0x08003be0   Section        0  stm32f7xx_hal_dma.o(.text.HAL_DMA_Init)
    [Anonymous Symbol]                       0x08003d50   Section        0  stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT)
    [Anonymous Symbol]                       0x08003e20   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08004210   Section        0  stm32f7xx_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08004220   Section        0  stm32f7xx_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x08004240   Section        0  stm32f7xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x08004268   Section        0  stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08004358   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion)
    [Anonymous Symbol]                       0x080043f8   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable)
    [Anonymous Symbol]                       0x08004420   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable)
    [Anonymous Symbol]                       0x08004450   Section        0  stm32f7xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08004498   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x080044b0   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x080044e8   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x080044f8   Section        0  stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive)
    [Anonymous Symbol]                       0x080045c0   Section        0  stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig)
    [Anonymous Symbol]                       0x08004e38   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x080050a8   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    [Anonymous Symbol]                       0x08005100   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x08005110   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x08005138   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    [Anonymous Symbol]                       0x08005160   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08005248   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08005960   Section        0  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    [Anonymous Symbol]                       0x08005968   Section        0  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    [Anonymous Symbol]                       0x08005970   Section        0  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    [Anonymous Symbol]                       0x08005978   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    [Anonymous Symbol]                       0x08005a20   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    [Anonymous Symbol]                       0x08005a28   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    [Anonymous Symbol]                       0x08005b30   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    [Anonymous Symbol]                       0x08005b38   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    [Anonymous Symbol]                       0x08005df0   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    [Anonymous Symbol]                       0x08005df8   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    [Anonymous Symbol]                       0x08005e00   Section        0  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    [Anonymous Symbol]                       0x08005e28   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    [Anonymous Symbol]                       0x08005e30   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback)
    [Anonymous Symbol]                       0x08005e40   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback)
    [Anonymous Symbol]                       0x08005e48   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback)
    [Anonymous Symbol]                       0x08005e50   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback)
    [Anonymous Symbol]                       0x08005e58   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback)
    [Anonymous Symbol]                       0x08005e60   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler)
    [Anonymous Symbol]                       0x08006320   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_Init)
    [Anonymous Symbol]                       0x080063e8   Section        0  stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit)
    [Anonymous Symbol]                       0x080066c0   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_DMA)
    [Anonymous Symbol]                       0x08006750   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterCallback)
    [Anonymous Symbol]                       0x080068c8   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback)
    [Anonymous Symbol]                       0x080068d0   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback)
    [Anonymous Symbol]                       0x080068d8   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit)
    [Anonymous Symbol]                       0x080069f8   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA)
    [Anonymous Symbol]                       0x08006b00   Section        0  transmitthread.o(.text.HAL_UART_TxCpltCallback)
    [Anonymous Symbol]                       0x08006b18   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback)
    IsException                              0x08006b21   Thumb Code    20  rtx_delay.o(.text.IsException)
    [Anonymous Symbol]                       0x08006b20   Section        0  rtx_delay.o(.text.IsException)
    IsException                              0x08006b39   Thumb Code    20  rtx_kernel.o(.text.IsException)
    [Anonymous Symbol]                       0x08006b38   Section        0  rtx_kernel.o(.text.IsException)
    IsException                              0x08006b51   Thumb Code    20  rtx_msgqueue.o(.text.IsException)
    [Anonymous Symbol]                       0x08006b50   Section        0  rtx_msgqueue.o(.text.IsException)
    IsException                              0x08006b69   Thumb Code    20  rtx_mutex.o(.text.IsException)
    [Anonymous Symbol]                       0x08006b68   Section        0  rtx_mutex.o(.text.IsException)
    IsException                              0x08006b81   Thumb Code    20  rtx_semaphore.o(.text.IsException)
    [Anonymous Symbol]                       0x08006b80   Section        0  rtx_semaphore.o(.text.IsException)
    IsException                              0x08006b99   Thumb Code    20  rtx_thread.o(.text.IsException)
    [Anonymous Symbol]                       0x08006b98   Section        0  rtx_thread.o(.text.IsException)
    IsIrqMasked                              0x08006bb1   Thumb Code    46  rtx_delay.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08006bb0   Section        0  rtx_delay.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08006be1   Thumb Code    46  rtx_kernel.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08006be0   Section        0  rtx_kernel.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08006c11   Thumb Code    46  rtx_msgqueue.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08006c10   Section        0  rtx_msgqueue.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08006c41   Thumb Code    46  rtx_mutex.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08006c40   Section        0  rtx_mutex.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08006c71   Thumb Code    46  rtx_semaphore.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08006c70   Section        0  rtx_semaphore.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08006ca1   Thumb Code    46  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08006ca0   Section        0  rtx_thread.o(.text.IsIrqMasked)
    IsMessageQueuePtrValid                   0x08006cd1   Thumb Code    34  rtx_msgqueue.o(.text.IsMessageQueuePtrValid)
    [Anonymous Symbol]                       0x08006cd0   Section        0  rtx_msgqueue.o(.text.IsMessageQueuePtrValid)
    IsMutexPtrValid                          0x08006cf9   Thumb Code    34  rtx_mutex.o(.text.IsMutexPtrValid)
    [Anonymous Symbol]                       0x08006cf8   Section        0  rtx_mutex.o(.text.IsMutexPtrValid)
    IsPrivileged                             0x08006d21   Thumb Code    20  rtx_kernel.o(.text.IsPrivileged)
    [Anonymous Symbol]                       0x08006d20   Section        0  rtx_kernel.o(.text.IsPrivileged)
    IsSemaphorePtrValid                      0x08006d39   Thumb Code    34  rtx_semaphore.o(.text.IsSemaphorePtrValid)
    [Anonymous Symbol]                       0x08006d38   Section        0  rtx_semaphore.o(.text.IsSemaphorePtrValid)
    IsThreadPtrValid                         0x08006d61   Thumb Code    34  rtx_thread.o(.text.IsThreadPtrValid)
    [Anonymous Symbol]                       0x08006d60   Section        0  rtx_thread.o(.text.IsThreadPtrValid)
    MPU_Config                               0x08006d89   Thumb Code    86  main.o(.text.MPU_Config)
    [Anonymous Symbol]                       0x08006d88   Section        0  main.o(.text.MPU_Config)
    MX_ADC1_Init                             0x08006de1   Thumb Code   128  main.o(.text.MX_ADC1_Init)
    [Anonymous Symbol]                       0x08006de0   Section        0  main.o(.text.MX_ADC1_Init)
    MX_CRC_Init                              0x08006e61   Thumb Code    50  main.o(.text.MX_CRC_Init)
    [Anonymous Symbol]                       0x08006e60   Section        0  main.o(.text.MX_CRC_Init)
    MX_DMA_Init                              0x08006e99   Thumb Code   142  main.o(.text.MX_DMA_Init)
    [Anonymous Symbol]                       0x08006e98   Section        0  main.o(.text.MX_DMA_Init)
    MX_GPIO_Init                             0x08006f29   Thumb Code    96  main.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x08006f28   Section        0  main.o(.text.MX_GPIO_Init)
    MX_USART2_UART_Init                      0x08006f89   Thumb Code    68  main.o(.text.MX_USART2_UART_Init)
    [Anonymous Symbol]                       0x08006f88   Section        0  main.o(.text.MX_USART2_UART_Init)
    MX_USART6_UART_Init                      0x08006fd1   Thumb Code     2  main.o(.text.MX_USART6_UART_Init)
    [Anonymous Symbol]                       0x08006fd0   Section        0  main.o(.text.MX_USART6_UART_Init)
    MemBlockPtr                              0x08006fd9   Thumb Code    24  rtx_memory.o(.text.MemBlockPtr)
    [Anonymous Symbol]                       0x08006fd8   Section        0  rtx_memory.o(.text.MemBlockPtr)
    MemHeadPtr                               0x08006ff1   Thumb Code    10  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x08006ff0   Section        0  rtx_memory.o(.text.MemHeadPtr)
    MessageQueueGet                          0x08007001   Thumb Code    82  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08007000   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x08007059   Thumb Code   172  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x08007058   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x08007109   Thumb Code    66  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08007108   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    NVIC_EncodePriority                      0x08007151   Thumb Code   108  stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x08007150   Section        0  stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x080071c0   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x080071d0   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08007210   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08007218   Section        0  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08007298   Section        0  receiveinit.o(.text.RxCpltCallback)
    [Anonymous Symbol]                       0x080072c0   Section        0  receiveinit.o(.text.RxHalfCpltCallback)
    SVC_Setup                                0x080072e9   Thumb Code    80  rtx_kernel.o(.text.SVC_Setup)
    [Anonymous Symbol]                       0x080072e8   Section        0  rtx_kernel.o(.text.SVC_Setup)
    SemaphoreTokenDecrement                  0x08007339   Thumb Code    36  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    [Anonymous Symbol]                       0x08007338   Section        0  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    SemaphoreTokenIncrement                  0x08007361   Thumb Code    46  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    [Anonymous Symbol]                       0x08007360   Section        0  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    SetPendSV                                0x08007391   Thumb Code    16  rtx_system.o(.text.SetPendSV)
    [Anonymous Symbol]                       0x08007390   Section        0  rtx_system.o(.text.SetPendSV)
    SetPrivileged                            0x080073a1   Thumb Code    52  rtx_thread.o(.text.SetPrivileged)
    [Anonymous Symbol]                       0x080073a0   Section        0  rtx_thread.o(.text.SetPrivileged)
    StackOffsetR0                            0x080073d9   Thumb Code    24  rtx_thread.o(.text.StackOffsetR0)
    [Anonymous Symbol]                       0x080073d8   Section        0  rtx_thread.o(.text.StackOffsetR0)
    [Anonymous Symbol]                       0x080073f0   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x080074b0   Section        0  system_stm32f7xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080074c8   Section        0  stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler)
    [Anonymous Symbol]                       0x080074d8   Section        0  stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig)
    ThreadFlagsCheck                         0x08007679   Thumb Code   124  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08007678   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x080076f9   Thumb Code   158  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x080076f8   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerUnlink                              0x08007799   Thumb Code    40  rtx_timer.o(.text.TimerUnlink)
    [Anonymous Symbol]                       0x08007798   Section        0  rtx_timer.o(.text.TimerUnlink)
    [Anonymous Symbol]                       0x080077c0   Section        0  stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig)
    [Anonymous Symbol]                       0x08007908   Section        0  stm32f7xx_hal_uart.o(.text.UART_CheckIdleState)
    UART_DMAAbortOnError                     0x08007981   Thumb Code    38  stm32f7xx_hal_uart.o(.text.UART_DMAAbortOnError)
    [Anonymous Symbol]                       0x08007980   Section        0  stm32f7xx_hal_uart.o(.text.UART_DMAAbortOnError)
    UART_DMAError                            0x080079a9   Thumb Code   128  stm32f7xx_hal_uart.o(.text.UART_DMAError)
    [Anonymous Symbol]                       0x080079a8   Section        0  stm32f7xx_hal_uart.o(.text.UART_DMAError)
    UART_DMAReceiveCplt                      0x08007a29   Thumb Code   250  stm32f7xx_hal_uart.o(.text.UART_DMAReceiveCplt)
    [Anonymous Symbol]                       0x08007a28   Section        0  stm32f7xx_hal_uart.o(.text.UART_DMAReceiveCplt)
    UART_DMARxHalfCplt                       0x08007b29   Thumb Code    58  stm32f7xx_hal_uart.o(.text.UART_DMARxHalfCplt)
    [Anonymous Symbol]                       0x08007b28   Section        0  stm32f7xx_hal_uart.o(.text.UART_DMARxHalfCplt)
    UART_DMATransmitCplt                     0x08007b69   Thumb Code   124  stm32f7xx_hal_uart.o(.text.UART_DMATransmitCplt)
    [Anonymous Symbol]                       0x08007b68   Section        0  stm32f7xx_hal_uart.o(.text.UART_DMATransmitCplt)
    UART_DMATxHalfCplt                       0x08007be9   Thumb Code    24  stm32f7xx_hal_uart.o(.text.UART_DMATxHalfCplt)
    [Anonymous Symbol]                       0x08007be8   Section        0  stm32f7xx_hal_uart.o(.text.UART_DMATxHalfCplt)
    UART_EndRxTransfer                       0x08007c01   Thumb Code   152  stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer)
    [Anonymous Symbol]                       0x08007c00   Section        0  stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer)
    UART_EndTransmit_IT                      0x08007c99   Thumb Code    68  stm32f7xx_hal_uart.o(.text.UART_EndTransmit_IT)
    [Anonymous Symbol]                       0x08007c98   Section        0  stm32f7xx_hal_uart.o(.text.UART_EndTransmit_IT)
    UART_EndTxTransfer                       0x08007ce1   Thumb Code    52  stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer)
    [Anonymous Symbol]                       0x08007ce0   Section        0  stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer)
    [Anonymous Symbol]                       0x08007d18   Section        0  stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault)
    [Anonymous Symbol]                       0x08007da0   Section        0  stm32f7xx_hal_uart.o(.text.UART_SetConfig)
    [Anonymous Symbol]                       0x080082e0   Section        0  stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA)
    [Anonymous Symbol]                       0x08008408   Section        0  stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout)
    [Anonymous Symbol]                       0x08008580   Section        0  stm32f7xx_it.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x08008590   Section        0  stm32f7xx_it.o(.text.USART6_IRQHandler)
    __NVIC_EnableIRQ                         0x080085a1   Thumb Code    48  stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x080085a0   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x080085d1   Thumb Code    16  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x080085d0   Section        0  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_GetPriorityGrouping               0x080085e1   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x080085e0   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriority                       0x080085f1   Thumb Code    66  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x080085f0   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x08008639   Thumb Code    60  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08008638   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    __tagsym$$used.1                         0x08008678   Number         0  retarget_os_rtos2.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08008678   Section        0  retarget_os_rtos2.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x080086a0   Number         0  retarget_os_rtos2.o(.text._mutex_free)
    [Anonymous Symbol]                       0x080086a0   Section        0  retarget_os_rtos2.o(.text._mutex_free)
    __tagsym$$used.0                         0x080086b8   Number         0  retarget_os_rtos2.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x080086b8   Section        0  retarget_os_rtos2.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080086f0   Number         0  retarget_os_rtos2.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080086f0   Section        0  retarget_os_rtos2.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08008718   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x08008720   Section        0  retarget_io.o(.text._sys_close)
    [Anonymous Symbol]                       0x08008770   Section        0  retarget_io.o(.text._sys_flen)
    [Anonymous Symbol]                       0x080087c0   Section        0  retarget_io.o(.text._sys_istty)
    [Anonymous Symbol]                       0x08008808   Section        0  retarget_io.o(.text._sys_open)
    [Anonymous Symbol]                       0x08008890   Section        0  retarget_io.o(.text._sys_seek)
    [Anonymous Symbol]                       0x080088e8   Section        0  retarget_io.o(.text._sys_write)
    advance_iterator                         0x08008961   Thumb Code   178  pb_common.o(.text.advance_iterator)
    [Anonymous Symbol]                       0x08008960   Section        0  pb_common.o(.text.advance_iterator)
    atomic_chk32_all                         0x08008a19   Thumb Code    56  rtx_thread.o(.text.atomic_chk32_all)
    [Anonymous Symbol]                       0x08008a18   Section        0  rtx_thread.o(.text.atomic_chk32_all)
    atomic_chk32_any                         0x08008a51   Thumb Code    52  rtx_thread.o(.text.atomic_chk32_any)
    [Anonymous Symbol]                       0x08008a50   Section        0  rtx_thread.o(.text.atomic_chk32_any)
    atomic_dec16_nz                          0x08008a89   Thumb Code    44  rtx_semaphore.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x08008a88   Section        0  rtx_semaphore.o(.text.atomic_dec16_nz)
    atomic_dec16_nz                          0x08008ab9   Thumb Code    44  rtx_system.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x08008ab8   Section        0  rtx_system.o(.text.atomic_dec16_nz)
    atomic_dec32                             0x08008ae9   Thumb Code    32  rtx_mempool.o(.text.atomic_dec32)
    [Anonymous Symbol]                       0x08008ae8   Section        0  rtx_mempool.o(.text.atomic_dec32)
    atomic_dec32_nz                          0x08008b09   Thumb Code    40  rtx_msgqueue.o(.text.atomic_dec32_nz)
    [Anonymous Symbol]                       0x08008b08   Section        0  rtx_msgqueue.o(.text.atomic_dec32_nz)
    atomic_inc16_lim                         0x08008b31   Thumb Code    52  rtx_system.o(.text.atomic_inc16_lim)
    [Anonymous Symbol]                       0x08008b30   Section        0  rtx_system.o(.text.atomic_inc16_lim)
    atomic_inc16_lt                          0x08008b69   Thumb Code    56  rtx_semaphore.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x08008b68   Section        0  rtx_semaphore.o(.text.atomic_inc16_lt)
    atomic_inc16_lt                          0x08008ba1   Thumb Code    56  rtx_system.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x08008ba0   Section        0  rtx_system.o(.text.atomic_inc16_lt)
    atomic_inc32                             0x08008bd9   Thumb Code    32  rtx_mempool.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x08008bd8   Section        0  rtx_mempool.o(.text.atomic_inc32)
    atomic_inc32                             0x08008bf9   Thumb Code    32  rtx_msgqueue.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x08008bf8   Section        0  rtx_msgqueue.o(.text.atomic_inc32)
    atomic_link_get                          0x08008c19   Thumb Code    40  rtx_mempool.o(.text.atomic_link_get)
    [Anonymous Symbol]                       0x08008c18   Section        0  rtx_mempool.o(.text.atomic_link_get)
    atomic_link_put                          0x08008c41   Thumb Code    48  rtx_mempool.o(.text.atomic_link_put)
    [Anonymous Symbol]                       0x08008c40   Section        0  rtx_mempool.o(.text.atomic_link_put)
    atomic_wr8                               0x08008c71   Thumb Code    40  rtx_msgqueue.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x08008c70   Section        0  rtx_msgqueue.o(.text.atomic_wr8)
    buf_read                                 0x08008c99   Thumb Code    50  pb_decode.o(.text.buf_read)
    [Anonymous Symbol]                       0x08008c98   Section        0  pb_decode.o(.text.buf_read)
    buf_write                                0x08008cd1   Thumb Code    42  pb_encode.o(.text.buf_write)
    [Anonymous Symbol]                       0x08008cd0   Section        0  pb_encode.o(.text.buf_write)
    [Anonymous Symbol]                       0x08008d00   Section        0  poticalc.o(.text.calcPotiRaw2Volt)
    [Anonymous Symbol]                       0x08008d20   Section        0  initcom.o(.text.concatenate3Strings)
    [Anonymous Symbol]                       0x08008e20   Section        0  receivethread.o(.text.convertSpeedSteeringToWheelSpeeds)
    decode_basic_field                       0x08008ef1   Thumb Code   678  pb_decode.o(.text.decode_basic_field)
    [Anonymous Symbol]                       0x08008ef0   Section        0  pb_decode.o(.text.decode_basic_field)
    decode_callback_field                    0x08009199   Thumb Code   302  pb_decode.o(.text.decode_callback_field)
    [Anonymous Symbol]                       0x08009198   Section        0  pb_decode.o(.text.decode_callback_field)
    decode_extension                         0x080092c9   Thumb Code   154  pb_decode.o(.text.decode_extension)
    [Anonymous Symbol]                       0x080092c8   Section        0  pb_decode.o(.text.decode_extension)
    decode_field                             0x08009369   Thumb Code   148  pb_decode.o(.text.decode_field)
    [Anonymous Symbol]                       0x08009368   Section        0  pb_decode.o(.text.decode_field)
    decode_pointer_field                     0x08009401   Thumb Code    50  pb_decode.o(.text.decode_pointer_field)
    [Anonymous Symbol]                       0x08009400   Section        0  pb_decode.o(.text.decode_pointer_field)
    decode_static_field                      0x08009439   Thumb Code   678  pb_decode.o(.text.decode_static_field)
    [Anonymous Symbol]                       0x08009438   Section        0  pb_decode.o(.text.decode_static_field)
    default_extension_decoder                0x080096e1   Thumb Code   126  pb_decode.o(.text.default_extension_decoder)
    [Anonymous Symbol]                       0x080096e0   Section        0  pb_decode.o(.text.default_extension_decoder)
    default_extension_encoder                0x08009761   Thumb Code    84  pb_encode.o(.text.default_extension_encoder)
    [Anonymous Symbol]                       0x08009760   Section        0  pb_encode.o(.text.default_extension_encoder)
    [Anonymous Symbol]                       0x080097b8   Section        0  drivethread.o(.text.driveThread)
    encode_array                             0x08009819   Thumb Code   740  pb_encode.o(.text.encode_array)
    [Anonymous Symbol]                       0x08009818   Section        0  pb_encode.o(.text.encode_array)
    encode_basic_field                       0x08009b01   Thumb Code   226  pb_encode.o(.text.encode_basic_field)
    [Anonymous Symbol]                       0x08009b00   Section        0  pb_encode.o(.text.encode_basic_field)
    encode_callback_field                    0x08009be9   Thumb Code    94  pb_encode.o(.text.encode_callback_field)
    [Anonymous Symbol]                       0x08009be8   Section        0  pb_encode.o(.text.encode_callback_field)
    encode_extension_field                   0x08009c49   Thumb Code   106  pb_encode.o(.text.encode_extension_field)
    [Anonymous Symbol]                       0x08009c48   Section        0  pb_encode.o(.text.encode_extension_field)
    encode_field                             0x08009cb9   Thumb Code   276  pb_encode.o(.text.encode_field)
    [Anonymous Symbol]                       0x08009cb8   Section        0  pb_encode.o(.text.encode_field)
    [Anonymous Symbol]                       0x08009dd0   Section        0  potentiometervoltage.o(.text.getBatteryVoltageRaw)
    is_thread_mode                           0x08009e19   Thumb Code    32  retarget_os_rtos2.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x08009e18   Section        0  retarget_os_rtos2.o(.text.is_thread_mode)
    isrRtxMessageQueueGet                    0x08009e39   Thumb Code   172  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08009e38   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    isrRtxMessageQueuePut                    0x08009ee9   Thumb Code   188  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08009ee8   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    isrRtxSemaphoreAcquire                   0x08009fa9   Thumb Code   110  rtx_semaphore.o(.text.isrRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x08009fa8   Section        0  rtx_semaphore.o(.text.isrRtxSemaphoreAcquire)
    isrRtxSemaphoreRelease                   0x0800a019   Thumb Code   116  rtx_semaphore.o(.text.isrRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x0800a018   Section        0  rtx_semaphore.o(.text.isrRtxSemaphoreRelease)
    isr_queue_get                            0x0800a091   Thumb Code    84  rtx_system.o(.text.isr_queue_get)
    [Anonymous Symbol]                       0x0800a090   Section        0  rtx_system.o(.text.isr_queue_get)
    isr_queue_put                            0x0800a0e9   Thumb Code    94  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x0800a0e8   Section        0  rtx_system.o(.text.isr_queue_put)
    load_descriptor_values                   0x0800a149   Thumb Code   616  pb_common.o(.text.load_descriptor_values)
    [Anonymous Symbol]                       0x0800a148   Section        0  pb_common.o(.text.load_descriptor_values)
    [Anonymous Symbol]                       0x0800a3b0   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x0800a4d0   Section        0  wifimain.o(.text.mainThread)
    [Anonymous Symbol]                       0x0800a6d0   Section        0  drivegettersetter.o(.text.motGetCurrSpeed)
    [Anonymous Symbol]                       0x0800a708   Section        0  drivegettersetter.o(.text.motSetNomSpeed)
    [Anonymous Symbol]                       0x0800a830   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x0800a888   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x0800a8d0   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x0800a920   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x0800a968   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x0800a9e8   Section        0  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    [Anonymous Symbol]                       0x0800aa30   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x0800aaa8   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x0800ab38   Section        0  rtx_msgqueue.o(.text.osMessageQueueReset)
    [Anonymous Symbol]                       0x0800ab90   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x0800abf8   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x0800ac50   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x0800aca8   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x0800ad00   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    osRtxEventFlagsObject                    0x0800ad31   Thumb Code    10  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x0800ad30   Section        0  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x0800ad40   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x0800ad48   Section        0  rtx_kernel.o(.text.osRtxKernelBeforeInit)
    [Anonymous Symbol]                       0x0800ad50   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelGetState                      0x0800ad71   Thumb Code    12  rtx_system.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x0800ad70   Section        0  rtx_system.o(.text.osRtxKernelGetState)
    osRtxKernelGetState                      0x0800ad81   Thumb Code    12  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x0800ad80   Section        0  rtx_thread.o(.text.osRtxKernelGetState)
    osRtxKernelState                         0x0800ad91   Thumb Code    12  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x0800ad90   Section        0  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x0800ada0   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800aef0   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0800afb8   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x0800b050   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x0800b0a0   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x0800b108   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMemoryPoolObject                    0x0800b1a1   Thumb Code    10  rtx_system.o(.text.osRtxMemoryPoolObject)
    [Anonymous Symbol]                       0x0800b1a0   Section        0  rtx_system.o(.text.osRtxMemoryPoolObject)
    osRtxMessageObject                       0x0800b1b1   Thumb Code    10  rtx_system.o(.text.osRtxMessageObject)
    [Anonymous Symbol]                       0x0800b1b0   Section        0  rtx_system.o(.text.osRtxMessageObject)
    osRtxMessageQueueId                      0x0800b1c1   Thumb Code    10  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    [Anonymous Symbol]                       0x0800b1c0   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    osRtxMessageQueuePostProcess             0x0800b1d1   Thumb Code   324  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0800b1d0   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0800b318   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexDestroy                        0x0800b359   Thumb Code    90  rtx_mutex.o(.text.osRtxMutexDestroy)
    [Anonymous Symbol]                       0x0800b358   Section        0  rtx_mutex.o(.text.osRtxMutexDestroy)
    osRtxMutexId                             0x0800b3b9   Thumb Code    10  rtx_mutex.o(.text.osRtxMutexId)
    [Anonymous Symbol]                       0x0800b3b8   Section        0  rtx_mutex.o(.text.osRtxMutexId)
    osRtxMutexObject                         0x0800b3c9   Thumb Code    10  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x0800b3c8   Section        0  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x0800b3d8   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0800b470   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxMutexOwnerUnlock                    0x0800b521   Thumb Code   252  rtx_mutex.o(.text.osRtxMutexOwnerUnlock)
    [Anonymous Symbol]                       0x0800b520   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerUnlock)
    osRtxObject                              0x0800b621   Thumb Code    10  rtx_msgqueue.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800b620   Section        0  rtx_msgqueue.o(.text.osRtxObject)
    osRtxObject                              0x0800b631   Thumb Code    10  rtx_mutex.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800b630   Section        0  rtx_mutex.o(.text.osRtxObject)
    osRtxObject                              0x0800b641   Thumb Code    10  rtx_semaphore.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800b640   Section        0  rtx_semaphore.o(.text.osRtxObject)
    osRtxObject                              0x0800b651   Thumb Code    10  rtx_system.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800b650   Section        0  rtx_system.o(.text.osRtxObject)
    osRtxObject                              0x0800b661   Thumb Code    10  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800b660   Section        0  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800b670   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x0800b728   Section        0  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphoreId                         0x0800b771   Thumb Code    10  rtx_semaphore.o(.text.osRtxSemaphoreId)
    [Anonymous Symbol]                       0x0800b770   Section        0  rtx_semaphore.o(.text.osRtxSemaphoreId)
    osRtxSemaphoreObject                     0x0800b781   Thumb Code    10  rtx_system.o(.text.osRtxSemaphoreObject)
    [Anonymous Symbol]                       0x0800b780   Section        0  rtx_system.o(.text.osRtxSemaphoreObject)
    osRtxSemaphorePostProcess                0x0800b791   Thumb Code    62  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x0800b790   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x0800b7d0   Section        0  rtx_thread.o(.text.osRtxThreadBeforeFree)
    osRtxThreadBlock                         0x0800b7d9   Thumb Code   136  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x0800b7d8   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x0800b861   Thumb Code   250  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x0800b860   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x0800b960   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x0800ba00   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x0800bb50   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x0800bbb0   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x0800bc49   Thumb Code   162  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x0800bc48   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadGetRunning                    0x0800bcf1   Thumb Code    12  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800bcf0   Section        0  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800bd01   Thumb Code    12  rtx_mutex.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800bd00   Section        0  rtx_mutex.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800bd11   Thumb Code    12  rtx_semaphore.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800bd10   Section        0  rtx_semaphore.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800bd21   Thumb Code    12  rtx_thread.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800bd20   Section        0  rtx_thread.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800bd31   Thumb Code    12  rtx_timer.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800bd30   Section        0  rtx_timer.o(.text.osRtxThreadGetRunning)
    osRtxThreadId                            0x0800bd41   Thumb Code    10  rtx_thread.o(.text.osRtxThreadId)
    [Anonymous Symbol]                       0x0800bd40   Section        0  rtx_thread.o(.text.osRtxThreadId)
    [Anonymous Symbol]                       0x0800bd50   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x0800bd90   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x0800bdc8   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0800be40   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x0800be79   Thumb Code    34  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x0800be78   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x0800bea0   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadObject                        0x0800bef9   Thumb Code    10  rtx_system.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x0800bef8   Section        0  rtx_system.o(.text.osRtxThreadObject)
    osRtxThreadObject                        0x0800bf09   Thumb Code    10  rtx_thread.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x0800bf08   Section        0  rtx_thread.o(.text.osRtxThreadObject)
    osRtxThreadPostProcess                   0x0800bf19   Thumb Code    68  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800bf18   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800bf60   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x0800bf80   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadSetRunning                    0x0800bfa9   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x0800bfa8   Section        0  rtx_thread.o(.text.osRtxThreadSetRunning)
    osRtxThreadSetRunning                    0x0800bfc1   Thumb Code    20  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x0800bfc0   Section        0  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x0800bfd8   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x0800c018   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x0800c0b0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x0800c0e0   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x0800c158   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x0800c1a0   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0800c2b0   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x0800c2e0   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x0800c319   Thumb Code   220  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x0800c318   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x0800c3f8   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x0800c458   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x0800c4d0   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadEntry                            0x0800c521   Thumb Code    16  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x0800c520   Section        0  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x0800c530   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x0800c558   Section        0  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x0800c598   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x0800c610   Section        0  rtx_thread.o(.text.osThreadSetPriority)
    os_kernel_is_initialized                 0x0800c679   Thumb Code    32  retarget_os_rtos2.o(.text.os_kernel_is_initialized)
    [Anonymous Symbol]                       0x0800c678   Section        0  retarget_os_rtos2.o(.text.os_kernel_is_initialized)
    os_kernel_is_running                     0x0800c699   Thumb Code    32  retarget_os_rtos2.o(.text.os_kernel_is_running)
    [Anonymous Symbol]                       0x0800c698   Section        0  retarget_os_rtos2.o(.text.os_kernel_is_running)
    pb_check_proto3_default_value            0x0800c6b9   Thumb Code   618  pb_encode.o(.text.pb_check_proto3_default_value)
    [Anonymous Symbol]                       0x0800c6b8   Section        0  pb_encode.o(.text.pb_check_proto3_default_value)
    [Anonymous Symbol]                       0x0800c928   Section        0  pb_decode.o(.text.pb_close_string_substream)
    pb_const_cast                            0x0800c971   Thumb Code    14  pb_common.o(.text.pb_const_cast)
    [Anonymous Symbol]                       0x0800c970   Section        0  pb_common.o(.text.pb_const_cast)
    pb_dec_bool                              0x0800c981   Thumb Code    22  pb_decode.o(.text.pb_dec_bool)
    [Anonymous Symbol]                       0x0800c980   Section        0  pb_decode.o(.text.pb_dec_bool)
    pb_dec_bytes                             0x0800c999   Thumb Code   288  pb_decode.o(.text.pb_dec_bytes)
    [Anonymous Symbol]                       0x0800c998   Section        0  pb_decode.o(.text.pb_dec_bytes)
    pb_dec_fixed_length_bytes                0x0800cab9   Thumb Code   184  pb_decode.o(.text.pb_dec_fixed_length_bytes)
    [Anonymous Symbol]                       0x0800cab8   Section        0  pb_decode.o(.text.pb_dec_fixed_length_bytes)
    pb_dec_string                            0x0800cb71   Thumb Code   300  pb_decode.o(.text.pb_dec_string)
    [Anonymous Symbol]                       0x0800cb70   Section        0  pb_decode.o(.text.pb_dec_string)
    pb_dec_submessage                        0x0800cca1   Thumb Code   280  pb_decode.o(.text.pb_dec_submessage)
    [Anonymous Symbol]                       0x0800cca0   Section        0  pb_decode.o(.text.pb_dec_submessage)
    pb_dec_varint                            0x0800cdb9   Thumb Code   590  pb_decode.o(.text.pb_dec_varint)
    [Anonymous Symbol]                       0x0800cdb8   Section        0  pb_decode.o(.text.pb_dec_varint)
    [Anonymous Symbol]                       0x0800d008   Section        0  pb_decode.o(.text.pb_decode)
    [Anonymous Symbol]                       0x0800d030   Section        0  pb_decode.o(.text.pb_decode_bool)
    [Anonymous Symbol]                       0x0800d068   Section        0  pb_decode.o(.text.pb_decode_fixed32)
    [Anonymous Symbol]                       0x0800d0a0   Section        0  pb_decode.o(.text.pb_decode_fixed64)
    pb_decode_inner                          0x0800d0d9   Thumb Code   926  pb_decode.o(.text.pb_decode_inner)
    [Anonymous Symbol]                       0x0800d0d8   Section        0  pb_decode.o(.text.pb_decode_inner)
    [Anonymous Symbol]                       0x0800d478   Section        0  pb_decode.o(.text.pb_decode_svarint)
    [Anonymous Symbol]                       0x0800d4e0   Section        0  pb_decode.o(.text.pb_decode_tag)
    [Anonymous Symbol]                       0x0800d538   Section        0  pb_decode.o(.text.pb_decode_varint)
    [Anonymous Symbol]                       0x0800d608   Section        0  pb_decode.o(.text.pb_decode_varint32)
    pb_decode_varint32_eof                   0x0800d621   Thumb Code   432  pb_decode.o(.text.pb_decode_varint32_eof)
    [Anonymous Symbol]                       0x0800d620   Section        0  pb_decode.o(.text.pb_decode_varint32_eof)
    [Anonymous Symbol]                       0x0800d7d0   Section        0  pb_common.o(.text.pb_default_field_callback)
    pb_enc_bool                              0x0800d849   Thumb Code    32  pb_encode.o(.text.pb_enc_bool)
    [Anonymous Symbol]                       0x0800d848   Section        0  pb_encode.o(.text.pb_enc_bool)
    pb_enc_bytes                             0x0800d869   Thumb Code   136  pb_encode.o(.text.pb_enc_bytes)
    [Anonymous Symbol]                       0x0800d868   Section        0  pb_encode.o(.text.pb_enc_bytes)
    pb_enc_fixed                             0x0800d8f1   Thumb Code   110  pb_encode.o(.text.pb_enc_fixed)
    [Anonymous Symbol]                       0x0800d8f0   Section        0  pb_encode.o(.text.pb_enc_fixed)
    pb_enc_fixed_length_bytes                0x0800d961   Thumb Code    24  pb_encode.o(.text.pb_enc_fixed_length_bytes)
    [Anonymous Symbol]                       0x0800d960   Section        0  pb_encode.o(.text.pb_enc_fixed_length_bytes)
    pb_enc_string                            0x0800d979   Thumb Code   246  pb_encode.o(.text.pb_enc_string)
    [Anonymous Symbol]                       0x0800d978   Section        0  pb_encode.o(.text.pb_enc_string)
    pb_enc_submessage                        0x0800da71   Thumb Code   150  pb_encode.o(.text.pb_enc_submessage)
    [Anonymous Symbol]                       0x0800da70   Section        0  pb_encode.o(.text.pb_enc_submessage)
    pb_enc_varint                            0x0800db09   Thumb Code   396  pb_encode.o(.text.pb_enc_varint)
    [Anonymous Symbol]                       0x0800db08   Section        0  pb_encode.o(.text.pb_enc_varint)
    [Anonymous Symbol]                       0x0800dc98   Section        0  pb_encode.o(.text.pb_encode)
    [Anonymous Symbol]                       0x0800dd18   Section        0  pb_encode.o(.text.pb_encode_fixed32)
    [Anonymous Symbol]                       0x0800dd30   Section        0  pb_encode.o(.text.pb_encode_fixed64)
    [Anonymous Symbol]                       0x0800dd48   Section        0  pb_encode.o(.text.pb_encode_string)
    [Anonymous Symbol]                       0x0800dd80   Section        0  pb_encode.o(.text.pb_encode_submessage)
    [Anonymous Symbol]                       0x0800dea8   Section        0  pb_encode.o(.text.pb_encode_svarint)
    [Anonymous Symbol]                       0x0800df08   Section        0  pb_encode.o(.text.pb_encode_tag)
    [Anonymous Symbol]                       0x0800df38   Section        0  pb_encode.o(.text.pb_encode_tag_for_field)
    [Anonymous Symbol]                       0x0800dfc8   Section        0  pb_encode.o(.text.pb_encode_varint)
    pb_encode_varint_32                      0x0800e019   Thumb Code   240  pb_encode.o(.text.pb_encode_varint_32)
    [Anonymous Symbol]                       0x0800e018   Section        0  pb_encode.o(.text.pb_encode_varint_32)
    [Anonymous Symbol]                       0x0800e108   Section        0  pb_common.o(.text.pb_field_iter_begin)
    [Anonymous Symbol]                       0x0800e130   Section        0  pb_common.o(.text.pb_field_iter_begin_const)
    [Anonymous Symbol]                       0x0800e158   Section        0  pb_common.o(.text.pb_field_iter_begin_extension)
    [Anonymous Symbol]                       0x0800e1b8   Section        0  pb_common.o(.text.pb_field_iter_begin_extension_const)
    [Anonymous Symbol]                       0x0800e1d8   Section        0  pb_common.o(.text.pb_field_iter_find)
    [Anonymous Symbol]                       0x0800e2a0   Section        0  pb_common.o(.text.pb_field_iter_find_extension)
    [Anonymous Symbol]                       0x0800e318   Section        0  pb_common.o(.text.pb_field_iter_next)
    pb_field_set_to_default                  0x0800e339   Thumb Code   410  pb_decode.o(.text.pb_field_set_to_default)
    [Anonymous Symbol]                       0x0800e338   Section        0  pb_decode.o(.text.pb_field_set_to_default)
    [Anonymous Symbol]                       0x0800e4d8   Section        0  pb_decode.o(.text.pb_istream_from_buffer)
    [Anonymous Symbol]                       0x0800e508   Section        0  pb_decode.o(.text.pb_make_string_substream)
    pb_message_set_to_defaults               0x0800e5a1   Thumb Code   234  pb_decode.o(.text.pb_message_set_to_defaults)
    [Anonymous Symbol]                       0x0800e5a0   Section        0  pb_decode.o(.text.pb_message_set_to_defaults)
    [Anonymous Symbol]                       0x0800e690   Section        0  pb_encode.o(.text.pb_ostream_from_buffer)
    [Anonymous Symbol]                       0x0800e6b8   Section        0  pb_decode.o(.text.pb_read)
    pb_readbyte                              0x0800e7c1   Thumb Code   138  pb_decode.o(.text.pb_readbyte)
    [Anonymous Symbol]                       0x0800e7c0   Section        0  pb_decode.o(.text.pb_readbyte)
    [Anonymous Symbol]                       0x0800e850   Section        0  pb_decode.o(.text.pb_skip_field)
    pb_skip_string                           0x0800e8e1   Thumb Code    98  pb_decode.o(.text.pb_skip_string)
    [Anonymous Symbol]                       0x0800e8e0   Section        0  pb_decode.o(.text.pb_skip_string)
    pb_skip_varint                           0x0800e949   Thumb Code    62  pb_decode.o(.text.pb_skip_varint)
    [Anonymous Symbol]                       0x0800e948   Section        0  pb_decode.o(.text.pb_skip_varint)
    [Anonymous Symbol]                       0x0800e988   Section        0  pb_encode.o(.text.pb_write)
    [Anonymous Symbol]                       0x0800ea40   Section        0  receivethread.o(.text.processReceivedData)
    read_raw_value                           0x0800eaa1   Thumb Code   254  pb_decode.o(.text.read_raw_value)
    [Anonymous Symbol]                       0x0800eaa0   Section        0  pb_decode.o(.text.read_raw_value)
    [Anonymous Symbol]                       0x0800eba0   Section        0  receivethread.o(.text.receiveThread)
    [Anonymous Symbol]                       0x0800ed60   Section        0  receiveinit.o(.text.receive_init)
    safe_read_bool                           0x0800eda9   Thumb Code    64  pb_encode.o(.text.safe_read_bool)
    [Anonymous Symbol]                       0x0800eda8   Section        0  pb_encode.o(.text.safe_read_bool)
    [Anonymous Symbol]                       0x0800ede8   Section        0  e4ftbotterminal.o(.text.stdout_putchar)
    svcRtxDelay                              0x0800ee51   Thumb Code    80  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0800ee50   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x0800eea1   Thumb Code    22  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x0800eea0   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x0800eeb9   Thumb Code   772  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x0800eeb8   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x0800f1c1   Thumb Code   164  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x0800f1c0   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x0800f269   Thumb Code   360  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0800f268   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGetCount               0x0800f3d1   Thumb Code    72  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    [Anonymous Symbol]                       0x0800f3d0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    svcRtxMessageQueueNew                    0x0800f419   Thumb Code   656  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x0800f418   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x0800f6a9   Thumb Code   348  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x0800f6a8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueueReset                  0x0800f809   Thumb Code   298  rtx_msgqueue.o(.text.svcRtxMessageQueueReset)
    [Anonymous Symbol]                       0x0800f808   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueReset)
    svcRtxMutexAcquire                       0x0800f939   Thumb Code   374  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x0800f938   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x0800fab1   Thumb Code    88  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x0800fab0   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x0800fb09   Thumb Code   322  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x0800fb08   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x0800fc51   Thumb Code   416  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x0800fc50   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxSemaphoreAcquire                   0x0800fdf1   Thumb Code   170  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x0800fdf0   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreNew                       0x0800fea1   Thumb Code   374  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x0800fea0   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreRelease                   0x08010019   Thumb Code   162  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08010018   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxThreadExit                         0x080100c1   Thumb Code   132  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x080100c0   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadGetId                        0x08010149   Thumb Code    22  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x08010148   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x08010161   Thumb Code  1130  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08010160   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadSetPriority                  0x080105d1   Thumb Code   164  rtx_thread.o(.text.svcRtxThreadSetPriority)
    [Anonymous Symbol]                       0x080105d0   Section        0  rtx_thread.o(.text.svcRtxThreadSetPriority)
    [Anonymous Symbol]                       0x08010678   Section        0  transmitthread.o(.text.transmitThread)
    [Anonymous Symbol]                       0x08010850   Section        0  initcom.o(.text.uart_init)
    [Anonymous Symbol]                       0x08010950   Section        0  initcom.o(.text.wifi_init)
    xPSR_InitVal                             0x08010a91   Thumb Code    18  rtx_thread.o(.text.xPSR_InitVal)
    [Anonymous Symbol]                       0x08010a90   Section        0  rtx_thread.o(.text.xPSR_InitVal)
    CL$$btod_d2e                             0x08010aa2   Section       62  btod.o(CL$$btod_d2e)
    CL$$btod_d2e_denorm_low                  0x08010ae0   Section       70  btod.o(CL$$btod_d2e_denorm_low)
    CL$$btod_d2e_norm_op1                    0x08010b26   Section       96  btod.o(CL$$btod_d2e_norm_op1)
    CL$$btod_div_common                      0x08010b88   Section      824  btod.o(CL$$btod_div_common)
    CL$$btod_e2e                             0x08010ec0   Section      220  btod.o(CL$$btod_e2e)
    CL$$btod_ediv                            0x08010f9c   Section       42  btod.o(CL$$btod_ediv)
    CL$$btod_emul                            0x08010fc6   Section       42  btod.o(CL$$btod_emul)
    CL$$btod_mult_common                     0x08010ff0   Section      580  btod.o(CL$$btod_mult_common)
    i.__ARM_fpclassify                       0x08011234   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i._is_digit                              0x08011264   Section        0  __printf_wp.o(i._is_digit)
    i.fputc                                  0x08011272   Section        0  fputc.o(i.fputc)
    locale$$code                             0x08011290   Section       44  lc_ctype_c.o(locale$$code)
    locale$$code                             0x080112bc   Section       44  lc_numeric_c.o(locale$$code)
    $v0                                      0x080112e8   Number         0  dretinf.o(x$fpl$dretinf)
    x$fpl$dretinf                            0x080112e8   Section       12  dretinf.o(x$fpl$dretinf)
    $v0                                      0x080112f4   Number         0  f2d.o(x$fpl$f2d)
    x$fpl$f2d                                0x080112f4   Section       86  f2d.o(x$fpl$f2d)
    $v0                                      0x0801134a   Number         0  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fnaninf                            0x0801134a   Section      140  fnaninf.o(x$fpl$fnaninf)
    $v0                                      0x080113d6   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x080113d6   Section       26  fpinit.o(x$fpl$fpinit)
    $v0                                      0x080113f0   Number         0  printf1.o(x$fpl$printf1)
    x$fpl$printf1                            0x080113f0   Section        4  printf1.o(x$fpl$printf1)
    $v0                                      0x080113f4   Number         0  printf2.o(x$fpl$printf2)
    x$fpl$printf2                            0x080113f4   Section        4  printf2.o(x$fpl$printf2)
    maptable                                 0x080113f8   Data          17  __printf_flags_ss_wp.o(.constdata)
    .constdata                               0x080113f8   Section       17  __printf_flags_ss_wp.o(.constdata)
    x$fpl$usenofp                            0x080113f8   Section        0  usenofp.o(x$fpl$usenofp)
    initial_mbstate                          0x0801140c   Data           8  _printf_wctomb.o(.constdata)
    .constdata                               0x0801140c   Section        8  _printf_wctomb.o(.constdata)
    uc_hextab                                0x08011414   Data          20  _printf_hex_int_ll_ptr.o(.constdata)
    .constdata                               0x08011414   Section       40  _printf_hex_int_ll_ptr.o(.constdata)
    lc_hextab                                0x08011428   Data          20  _printf_hex_int_ll_ptr.o(.constdata)
    lc_hextab                                0x0801143c   Data          19  _printf_fp_hex.o(.constdata)
    .constdata                               0x0801143c   Section       38  _printf_fp_hex.o(.constdata)
    uc_hextab                                0x0801144f   Data          19  _printf_fp_hex.o(.constdata)
    tenpwrs_x                                0x08011464   Data          60  bigflt0.o(.constdata)
    .constdata                               0x08011464   Section      148  bigflt0.o(.constdata)
    tenpwrs_i                                0x080114a0   Data          64  bigflt0.o(.constdata)
    __tagsym$$used.0                         0x080114f8   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.1                         0x08011568   Number         0  rtx_lib.o(.rodata)
    DMA_CalcBaseAndBitshift.flagBitshiftOffset 0x080115b8   Data           8  stm32f7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset)
    [Anonymous Symbol]                       0x080115b8   Section        0  stm32f7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset)
    os_idle_thread_attr                      0x08011630   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08011630   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x08011654   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x08011654   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x0801166c   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x0801166c   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str.6                                 0x08011690   Data         201  wifimain.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011690   Section        0  wifimain.o(.rodata.str1.1)
    .L.str.1                                 0x08011759   Data          64  wifimain.o(.rodata.str1.1)
    .L.str.2                                 0x08011799   Data          71  wifimain.o(.rodata.str1.1)
    .L.str.5                                 0x080117e0   Data          73  wifimain.o(.rodata.str1.1)
    .L.str.4                                 0x08011829   Data          62  wifimain.o(.rodata.str1.1)
    .L.str                                   0x08011867   Data          33  wifimain.o(.rodata.str1.1)
    .L.str.3                                 0x08011888   Data          40  wifimain.o(.rodata.str1.1)
    .L.str.7                                 0x080118b0   Data          62  wifimain.o(.rodata.str1.1)
    .L.str                                   0x080118ee   Data           9  initcom.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080118ee   Section        0  initcom.o(.rodata.str1.1)
    .L.str.1                                 0x080118f7   Data           8  initcom.o(.rodata.str1.1)
    .L.str.2                                 0x080118ff   Data           3  initcom.o(.rodata.str1.1)
    .L.str                                   0x08011902   Data          16  transmitthread.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011902   Section        0  transmitthread.o(.rodata.str1.1)
    .L.str                                   0x08011912   Data           6  receivethread.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011912   Section        0  receivethread.o(.rodata.str1.1)
    .L.str.21                                0x08011918   Data          16  pb_decode.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011918   Section        0  pb_decode.o(.rodata.str1.1)
    .L.str.5                                 0x08011928   Data          23  pb_decode.o(.rodata.str1.1)
    .L.str.9                                 0x08011928   Data          23  pb_decode.o(.rodata.str1.1)
    .L.str.8                                 0x0801193f   Data          33  pb_decode.o(.rodata.str1.1)
    .L.str.5                                 0x08011960   Data          15  pb_decode.o(.rodata.str1.1)
    .L.str.15                                0x0801196f   Data          18  pb_decode.o(.rodata.str1.1)
    .L.str.11                                0x08011981   Data          19  pb_decode.o(.rodata.str1.1)
    .L.str.2                                 0x08011981   Data          19  pb_decode.o(.rodata.str1.1)
    .L.str.13                                0x08011994   Data          16  pb_decode.o(.rodata.str1.1)
    .L.str.3                                 0x080119a4   Data          18  pb_decode.o(.rodata.str1.1)
    .L.str.20                                0x080119b6   Data          34  pb_decode.o(.rodata.str1.1)
    .L.str.14                                0x080119d8   Data          18  pb_decode.o(.rodata.str1.1)
    .L.str.9                                 0x080119d8   Data          18  pb_decode.o(.rodata.str1.1)
    .L.str.7                                 0x080119ea   Data           9  pb_decode.o(.rodata.str1.1)
    .L.str                                   0x080119f3   Data          14  pb_decode.o(.rodata.str1.1)
    .L.str.10                                0x08011a01   Data          18  pb_decode.o(.rodata.str1.1)
    .L.str.4                                 0x08011a01   Data          18  pb_decode.o(.rodata.str1.1)
    .L.str.1                                 0x08011a13   Data           9  pb_decode.o(.rodata.str1.1)
    .L.str.1                                 0x08011a13   Data           9  pb_decode.o(.rodata.str1.1)
    .L.str.13                                0x08011a1c   Data          25  pb_decode.o(.rodata.str1.1)
    .L.str.19                                0x08011a1c   Data          25  pb_decode.o(.rodata.str1.1)
    .L.str.6                                 0x08011a35   Data          23  pb_decode.o(.rodata.str1.1)
    .L.str.4                                 0x08011a4c   Data          24  pb_decode.o(.rodata.str1.1)
    .L.str.17                                0x08011a64   Data          18  pb_decode.o(.rodata.str1.1)
    .L.str.18                                0x08011a76   Data          16  pb_decode.o(.rodata.str1.1)
    .L.str.16                                0x08011a86   Data          15  pb_decode.o(.rodata.str1.1)
    .L.str.2                                 0x08011a95   Data          16  pb_decode.o(.rodata.str1.1)
    .L.str.12                                0x08011aa5   Data          15  pb_decode.o(.rodata.str1.1)
    .L.str.8                                 0x08011ab4   Data           7  pb_encode.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011ab4   Section        0  pb_encode.o(.rodata.str1.1)
    .L.str.10                                0x08011abb   Data          20  pb_encode.o(.rodata.str1.1)
    .L.str.7                                 0x08011acf   Data          24  pb_encode.o(.rodata.str1.1)
    .L.str.3                                 0x08011ae7   Data          20  pb_encode.o(.rodata.str1.1)
    .L.str.12                                0x08011afb   Data          20  pb_encode.o(.rodata.str1.1)
    .L.str.11                                0x08011b0f   Data          19  pb_encode.o(.rodata.str1.1)
    .L.str                                   0x08011b22   Data          12  pb_encode.o(.rodata.str1.1)
    .L.str.6                                 0x08011b2e   Data          15  pb_encode.o(.rodata.str1.1)
    .L.str                                   0x08011b3d   Data          11  rtx_kernel.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011b3d   Section        0  rtx_kernel.o(.rodata.str1.1)
    .L.str                                   0x08011b48   Data           7  retarget_io.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011b48   Section        0  retarget_io.o(.rodata.str1.1)
    .L.str.2                                 0x08011b4f   Data           8  retarget_io.o(.rodata.str1.1)
    .L.str.1                                 0x08011b57   Data           8  retarget_io.o(.rodata.str1.1)
    .L.str                                   0x08011b5f   Data          19  e4ftbotterminal.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011b5f   Section        0  e4ftbotterminal.o(.rodata.str1.1)
    uart_init.command                        0x08011b72   Data           5  initcom.o(.rodata.uart_init.command)
    [Anonymous Symbol]                       0x08011b72   Section        0  initcom.o(.rodata.uart_init.command)
    wifi_init.udpCommand                     0x08011b77   Data          39  initcom.o(.rodata.wifi_init.udpCommand)
    [Anonymous Symbol]                       0x08011b77   Section        0  initcom.o(.rodata.wifi_init.udpCommand)
    locale$$data                             0x08011be0   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x08011be4   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x08011bec   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x08011cf0   Data           0  lc_ctype_c.o(locale$$data)
    locale$$data                             0x08011cf0   Section       28  lc_numeric_c.o(locale$$data)
    __lcnum_c_name                           0x08011cf4   Data           2  lc_numeric_c.o(locale$$data)
    __lcnum_c_start                          0x08011cfc   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_point                          0x08011d08   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_thousands                      0x08011d0a   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_grouping                       0x08011d0b   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_end                            0x08011d0c   Data           0  lc_numeric_c.o(locale$$data)
    Heap_Mem                                 0x20000008   Data        1536  startup_stm32f746xx.o(HEAP)
    HEAP                                     0x20000008   Section     1536  startup_stm32f746xx.o(HEAP)
    Stack_Mem                                0x20000608   Data        2048  startup_stm32f746xx.o(STACK)
    STACK                                    0x20000608   Section     2048  startup_stm32f746xx.o(STACK)
    __initial_sp                             0x20000e08   Data           0  startup_stm32f746xx.o(STACK)
    .data                                    0x20010000   Section        4  stdio_streams.o(.data)
    .data                                    0x20010004   Section        4  stdio_streams.o(.data)
    .data                                    0x20010008   Section        4  stdio_streams.o(.data)
    .data                                    0x2001000c   Section        4  streamlock.o(.data)
    .bss                                     0x200101c0   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20010214   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20010268   Section       84  stdio_streams.o(.bss)
    .bss                                     0x200102bc   Section       96  libspace.o(.bss)
    __termSem                                0x20010320   Data           4  e4ftbotterminal.o(.bss.__termSem)
    os_isr_queue                             0x200106f8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x200106f8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20010738   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x20018738   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20018738   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x2001873c   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x2001873c   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20018770   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20018770   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200187c0   Data          80  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200187c0   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20018810   Data          80  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20018860   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20018860   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20018a60   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20018a60   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    pEmbDispHandle                           0x20018c60   Data           4  e4ftbotterminal.o(.bss.pEmbDispHandle)
    receiveThread.buffer_rx                  0x20018c6c   Data         128  receivethread.o(.bss.receiveThread.buffer_rx)
    [Anonymous Symbol]                       0x20018c6c   Section        0  receivethread.o(.bss.receiveThread.buffer_rx)
    transmitThread.buffer_stream             0x20018d00   Data         128  transmitthread.o(.bss.transmitThread.buffer_stream)
    [Anonymous Symbol]                       0x20018d00   Section        0  transmitthread.o(.bss.transmitThread.buffer_stream)
    transmitThread.buffer_transmit           0x20018d80   Data         128  transmitthread.o(.bss.transmitThread.buffer_transmit)
    [Anonymous Symbol]                       0x20018d80   Section        0  transmitthread.o(.bss.transmitThread.buffer_transmit)
    uart_init.buffer_msgQ                    0x20018e04   Data         128  initcom.o(.bss.uart_init.buffer_msgQ)
    [Anonymous Symbol]                       0x20018e04   Section        0  initcom.o(.bss.uart_init.buffer_msgQ)
    wifi_init.buffer_msgQ                    0x20018e88   Data         128  initcom.o(.bss.wifi_init.buffer_msgQ)
    [Anonymous Symbol]                       0x20018e88   Section        0  initcom.o(.bss.wifi_init.buffer_msgQ)
    wifi_init.commandBuffer                  0x20018f08   Data         128  initcom.o(.bss.wifi_init.commandBuffer)
    [Anonymous Symbol]                       0x20018f08   Section        0  initcom.o(.bss.wifi_init.commandBuffer)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi5$EXTD16$VFPS$VFMA$PE$PLD8$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEJ$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_wc                                - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    __Vectors_Size                           0x000001c8   Number         0  startup_stm32f746xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f746xx.o(RESET)
    __Vectors_End                            0x080001c8   Data           0  startup_stm32f746xx.o(RESET)
    __main                                   0x080001c9   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001d1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001d1   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001d1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x080001db   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x0800022d   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x0800022d   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_copy                       0x08000269   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x08000285   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x08000289   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_n                                0x080002a5   Thumb Code     0  _printf_n.o(.ARM.Collect$$_printf_percent$$00000001)
    _printf_percent                          0x080002a5   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_p                                0x080002ab   Thumb Code     0  _printf_p.o(.ARM.Collect$$_printf_percent$$00000002)
    _printf_f                                0x080002b1   Thumb Code     0  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    _printf_e                                0x080002b7   Thumb Code     0  _printf_e.o(.ARM.Collect$$_printf_percent$$00000004)
    _printf_g                                0x080002bd   Thumb Code     0  _printf_g.o(.ARM.Collect$$_printf_percent$$00000005)
    _printf_a                                0x080002c3   Thumb Code     0  _printf_a.o(.ARM.Collect$$_printf_percent$$00000006)
    _printf_ll                               0x080002c9   Thumb Code     0  _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007)
    _printf_i                                0x080002d3   Thumb Code     0  _printf_i.o(.ARM.Collect$$_printf_percent$$00000008)
    _printf_d                                0x080002d9   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_u                                0x080002df   Thumb Code     0  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    _printf_o                                0x080002e5   Thumb Code     0  _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B)
    _printf_x                                0x080002eb   Thumb Code     0  _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C)
    _printf_lli                              0x080002f1   Thumb Code     0  _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D)
    _printf_lld                              0x080002f7   Thumb Code     0  _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E)
    _printf_llu                              0x080002fd   Thumb Code     0  _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F)
    _printf_llo                              0x08000303   Thumb Code     0  _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010)
    _printf_llx                              0x08000309   Thumb Code     0  _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011)
    _printf_l                                0x0800030f   Thumb Code     0  _printf_l.o(.ARM.Collect$$_printf_percent$$00000012)
    _printf_c                                0x08000319   Thumb Code     0  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    _printf_s                                0x0800031f   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_lc                               0x08000325   Thumb Code     0  _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015)
    _printf_ls                               0x0800032b   Thumb Code     0  _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016)
    _printf_percent_end                      0x08000331   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x08000335   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x08000337   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_heap_2                     0x0800033b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x0800033b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x0800033b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_heap_1                     0x08000343   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_common                  0x08000343   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_rand_1                     0x08000343   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_user_alloc_1               0x08000343   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_lc_collate_1               0x08000349   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_2                 0x08000349   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000014)
    __rt_lib_init_lc_ctype_1                 0x08000355   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x08000355   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_2               0x08000355   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000018)
    __rt_lib_init_atexit_1                   0x0800035f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800035f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_fp_trap_1                  0x0800035f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800035f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_lc_numeric_1               0x0800035f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800035f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_signal_1                   0x0800035f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_2                    0x0800035f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000026)
    __rt_lib_init_alloca_1                   0x08000363   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x08000363   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_cpp_1                      0x08000363   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x08000363   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_return                     0x08000363   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_stdio_1                    0x08000363   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_shutdown                        0x08000365   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000367   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_stdio_2                0x08000367   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_fp_trap_1              0x0800036b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x0800036b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x0800036b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800036b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800036b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x0800036f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800036f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_entry                               0x08000371   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000371   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000371   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000377   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800037f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000383   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000383   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800038b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800038d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800038d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000391   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x08000399   Thumb Code   208  irq_armv7m.o(.text)
    PendSV_Handler                           0x08000469   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x08000479   Thumb Code    16  irq_armv7m.o(.text)
    Reset_Handler                            0x08000499   Thumb Code     8  startup_stm32f746xx.o(.text)
    NMI_Handler                              0x080004a1   Thumb Code     2  startup_stm32f746xx.o(.text)
    HardFault_Handler                        0x080004a3   Thumb Code     2  startup_stm32f746xx.o(.text)
    MemManage_Handler                        0x080004a5   Thumb Code     2  startup_stm32f746xx.o(.text)
    BusFault_Handler                         0x080004a7   Thumb Code     2  startup_stm32f746xx.o(.text)
    UsageFault_Handler                       0x080004a9   Thumb Code     2  startup_stm32f746xx.o(.text)
    DebugMon_Handler                         0x080004ad   Thumb Code     2  startup_stm32f746xx.o(.text)
    ADC_IRQHandler                           0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_RX0_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_RX1_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_TX_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_RX0_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_RX1_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_SCE_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_TX_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    CEC_IRQHandler                           0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DCMI_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2D_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    ETH_IRQHandler                           0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    ETH_WKUP_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI0_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI15_10_IRQHandler                     0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI1_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI2_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI3_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI4_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI9_5_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    FLASH_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    FMC_IRQHandler                           0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    FPU_IRQHandler                           0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C1_ER_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C1_EV_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C2_ER_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C2_EV_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C3_ER_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C3_EV_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C4_ER_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C4_EV_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    LPTIM1_IRQHandler                        0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    LTDC_ER_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    LTDC_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_FS_IRQHandler                        0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_IRQHandler                        0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    PVD_IRQHandler                           0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    QUADSPI_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    RCC_IRQHandler                           0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    RNG_IRQHandler                           0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SAI1_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SAI2_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SDMMC1_IRQHandler                        0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPDIF_RX_IRQHandler                      0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI1_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI2_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI3_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI4_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI5_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI6_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_CC_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM2_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM3_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM4_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM5_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM7_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_CC_IRQHandler                       0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART4_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART5_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART7_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART8_IRQHandler                         0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART1_IRQHandler                        0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART3_IRQHandler                        0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    WWDG_IRQHandler                          0x080004b3   Thumb Code     0  startup_stm32f746xx.o(.text)
    __user_initial_stackheap                 0x080004b5   Thumb Code     0  startup_stm32f746xx.o(.text)
    malloc_internal$concurrent               0x080004e9   Thumb Code   130  h1_alloc_threads.o(.text)
    malloc                                   0x0800056b   Thumb Code    20  h1_alloc_threads.o(.text)
    __aeabi_uldivmod                         0x0800057f   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x0800057f   Thumb Code   240  lludivv7m.o(.text)
    printf                                   0x08000671   Thumb Code    20  printf.o(.text)
    snprintf                                 0x08000689   Thumb Code    58  snprintf.o(.text)
    __2printf                                0x080006c9   Thumb Code    20  __2printf.o(.text)
    _printf_int_dec                          0x080006e1   Thumb Code   104  _printf_dec.o(.text)
    __printf                                 0x08000759   Thumb Code   388  __printf_flags_ss_wp.o(.text)
    atoi                                     0x080008e1   Thumb Code    26  atoi.o(.text)
    _do_fflush                               0x080008fd   Thumb Code    74  fflush_locked.o(.text)
    fflush                                   0x08000947   Thumb Code    60  fflush_locked.o(.text)
    exit                                     0x0800098d   Thumb Code    18  exit.o(.text)
    strchr                                   0x0800099f   Thumb Code    20  strchr.o(.text)
    strncmp                                  0x080009b3   Thumb Code   150  strncmp.o(.text)
    __aeabi_memcpy                           0x08000a49   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000a49   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000aaf   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x08000ad3   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000ad3   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x08000ad7   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000b17   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000b17   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000b17   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08000b1b   Thumb Code    74  rt_memclr_w.o(.text)
    strcmp                                   0x08000b69   Thumb Code   124  strcmpv7m_pel.o(.text)
    __use_two_region_memory                  0x08000be5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x08000be7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000be9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_descriptor                     0x08000bed   Thumb Code     8  rt_heap_descriptor_intlibspace.o(.text)
    __aeabi_errno_addr                       0x08000bf5   Thumb Code     8  rt_errno_addr_intlibspace.o(.text)
    __errno$intlibspace                      0x08000bf5   Thumb Code     0  rt_errno_addr_intlibspace.o(.text)
    __rt_errno_addr$intlibspace              0x08000bf5   Thumb Code     0  rt_errno_addr_intlibspace.o(.text)
    __use_no_heap                            0x08000bfd   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x08000bff   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08000c01   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x08000c03   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x08000c05   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x08000c27   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x08000c2d   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x08000c8b   Thumb Code    14  h1_init_threads.o(.text)
    __Heap_DescSize                          0x08000c99   Thumb Code     4  h1_init_threads.o(.text)
    free_internal$concurrent                 0x08000c9d   Thumb Code    98  h1_free_threads.o(.text)
    free                                     0x08000cff   Thumb Code    20  h1_free_threads.o(.text)
    _printf_pre_padding                      0x08000d13   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x08000d3f   Thumb Code    34  _printf_pad.o(.text)
    _printf_truncate_signed                  0x08000d61   Thumb Code    18  _printf_truncate.o(.text)
    _printf_truncate_unsigned                0x08000d73   Thumb Code    18  _printf_truncate.o(.text)
    _printf_str                              0x08000d85   Thumb Code    82  _printf_str.o(.text)
    _printf_int_common                       0x08000dd7   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_charcount                        0x08000e89   Thumb Code    40  _printf_charcount.o(.text)
    _printf_char_common                      0x08000ebb   Thumb Code    32  _printf_char_common.o(.text)
    _snputc                                  0x08000ee1   Thumb Code    16  _snputc.o(.text)
    _printf_wctomb                           0x08000ef1   Thumb Code   182  _printf_wctomb.o(.text)
    _printf_longlong_dec                     0x08000fad   Thumb Code   108  _printf_longlong_dec.o(.text)
    _printf_longlong_oct                     0x08001029   Thumb Code    68  _printf_oct_int_ll.o(.text)
    _printf_int_oct                          0x0800106d   Thumb Code    24  _printf_oct_int_ll.o(.text)
    _printf_ll_oct                           0x08001085   Thumb Code    12  _printf_oct_int_ll.o(.text)
    _printf_longlong_hex                     0x08001099   Thumb Code    86  _printf_hex_int_ll_ptr.o(.text)
    _printf_int_hex                          0x080010ef   Thumb Code    28  _printf_hex_int_ll_ptr.o(.text)
    _printf_ll_hex                           0x0800110b   Thumb Code    12  _printf_hex_int_ll_ptr.o(.text)
    _printf_hex_ptr                          0x08001117   Thumb Code    18  _printf_hex_int_ll_ptr.o(.text)
    strtol                                   0x0800112d   Thumb Code   112  strtol.o(.text)
    _fseek                                   0x0800119d   Thumb Code   242  fseek.o(.text)
    fseek                                    0x0800119d   Thumb Code     0  fseek.o(.text)
    _seterr                                  0x08001295   Thumb Code    20  stdio.o(.text)
    _writebuf                                0x080012a9   Thumb Code   108  stdio.o(.text)
    _fflush                                  0x08001315   Thumb Code    70  stdio.o(.text)
    _deferredlazyseek                        0x0800135b   Thumb Code    60  stdio.o(.text)
    _initio                                  0x0800139d   Thumb Code   240  initio_locked.o(.text)
    _terminateio                             0x0800148d   Thumb Code   168  initio_locked.o(.text)
    __aeabi_memcpy4                          0x08001565   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08001565   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08001565   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080015ad   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_libspace                          0x080015c9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080015c9   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x080015c9   Thumb Code     0  libspace.o(.text)
    __rt_ctype_table                         0x080015d1   Thumb Code    16  rt_ctype_table.o(.text)
    _maybe_terminate_alloc                   0x080015e1   Thumb Code     0  maybetermalloc2.o(.text)
    __Heap_ProvideMemory                     0x080015ef   Thumb Code    68  h1_extend_threads.o(.text)
    _ll_udiv10                               0x08001633   Thumb Code   138  lludiv10.o(.text)
    _printf_fp_dec_real                      0x0800186d   Thumb Code   620  _printf_fp_dec.o(.text)
    _printf_fp_hex_real                      0x08001ad9   Thumb Code   756  _printf_fp_hex.o(.text)
    _printf_cs_common                        0x08001dd5   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x08001de9   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x08001df9   Thumb Code     8  _printf_char.o(.text)
    _printf_lcs_common                       0x08001e01   Thumb Code    20  _printf_wchar.o(.text)
    _printf_wchar                            0x08001e15   Thumb Code    16  _printf_wchar.o(.text)
    _printf_wstring                          0x08001e25   Thumb Code     8  _printf_wchar.o(.text)
    _strtoul                                 0x08001e2d   Thumb Code   158  _strtoul.o(.text)
    _ftell_internal                          0x08001ecb   Thumb Code    66  ftell.o(.text)
    ftell                                    0x08001ecb   Thumb Code     0  ftell.o(.text)
    _fclose_internal                         0x08001f0d   Thumb Code    76  fclose.o(.text)
    fclose                                   0x08001f0d   Thumb Code     0  fclose.o(.text)
    setvbuf                                  0x08001f59   Thumb Code   104  setvbuf_locked.o(.text)
    freopen                                  0x08002075   Thumb Code    42  fopen_locked.o(.text)
    _fopen$locked                            0x0800209f   Thumb Code   100  fopen_locked.o(.text)
    _c16rtomb                                0x0800210d   Thumb Code    72  _c16rtomb.o(.text)
    _wcrtomb                                 0x0800210d   Thumb Code     0  _c16rtomb.o(.text)
    __rt_SIGRTRED                            0x08002155   Thumb Code    14  defsig_rtred_outer.o(.text)
    __rt_SIGRTMEM                            0x08002163   Thumb Code    14  defsig_rtmem_outer.o(.text)
    _sys_exit                                0x08002171   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0800217d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800217d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800217f   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x0800217f   Thumb Code    74  sys_stackheap_outer.o(.text)
    __rt_locale                              0x080021c9   Thumb Code     8  rt_locale_intlibspace.o(.text)
    _terminate_alloc                         0x080021d1   Thumb Code    16  term_alloc.o(.text)
    _printf_fp_infnan                        0x080021e1   Thumb Code   112  _printf_fp_infnan.o(.text)
    _chval                                   0x08002261   Thumb Code    28  _chval.o(.text)
    _btod_etento                             0x0800227d   Thumb Code   224  bigflt0.o(.text)
    __flsbuf                                 0x08002361   Thumb Code   482  flsbuf.o(.text)
    __flsbuf_byte                            0x08002361   Thumb Code     0  flsbuf.o(.text)
    __flsbuf_wide                            0x08002361   Thumb Code     0  flsbuf.o(.text)
    __sig_exit                               0x08002543   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTRED_inner                      0x0800254d   Thumb Code    14  defsig_rtred_inner.o(.text)
    __rt_SIGRTMEM_inner                      0x08002581   Thumb Code    22  defsig_rtmem_inner.o(.text)
    __Heap_Finalize                          0x080025d1   Thumb Code    10  h1_final_threads.o(.text)
    _printf_char_file                        0x080025dd   Thumb Code    58  _printf_char_file_locked.o(.text)
    __default_signal_display                 0x0800261d   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x0800264f   Thumb Code    14  sys_wrch.o(.text)
    _fp_init                                 0x08002661   Thumb Code    22  rtx_lib.o(.text.$Sub$$_fp_init)
    DMA1_Stream5_IRQHandler                  0x08002801   Thumb Code    16  stm32f7xx_it.o(.text.DMA1_Stream5_IRQHandler)
    DMA1_Stream6_IRQHandler                  0x08002811   Thumb Code    16  stm32f7xx_it.o(.text.DMA1_Stream6_IRQHandler)
    DMA2_Stream1_IRQHandler                  0x08002821   Thumb Code    16  stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler)
    DMA2_Stream6_IRQHandler                  0x08002831   Thumb Code    16  stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler)
    E4ftbotTerminalInit                      0x080029d9   Thumb Code   188  e4ftbotterminal.o(.text.E4ftbotTerminalInit)
    E4setPosDisp                             0x08002a95   Thumb Code    28  e4ftbotterminal.o(.text.E4setPosDisp)
    Error_Handler                            0x08002ac1   Thumb Code     6  main.o(.text.Error_Handler)
    EvrRtxDelay                              0x08002ac9   Thumb Code     8  rtx_evr.o(.text.EvrRtxDelay)
    EvrRtxDelayCompleted                     0x08002ad1   Thumb Code     8  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxDelayError                         0x08002ad9   Thumb Code     8  rtx_evr.o(.text.EvrRtxDelayError)
    EvrRtxDelayStarted                       0x08002ae1   Thumb Code     8  rtx_evr.o(.text.EvrRtxDelayStarted)
    EvrRtxEventFlagsWaitTimeout              0x08002ae9   Thumb Code     8  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x08002af1   Thumb Code     8  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelErrorNotify                  0x08002af9   Thumb Code    10  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    EvrRtxKernelGetState                     0x08002b09   Thumb Code     8  rtx_evr.o(.text.EvrRtxKernelGetState)
    EvrRtxKernelInitialize                   0x08002b11   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x08002b19   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x08002b21   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x08002b29   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x08002b31   Thumb Code    14  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x08002b41   Thumb Code    10  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x08002b51   Thumb Code    12  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x08002b61   Thumb Code    14  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x08002b71   Thumb Code    12  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x08002b81   Thumb Code    12  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x08002b91   Thumb Code     8  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x08002b99   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x08002ba9   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x08002bb9   Thumb Code    14  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetCount               0x08002bc9   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueGetCount)
    EvrRtxMessageQueueGetPending             0x08002bd9   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x08002be9   Thumb Code     8  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x08002bf1   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08002c01   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNew                    0x08002c11   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    EvrRtxMessageQueueNotInserted            0x08002c21   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x08002c31   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x08002c41   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08002c51   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x08002c61   Thumb Code     8  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueReset                  0x08002c69   Thumb Code     8  rtx_evr.o(.text.EvrRtxMessageQueueReset)
    EvrRtxMessageQueueResetDone              0x08002c71   Thumb Code     8  rtx_evr.o(.text.EvrRtxMessageQueueResetDone)
    EvrRtxMessageQueueRetrieved              0x08002c79   Thumb Code    10  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquire                       0x08002c89   Thumb Code    10  rtx_evr.o(.text.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x08002c99   Thumb Code    10  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x08002ca9   Thumb Code     8  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x08002cb1   Thumb Code    10  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x08002cc1   Thumb Code    10  rtx_evr.o(.text.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x08002cd1   Thumb Code     8  rtx_evr.o(.text.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x08002cd9   Thumb Code     8  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x08002ce1   Thumb Code    10  rtx_evr.o(.text.EvrRtxMutexError)
    EvrRtxMutexNew                           0x08002cf1   Thumb Code     8  rtx_evr.o(.text.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x08002cf9   Thumb Code     8  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x08002d01   Thumb Code     8  rtx_evr.o(.text.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x08002d09   Thumb Code    10  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquire                   0x08002d19   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    EvrRtxSemaphoreAcquirePending            0x08002d29   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    EvrRtxSemaphoreAcquireTimeout            0x08002d39   Thumb Code     8  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxSemaphoreAcquired                  0x08002d41   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    EvrRtxSemaphoreCreated                   0x08002d51   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    EvrRtxSemaphoreError                     0x08002d61   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreError)
    EvrRtxSemaphoreNew                       0x08002d71   Thumb Code    12  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    EvrRtxSemaphoreNotAcquired               0x08002d81   Thumb Code     8  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    EvrRtxSemaphoreRelease                   0x08002d89   Thumb Code     8  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    EvrRtxSemaphoreReleased                  0x08002d91   Thumb Code    10  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    EvrRtxThreadBlocked                      0x08002da1   Thumb Code    10  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x08002db1   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x08002dc1   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x08002dc9   Thumb Code    10  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x08002dd9   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsWaitCompleted           0x08002de1   Thumb Code    14  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitTimeout             0x08002df1   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadGetId                        0x08002df9   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadGetId)
    EvrRtxThreadJoined                       0x08002e01   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x08002e09   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x08002e19   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadPriorityUpdated              0x08002e21   Thumb Code    10  rtx_evr.o(.text.EvrRtxThreadPriorityUpdated)
    EvrRtxThreadSetPriority                  0x08002e31   Thumb Code    10  rtx_evr.o(.text.EvrRtxThreadSetPriority)
    EvrRtxThreadSwitched                     0x08002e41   Thumb Code     8  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x08002e49   Thumb Code    10  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x08002e59   Thumb Code    10  rtx_evr.o(.text.EvrRtxTimerCallback)
    HAL_ADCEx_InjectedConvCpltCallback       0x08002e69   Thumb Code     8  stm32f7xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback)
    HAL_ADC_ConfigChannel                    0x08002e71   Thumb Code   662  stm32f7xx_hal_adc.o(.text.HAL_ADC_ConfigChannel)
    HAL_ADC_ConvCpltCallback                 0x08003109   Thumb Code     8  stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback)
    HAL_ADC_ConvHalfCpltCallback             0x08003111   Thumb Code     8  stm32f7xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback)
    HAL_ADC_ErrorCallback                    0x08003119   Thumb Code     8  stm32f7xx_hal_adc.o(.text.HAL_ADC_ErrorCallback)
    HAL_ADC_GetValue                         0x08003121   Thumb Code    14  stm32f7xx_hal_adc.o(.text.HAL_ADC_GetValue)
    HAL_ADC_Init                             0x08003131   Thumb Code   250  stm32f7xx_hal_adc.o(.text.HAL_ADC_Init)
    HAL_ADC_LevelOutOfWindowCallback         0x08003231   Thumb Code     8  stm32f7xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback)
    HAL_ADC_MspInit                          0x08003239   Thumb Code   128  stm32f7xx_hal_msp.o(.text.HAL_ADC_MspInit)
    HAL_ADC_PollForConversion                0x080032b9   Thumb Code   298  stm32f7xx_hal_adc.o(.text.HAL_ADC_PollForConversion)
    HAL_ADC_Start                            0x080033e9   Thumb Code   438  stm32f7xx_hal_adc.o(.text.HAL_ADC_Start)
    HAL_CRCEx_Polynomial_Set                 0x080035a1   Thumb Code   214  stm32f7xx_hal_crc_ex.o(.text.HAL_CRCEx_Polynomial_Set)
    HAL_CRC_Init                             0x08003679   Thumb Code   204  stm32f7xx_hal_crc.o(.text.HAL_CRC_Init)
    HAL_CRC_MspInit                          0x08003749   Thumb Code    58  stm32f7xx_hal_msp.o(.text.HAL_CRC_MspInit)
    HAL_DMA_Abort                            0x08003789   Thumb Code   236  stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort)
    HAL_DMA_Abort_IT                         0x08003879   Thumb Code    68  stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT)
    HAL_DMA_IRQHandler                       0x080038c1   Thumb Code   798  stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    HAL_DMA_Init                             0x08003be1   Thumb Code   366  stm32f7xx_hal_dma.o(.text.HAL_DMA_Init)
    HAL_DMA_Start_IT                         0x08003d51   Thumb Code   206  stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT)
    HAL_GPIO_Init                            0x08003e21   Thumb Code  1004  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GetTick                              0x08004211   Thumb Code    12  stm32f7xx_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x08004221   Thumb Code    26  stm32f7xx_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x08004241   Thumb Code    38  stm32f7xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x08004269   Thumb Code   236  stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick)
    HAL_MPU_ConfigRegion                     0x08004359   Thumb Code   158  stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion)
    HAL_MPU_Disable                          0x080043f9   Thumb Code    34  stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable)
    HAL_MPU_Enable                           0x08004421   Thumb Code    48  stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable)
    HAL_MspInit                              0x08004451   Thumb Code    66  stm32f7xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x08004499   Thumb Code    20  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x080044b1   Thumb Code    50  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x080044e9   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_PWREx_EnableOverDrive                0x080044f9   Thumb Code   198  stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive)
    HAL_RCCEx_PeriphCLKConfig                0x080045c1   Thumb Code  2162  stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig)
    HAL_RCC_ClockConfig                      0x08004e39   Thumb Code   620  stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetClockConfig                   0x080050a9   Thumb Code    84  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    HAL_RCC_GetHCLKFreq                      0x08005101   Thumb Code    12  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetPCLK1Freq                     0x08005111   Thumb Code    34  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    HAL_RCC_GetPCLK2Freq                     0x08005139   Thumb Code    34  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    HAL_RCC_GetSysClockFreq                  0x08005161   Thumb Code   230  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08005249   Thumb Code  1816  stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_TIMEx_Break2Callback                 0x08005961   Thumb Code     8  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    HAL_TIMEx_BreakCallback                  0x08005969   Thumb Code     8  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    HAL_TIMEx_CommutCallback                 0x08005971   Thumb Code     8  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    HAL_TIM_Base_Init                        0x08005979   Thumb Code   168  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    HAL_TIM_Base_MspInit                     0x08005a21   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    HAL_TIM_Base_Start_IT                    0x08005a29   Thumb Code   260  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    HAL_TIM_IC_CaptureCallback               0x08005b31   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    HAL_TIM_IRQHandler                       0x08005b39   Thumb Code   692  stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    HAL_TIM_OC_DelayElapsedCallback          0x08005df1   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    HAL_TIM_PWM_PulseFinishedCallback        0x08005df9   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    HAL_TIM_PeriodElapsedCallback            0x08005e01   Thumb Code    34  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    HAL_TIM_TriggerCallback                  0x08005e29   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    HAL_UARTEx_RxEventCallback               0x08005e31   Thumb Code    12  stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback)
    HAL_UART_AbortCpltCallback               0x08005e41   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback)
    HAL_UART_AbortReceiveCpltCallback        0x08005e49   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback)
    HAL_UART_AbortTransmitCpltCallback       0x08005e51   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback)
    HAL_UART_ErrorCallback                   0x08005e59   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback)
    HAL_UART_IRQHandler                      0x08005e61   Thumb Code  1214  stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler)
    HAL_UART_Init                            0x08006321   Thumb Code   200  stm32f7xx_hal_uart.o(.text.HAL_UART_Init)
    HAL_UART_MspInit                         0x080063e9   Thumb Code   724  stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit)
    HAL_UART_Receive_DMA                     0x080066c1   Thumb Code   140  stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_DMA)
    HAL_UART_RegisterCallback                0x08006751   Thumb Code   372  stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterCallback)
    HAL_UART_RxCpltCallback                  0x080068c9   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback)
    HAL_UART_RxHalfCpltCallback              0x080068d1   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback)
    HAL_UART_Transmit                        0x080068d9   Thumb Code   288  stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit)
    HAL_UART_Transmit_DMA                    0x080069f9   Thumb Code   258  stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA)
    HAL_UART_TxCpltCallback                  0x08006b01   Thumb Code    24  transmitthread.o(.text.HAL_UART_TxCpltCallback)
    HAL_UART_TxHalfCpltCallback              0x08006b19   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback)
    OS_Tick_AcknowledgeIRQ                   0x080071c1   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x080071d1   Thumb Code    60  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08007211   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08007219   Thumb Code   126  os_systick.o(.text.OS_Tick_Setup)
    RxCpltCallback                           0x08007299   Thumb Code    38  receiveinit.o(.text.RxCpltCallback)
    RxHalfCpltCallback                       0x080072c1   Thumb Code    36  receiveinit.o(.text.RxHalfCpltCallback)
    SystemClock_Config                       0x080073f1   Thumb Code   192  main.o(.text.SystemClock_Config)
    SystemInit                               0x080074b1   Thumb Code    18  system_stm32f7xx.o(.text.SystemInit)
    TIM6_DAC_IRQHandler                      0x080074c9   Thumb Code    16  stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler)
    TIM_Base_SetConfig                       0x080074d9   Thumb Code   410  stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig)
    UART_AdvFeatureConfig                    0x080077c1   Thumb Code   328  stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig)
    UART_CheckIdleState                      0x08007909   Thumb Code   120  stm32f7xx_hal_uart.o(.text.UART_CheckIdleState)
    UART_InitCallbacksToDefault              0x08007d19   Thumb Code   134  stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault)
    UART_SetConfig                           0x08007da1   Thumb Code  1344  stm32f7xx_hal_uart.o(.text.UART_SetConfig)
    UART_Start_Receive_DMA                   0x080082e1   Thumb Code   290  stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA)
    UART_WaitOnFlagUntilTimeout              0x08008409   Thumb Code   372  stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout)
    USART2_IRQHandler                        0x08008581   Thumb Code    16  stm32f7xx_it.o(.text.USART2_IRQHandler)
    USART6_IRQHandler                        0x08008591   Thumb Code    16  stm32f7xx_it.o(.text.USART6_IRQHandler)
    _mutex_acquire                           0x08008679   Thumb Code    40  retarget_os_rtos2.o(.text._mutex_acquire)
    _mutex_free                              0x080086a1   Thumb Code    18  retarget_os_rtos2.o(.text._mutex_free)
    _mutex_initialize                        0x080086b9   Thumb Code    50  retarget_os_rtos2.o(.text._mutex_initialize)
    _mutex_release                           0x080086f1   Thumb Code    36  retarget_os_rtos2.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08008719   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    _sys_close                               0x08008721   Thumb Code    74  retarget_io.o(.text._sys_close)
    _sys_flen                                0x08008771   Thumb Code    74  retarget_io.o(.text._sys_flen)
    _sys_istty                               0x080087c1   Thumb Code    72  retarget_io.o(.text._sys_istty)
    _sys_open                                0x08008809   Thumb Code   132  retarget_io.o(.text._sys_open)
    _sys_seek                                0x08008891   Thumb Code    82  retarget_io.o(.text._sys_seek)
    _sys_write                               0x080088e9   Thumb Code   118  retarget_io.o(.text._sys_write)
    calcPotiRaw2Volt                         0x08008d01   Thumb Code    24  poticalc.o(.text.calcPotiRaw2Volt)
    concatenate3Strings                      0x08008d21   Thumb Code   250  initcom.o(.text.concatenate3Strings)
    convertSpeedSteeringToWheelSpeeds        0x08008e21   Thumb Code   188  receivethread.o(.text.convertSpeedSteeringToWheelSpeeds)
    driveThread                              0x080097b9   Thumb Code    90  drivethread.o(.text.driveThread)
    getBatteryVoltageRaw                     0x08009dd1   Thumb Code    70  potentiometervoltage.o(.text.getBatteryVoltageRaw)
    main                                     0x0800a3b1   Thumb Code   288  main.o(.text.main)
    mainThread                               0x0800a4d1   Thumb Code   508  wifimain.o(.text.mainThread)
    motGetCurrSpeed                          0x0800a6d1   Thumb Code    54  drivegettersetter.o(.text.motGetCurrSpeed)
    motSetNomSpeed                           0x0800a709   Thumb Code   290  drivegettersetter.o(.text.motSetNomSpeed)
    osDelay                                  0x0800a831   Thumb Code    84  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x0800a889   Thumb Code    66  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x0800a8d1   Thumb Code    74  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x0800a921   Thumb Code    70  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x0800a969   Thumb Code   126  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueGetCount                   0x0800a9e9   Thumb Code    72  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    osMessageQueueNew                        0x0800aa31   Thumb Code   114  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x0800aaa9   Thumb Code   138  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMessageQueueReset                      0x0800ab39   Thumb Code    86  rtx_msgqueue.o(.text.osMessageQueueReset)
    osMutexAcquire                           0x0800ab91   Thumb Code   100  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x0800abf9   Thumb Code    86  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x0800ac51   Thumb Code    86  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x0800aca9   Thumb Code    86  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x0800ad01   Thumb Code    48  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x0800ad41   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelBeforeInit                    0x0800ad49   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelBeforeInit)
    osRtxKernelErrorNotify                   0x0800ad51   Thumb Code    28  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxMemoryAlloc                         0x0800ada1   Thumb Code   332  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0800aef1   Thumb Code   194  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0800afb9   Thumb Code   150  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x0800b051   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800b0a1   Thumb Code   100  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x0800b109   Thumb Code   152  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x0800b319   Thumb Code    62  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x0800b3d9   Thumb Code   152  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x0800b471   Thumb Code   172  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x0800b671   Thumb Code   184  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x0800b729   Thumb Code    66  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBeforeFree                    0x0800b7d1   Thumb Code     8  rtx_thread.o(.text.osRtxThreadBeforeFree)
    osRtxThreadDelayRemove                   0x0800b961   Thumb Code   156  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayTick                     0x0800ba01   Thumb Code   336  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x0800bb51   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDestroy)
    osRtxThreadDispatch                      0x0800bbb1   Thumb Code   150  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadJoinWakeup                    0x0800bd51   Thumb Code    60  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    osRtxThreadListGet                       0x0800bd91   Thumb Code    54  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x0800bdc9   Thumb Code   118  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0800be41   Thumb Code    50  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x0800bea1   Thumb Code    88  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x0800bf61   Thumb Code    32  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x0800bf81   Thumb Code    34  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x0800bfd9   Thumb Code    60  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x0800c019   Thumb Code   150  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x0800c0b1   Thumb Code    46  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x0800c0e1   Thumb Code   118  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x0800c159   Thumb Code    70  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x0800c1a1   Thumb Code   272  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x0800c2b1   Thumb Code    48  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x0800c2e1   Thumb Code    50  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x0800c3f9   Thumb Code    94  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x0800c459   Thumb Code   114  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x0800c4d1   Thumb Code    78  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x0800c531   Thumb Code    36  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x0800c559   Thumb Code    58  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x0800c599   Thumb Code   114  rtx_thread.o(.text.osThreadNew)
    osThreadSetPriority                      0x0800c611   Thumb Code   100  rtx_thread.o(.text.osThreadSetPriority)
    pb_close_string_substream                0x0800c929   Thumb Code    72  pb_decode.o(.text.pb_close_string_substream)
    pb_decode                                0x0800d009   Thumb Code    38  pb_decode.o(.text.pb_decode)
    pb_decode_bool                           0x0800d031   Thumb Code    56  pb_decode.o(.text.pb_decode_bool)
    pb_decode_fixed32                        0x0800d069   Thumb Code    52  pb_decode.o(.text.pb_decode_fixed32)
    pb_decode_fixed64                        0x0800d0a1   Thumb Code    56  pb_decode.o(.text.pb_decode_fixed64)
    pb_decode_svarint                        0x0800d479   Thumb Code    98  pb_decode.o(.text.pb_decode_svarint)
    pb_decode_tag                            0x0800d4e1   Thumb Code    82  pb_decode.o(.text.pb_decode_tag)
    pb_decode_varint                         0x0800d539   Thumb Code   202  pb_decode.o(.text.pb_decode_varint)
    pb_decode_varint32                       0x0800d609   Thumb Code    22  pb_decode.o(.text.pb_decode_varint32)
    pb_default_field_callback                0x0800d7d1   Thumb Code   116  pb_common.o(.text.pb_default_field_callback)
    pb_encode                                0x0800dc99   Thumb Code   122  pb_encode.o(.text.pb_encode)
    pb_encode_fixed32                        0x0800dd19   Thumb Code    22  pb_encode.o(.text.pb_encode_fixed32)
    pb_encode_fixed64                        0x0800dd31   Thumb Code    22  pb_encode.o(.text.pb_encode_fixed64)
    pb_encode_string                         0x0800dd49   Thumb Code    56  pb_encode.o(.text.pb_encode_string)
    pb_encode_submessage                     0x0800dd81   Thumb Code   290  pb_encode.o(.text.pb_encode_submessage)
    pb_encode_svarint                        0x0800dea9   Thumb Code    94  pb_encode.o(.text.pb_encode_svarint)
    pb_encode_tag                            0x0800df09   Thumb Code    42  pb_encode.o(.text.pb_encode_tag)
    pb_encode_tag_for_field                  0x0800df39   Thumb Code   144  pb_encode.o(.text.pb_encode_tag_for_field)
    pb_encode_varint                         0x0800dfc9   Thumb Code    78  pb_encode.o(.text.pb_encode_varint)
    pb_field_iter_begin                      0x0800e109   Thumb Code    40  pb_common.o(.text.pb_field_iter_begin)
    pb_field_iter_begin_const                0x0800e131   Thumb Code    38  pb_common.o(.text.pb_field_iter_begin_const)
    pb_field_iter_begin_extension            0x0800e159   Thumb Code    94  pb_common.o(.text.pb_field_iter_begin_extension)
    pb_field_iter_begin_extension_const      0x0800e1b9   Thumb Code    30  pb_common.o(.text.pb_field_iter_begin_extension_const)
    pb_field_iter_find                       0x0800e1d9   Thumb Code   200  pb_common.o(.text.pb_field_iter_find)
    pb_field_iter_find_extension             0x0800e2a1   Thumb Code   120  pb_common.o(.text.pb_field_iter_find_extension)
    pb_field_iter_next                       0x0800e319   Thumb Code    32  pb_common.o(.text.pb_field_iter_next)
    pb_istream_from_buffer                   0x0800e4d9   Thumb Code    42  pb_decode.o(.text.pb_istream_from_buffer)
    pb_make_string_substream                 0x0800e509   Thumb Code   146  pb_decode.o(.text.pb_make_string_substream)
    pb_ostream_from_buffer                   0x0800e691   Thumb Code    40  pb_encode.o(.text.pb_ostream_from_buffer)
    pb_read                                  0x0800e6b9   Thumb Code   262  pb_decode.o(.text.pb_read)
    pb_skip_field                            0x0800e851   Thumb Code   140  pb_decode.o(.text.pb_skip_field)
    pb_write                                 0x0800e989   Thumb Code   184  pb_encode.o(.text.pb_write)
    processReceivedData                      0x0800ea41   Thumb Code    92  receivethread.o(.text.processReceivedData)
    receiveThread                            0x0800eba1   Thumb Code   448  receivethread.o(.text.receiveThread)
    receive_init                             0x0800ed61   Thumb Code    66  receiveinit.o(.text.receive_init)
    stdout_putchar                           0x0800ede9   Thumb Code   104  e4ftbotterminal.o(.text.stdout_putchar)
    transmitThread                           0x08010679   Thumb Code   466  transmitthread.o(.text.transmitThread)
    uart_init                                0x08010851   Thumb Code   254  initcom.o(.text.uart_init)
    wifi_init                                0x08010951   Thumb Code   318  initcom.o(.text.wifi_init)
    _btod_d2e                                0x08010aa3   Thumb Code    62  btod.o(CL$$btod_d2e)
    _d2e_denorm_low                          0x08010ae1   Thumb Code    70  btod.o(CL$$btod_d2e_denorm_low)
    _d2e_norm_op1                            0x08010b27   Thumb Code    96  btod.o(CL$$btod_d2e_norm_op1)
    __btod_div_common                        0x08010b89   Thumb Code   696  btod.o(CL$$btod_div_common)
    _e2e                                     0x08010ec1   Thumb Code   220  btod.o(CL$$btod_e2e)
    _btod_ediv                               0x08010f9d   Thumb Code    42  btod.o(CL$$btod_ediv)
    _btod_emul                               0x08010fc7   Thumb Code    42  btod.o(CL$$btod_emul)
    __btod_mult_common                       0x08010ff1   Thumb Code   580  btod.o(CL$$btod_mult_common)
    __ARM_fpclassify                         0x08011235   Thumb Code    48  fpclassify.o(i.__ARM_fpclassify)
    _is_digit                                0x08011265   Thumb Code    14  __printf_wp.o(i._is_digit)
    _fputc$unlocked                          0x08011273   Thumb Code    28  fputc.o(i.fputc)
    _get_lc_ctype                            0x08011291   Thumb Code    44  lc_ctype_c.o(locale$$code)
    _get_lc_numeric                          0x080112bd   Thumb Code    44  lc_numeric_c.o(locale$$code)
    __fpl_dretinf                            0x080112e9   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_f2d                              0x080112f5   Thumb Code     0  f2d.o(x$fpl$f2d)
    _f2d                                     0x080112f5   Thumb Code    86  f2d.o(x$fpl$f2d)
    __fpl_fnaninf                            0x0801134b   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    $Super$$_fp_init                         0x080113d7   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x080113ef   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x080113ef   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    _printf_fp_dec                           0x080113f1   Thumb Code     4  printf1.o(x$fpl$printf1)
    _printf_fp_hex                           0x080113f5   Thumb Code     4  printf2.o(x$fpl$printf2)
    __I$use$fp                               0x080113f8   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxConfig                              0x080114f8   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x08011568   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x080115a0   Data          16  system_stm32f7xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x080115b0   Data           8  system_stm32f7xx.o(.rodata.APBPrescTable)
    __stderr_name                            0x080115c0   Data           8  retarget_io.o(.rodata.__stderr_name)
    __stdin_name                             0x080115c8   Data           7  retarget_io.o(.rodata.__stdin_name)
    __stdout_name                            0x080115cf   Data           8  retarget_io.o(.rodata.__stdout_name)
    ftbot_RobotStatus_field_info             0x080115d8   Data          16  ftbot.pb.o(.rodata.ftbot_RobotStatus_field_info)
    ftbot_RobotStatus_msg                    0x080115e8   Data          24  ftbot.pb.o(.rodata.ftbot_RobotStatus_msg)
    ftbot_RobotStatus_submsg_info            0x08011600   Data           4  ftbot.pb.o(.rodata.ftbot_RobotStatus_submsg_info)
    ftbot_SetSpeedSteering_field_info        0x08011604   Data          12  ftbot.pb.o(.rodata.ftbot_SetSpeedSteering_field_info)
    ftbot_SetSpeedSteering_msg               0x08011610   Data          24  ftbot.pb.o(.rodata.ftbot_SetSpeedSteering_msg)
    ftbot_SetSpeedSteering_submsg_info       0x08011628   Data           4  ftbot.pb.o(.rodata.ftbot_SetSpeedSteering_submsg_info)
    osRtxUserSVC                             0x0801162c   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08011ba0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08011be0   Number         0  anon$$obj.o(Region$$Table)
    __ctype                                  0x08011bed   Data           0  lc_ctype_c.o(locale$$data)
    buffer_dma                               0x20000000   Data           2  receiveinit.o(ETTI4dmaVar)
    __aeabi_stdin                            0x20010000   Data           4  stdio_streams.o(.data)
    __aeabi_stdout                           0x20010004   Data           4  stdio_streams.o(.data)
    __aeabi_stderr                           0x20010008   Data           4  stdio_streams.o(.data)
    _stream_list_lock                        0x2001000c   Data           4  streamlock.o(.data)
    SystemCoreClock                          0x20010010   Data           4  system_stm32f7xx.o(.data.SystemCoreClock)
    driveDisp                                0x20010014   Data         184  wifimain.o(.data.driveDisp)
    leftMotorDescriptor                      0x200100cc   Data          28  drivethread.o(.data.leftMotorDescriptor)
    osRtxInfo                                0x200100e8   Data         164  rtx_kernel.o(.data.os)
    rightMotorDescriptor                     0x2001018c   Data          28  drivethread.o(.data.rightMotorDescriptor)
    uwTickFreq                               0x200101a8   Data           1  stm32f7xx_hal.o(.data.uwTickFreq)
    uwTickPrio                               0x200101ac   Data           4  stm32f7xx_hal.o(.data.uwTickPrio)
    __stdin                                  0x200101c0   Data          84  stdio_streams.o(.bss)
    __stdout                                 0x20010214   Data          84  stdio_streams.o(.bss)
    __stderr                                 0x20010268   Data          84  stdio_streams.o(.bss)
    __libspace_start                         0x200102bc   Data          96  libspace.o(.bss)
    MsgQId_nix                               0x2001031c   Data           4  wifimain.o(.bss.MsgQId_nix)
    __temporary_stack_top$libspace           0x2001031c   Data           0  libspace.o(.bss)
    driveControlMutId                        0x20010324   Data           4  wifimain.o(.bss.driveControlMutId)
    driveId                                  0x20010328   Data           4  drivethread.o(.bss.driveId)
    driveInfo                                0x2001032c   Data          12  wifimain.o(.bss.driveInfo)
    hadc1                                    0x20010338   Data         100  main.o(.bss.hadc1)
    hcrc                                     0x2001039c   Data          36  main.o(.bss.hcrc)
    hdma_usart2_rx                           0x200103c0   Data          96  main.o(.bss.hdma_usart2_rx)
    hdma_usart2_tx                           0x20010420   Data          96  main.o(.bss.hdma_usart2_tx)
    hdma_usart6_rx                           0x20010480   Data          96  main.o(.bss.hdma_usart6_rx)
    hdma_usart6_tx                           0x200104e0   Data          96  main.o(.bss.hdma_usart6_tx)
    htim6                                    0x20010540   Data          76  stm32f7xx_hal_timebase_tim.o(.bss.htim6)
    huart2                                   0x2001058c   Data         180  main.o(.bss.huart2)
    huart6                                   0x20010640   Data         180  main.o(.bss.huart6)
    .bss.os.msgqueue.cb$$Base                0x2001873c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20018770   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200187c0   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20018860   Number         0  rtx_lib.o(.bss.os.thread.cb)
    powerFail                                0x20018c64   Data           1  drivethread.o(.bss.powerFail)
    receiveId                                0x20018c68   Data           4  receivethread.o(.bss.receiveId)
    transmitId                               0x20018cec   Data           4  transmitthread.o(.bss.transmitId)
    uartTxSemaphore                          0x20018e00   Data           4  transmitthread.o(.bss.uartTxSemaphore)
    uwTick                                   0x20018e84   Data           4  stm32f7xx_hal.o(.bss.uwTick)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001c9

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00011ee0, Max: 0x00100000, ABSOLUTE, COMPRESSED[0x00011d60])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00011d0c, Max: 0x00100000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001c8   Data   RO         2932    RESET               startup_stm32f746xx.o
    0x080001c8   0x080001c8   0x00000008   Code   RO         3088  * !!!main             c_w.l(__main.o)
    0x080001d0   0x080001d0   0x0000005c   Code   RO         3523    !!!scatter          c_w.l(__scatter.o)
    0x0800022c   0x0800022c   0x0000003a   Code   RO         3521    !!dczerorl          c_w.l(__dczerorl.o)
    0x08000266   0x08000266   0x00000002   PAD
    0x08000268   0x08000268   0x0000001a   Code   RO         3527    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000282   0x08000282   0x00000002   PAD
    0x08000284   0x08000284   0x00000002   Code   RO         3524    !!handler_null      c_w.l(__scatter.o)
    0x08000286   0x08000286   0x00000002   PAD
    0x08000288   0x08000288   0x0000001c   Code   RO         3529    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080002a4   0x080002a4   0x00000000   Code   RO         3059    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x080002a4   0x080002a4   0x00000006   Code   RO         3185    .ARM.Collect$$_printf_percent$$00000001  c_w.l(_printf_n.o)
    0x080002aa   0x080002aa   0x00000006   Code   RO         3187    .ARM.Collect$$_printf_percent$$00000002  c_w.l(_printf_p.o)
    0x080002b0   0x080002b0   0x00000006   Code   RO         3191    .ARM.Collect$$_printf_percent$$00000003  c_w.l(_printf_f.o)
    0x080002b6   0x080002b6   0x00000006   Code   RO         3192    .ARM.Collect$$_printf_percent$$00000004  c_w.l(_printf_e.o)
    0x080002bc   0x080002bc   0x00000006   Code   RO         3193    .ARM.Collect$$_printf_percent$$00000005  c_w.l(_printf_g.o)
    0x080002c2   0x080002c2   0x00000006   Code   RO         3194    .ARM.Collect$$_printf_percent$$00000006  c_w.l(_printf_a.o)
    0x080002c8   0x080002c8   0x0000000a   Code   RO         3199    .ARM.Collect$$_printf_percent$$00000007  c_w.l(_printf_ll.o)
    0x080002d2   0x080002d2   0x00000006   Code   RO         3189    .ARM.Collect$$_printf_percent$$00000008  c_w.l(_printf_i.o)
    0x080002d8   0x080002d8   0x00000006   Code   RO         3190    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x080002de   0x080002de   0x00000006   Code   RO         3058    .ARM.Collect$$_printf_percent$$0000000A  c_w.l(_printf_u.o)
    0x080002e4   0x080002e4   0x00000006   Code   RO         3188    .ARM.Collect$$_printf_percent$$0000000B  c_w.l(_printf_o.o)
    0x080002ea   0x080002ea   0x00000006   Code   RO         3186    .ARM.Collect$$_printf_percent$$0000000C  c_w.l(_printf_x.o)
    0x080002f0   0x080002f0   0x00000006   Code   RO         3196    .ARM.Collect$$_printf_percent$$0000000D  c_w.l(_printf_lli.o)
    0x080002f6   0x080002f6   0x00000006   Code   RO         3197    .ARM.Collect$$_printf_percent$$0000000E  c_w.l(_printf_lld.o)
    0x080002fc   0x080002fc   0x00000006   Code   RO         3198    .ARM.Collect$$_printf_percent$$0000000F  c_w.l(_printf_llu.o)
    0x08000302   0x08000302   0x00000006   Code   RO         3203    .ARM.Collect$$_printf_percent$$00000010  c_w.l(_printf_llo.o)
    0x08000308   0x08000308   0x00000006   Code   RO         3204    .ARM.Collect$$_printf_percent$$00000011  c_w.l(_printf_llx.o)
    0x0800030e   0x0800030e   0x0000000a   Code   RO         3200    .ARM.Collect$$_printf_percent$$00000012  c_w.l(_printf_l.o)
    0x08000318   0x08000318   0x00000006   Code   RO         3183    .ARM.Collect$$_printf_percent$$00000013  c_w.l(_printf_c.o)
    0x0800031e   0x0800031e   0x00000006   Code   RO         3184    .ARM.Collect$$_printf_percent$$00000014  c_w.l(_printf_s.o)
    0x08000324   0x08000324   0x00000006   Code   RO         3201    .ARM.Collect$$_printf_percent$$00000015  c_w.l(_printf_lc.o)
    0x0800032a   0x0800032a   0x00000006   Code   RO         3202    .ARM.Collect$$_printf_percent$$00000016  c_w.l(_printf_ls.o)
    0x08000330   0x08000330   0x00000004   Code   RO         3195    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x08000334   0x08000334   0x00000002   Code   RO         3467    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000336   0x08000336   0x00000004   Code   RO         3220    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0800033a   0x0800033a   0x00000000   Code   RO         3223    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800033a   0x0800033a   0x00000000   Code   RO         3225    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0800033a   0x0800033a   0x00000008   Code   RO         3226    .ARM.Collect$$libinit$$00000007  c_w.l(libinit2.o)
    0x08000342   0x08000342   0x00000000   Code   RO         3228    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000342   0x08000342   0x00000000   Code   RO         3230    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000342   0x08000342   0x00000000   Code   RO         3232    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x08000342   0x08000342   0x00000006   Code   RO         3233    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000348   0x08000348   0x00000000   Code   RO         3235    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000348   0x08000348   0x0000000c   Code   RO         3236    .ARM.Collect$$libinit$$00000014  c_w.l(libinit2.o)
    0x08000354   0x08000354   0x00000000   Code   RO         3237    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000354   0x08000354   0x00000000   Code   RO         3239    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000354   0x08000354   0x0000000a   Code   RO         3240    .ARM.Collect$$libinit$$00000018  c_w.l(libinit2.o)
    0x0800035e   0x0800035e   0x00000000   Code   RO         3241    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800035e   0x0800035e   0x00000000   Code   RO         3243    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800035e   0x0800035e   0x00000000   Code   RO         3245    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800035e   0x0800035e   0x00000000   Code   RO         3247    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800035e   0x0800035e   0x00000000   Code   RO         3249    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800035e   0x0800035e   0x00000000   Code   RO         3251    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800035e   0x0800035e   0x00000000   Code   RO         3253    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800035e   0x0800035e   0x00000004   Code   RO         3254    .ARM.Collect$$libinit$$00000026  c_w.l(libinit2.o)
    0x08000362   0x08000362   0x00000000   Code   RO         3255    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x08000362   0x08000362   0x00000000   Code   RO         3259    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000362   0x08000362   0x00000000   Code   RO         3261    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000362   0x08000362   0x00000000   Code   RO         3263    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000362   0x08000362   0x00000000   Code   RO         3265    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x08000362   0x08000362   0x00000002   Code   RO         3266    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000364   0x08000364   0x00000002   Code   RO         3468    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000366   0x08000366   0x00000000   Code   RO         3376    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000366   0x08000366   0x00000004   Code   RO         3377    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x0800036a   0x0800036a   0x00000000   Code   RO         3378    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800036a   0x0800036a   0x00000000   Code   RO         3381    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800036a   0x0800036a   0x00000000   Code   RO         3384    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800036a   0x0800036a   0x00000000   Code   RO         3386    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800036a   0x0800036a   0x00000004   Code   RO         3387    .ARM.Collect$$libshutdown$$0000000D  c_w.l(libshutdown2.o)
    0x0800036e   0x0800036e   0x00000000   Code   RO         3389    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800036e   0x0800036e   0x00000002   Code   RO         3390    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000370   0x08000370   0x00000000   Code   RO         3094    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000370   0x08000370   0x00000000   Code   RO         3288    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000370   0x08000370   0x00000006   Code   RO         3300    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000376   0x08000376   0x00000008   Code   RO         3289    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0800037e   0x0800037e   0x00000004   Code   RO         3291    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000382   0x08000382   0x00000000   Code   RO         3293    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000382   0x08000382   0x00000008   Code   RO         3294    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800038a   0x0800038a   0x00000002   Code   RO         3095    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800038c   0x0800038c   0x00000000   Code   RO         3303    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800038c   0x0800038c   0x00000004   Code   RO         3304    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000390   0x08000390   0x00000006   Code   RO         3305    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000396   0x08000396   0x00000002   PAD
    0x08000398   0x08000398   0x00000100   Code   RO          373    .text               irq_armv7m.o
    0x08000498   0x08000498   0x00000040   Code   RO         2933    .text               startup_stm32f746xx.o
    0x080004d8   0x080004d8   0x000000a6   Code   RO         2972    .text               c_w.l(h1_alloc_threads.o)
    0x0800057e   0x0800057e   0x000000f0   Code   RO         3024    .text               c_w.l(lludivv7m.o)
    0x0800066e   0x0800066e   0x00000002   PAD
    0x08000670   0x08000670   0x00000018   Code   RO         3026    .text               c_w.l(printf.o)
    0x08000688   0x08000688   0x00000040   Code   RO         3028    .text               c_w.l(snprintf.o)
    0x080006c8   0x080006c8   0x00000018   Code   RO         3030    .text               c_w.l(__2printf.o)
    0x080006e0   0x080006e0   0x00000078   Code   RO         3036    .text               c_w.l(_printf_dec.o)
    0x08000758   0x08000758   0x00000188   Code   RO         3055    .text               c_w.l(__printf_flags_ss_wp.o)
    0x080008e0   0x080008e0   0x0000001a   Code   RO         3060    .text               c_w.l(atoi.o)
    0x080008fa   0x080008fa   0x00000002   PAD
    0x080008fc   0x080008fc   0x00000090   Code   RO         3070    .text               c_w.l(fflush_locked.o)
    0x0800098c   0x0800098c   0x00000012   Code   RO         3072    .text               c_w.l(exit.o)
    0x0800099e   0x0800099e   0x00000014   Code   RO         3074    .text               c_w.l(strchr.o)
    0x080009b2   0x080009b2   0x00000096   Code   RO         3076    .text               c_w.l(strncmp.o)
    0x08000a48   0x08000a48   0x0000008a   Code   RO         3078    .text               c_w.l(rt_memcpy_v6.o)
    0x08000ad2   0x08000ad2   0x00000044   Code   RO         3080    .text               c_w.l(rt_memclr.o)
    0x08000b16   0x08000b16   0x0000004e   Code   RO         3082    .text               c_w.l(rt_memclr_w.o)
    0x08000b64   0x08000b64   0x00000004   PAD
    0x08000b68   0x08000b68   0x0000007c   Code   RO         3084    .text               c_w.l(strcmpv7m_pel.o)
    0x08000be4   0x08000be4   0x00000006   Code   RO         3086    .text               c_w.l(heapauxi.o)
    0x08000bea   0x08000bea   0x00000002   PAD
    0x08000bec   0x08000bec   0x00000008   Code   RO         3104    .text               c_w.l(rt_heap_descriptor_intlibspace.o)
    0x08000bf4   0x08000bf4   0x00000008   Code   RO         3109    .text               c_w.l(rt_errno_addr_intlibspace.o)
    0x08000bfc   0x08000bfc   0x00000004   Code   RO         3111    .text               c_w.l(hguard.o)
    0x08000c00   0x08000c00   0x0000008a   Code   RO         3113    .text               c_w.l(init_alloc.o)
    0x08000c8a   0x08000c8a   0x00000012   Code   RO         3123    .text               c_w.l(h1_init_threads.o)
    0x08000c9c   0x08000c9c   0x00000076   Code   RO         3125    .text               c_w.l(h1_free_threads.o)
    0x08000d12   0x08000d12   0x0000004e   Code   RO         3135    .text               c_w.l(_printf_pad.o)
    0x08000d60   0x08000d60   0x00000024   Code   RO         3137    .text               c_w.l(_printf_truncate.o)
    0x08000d84   0x08000d84   0x00000052   Code   RO         3139    .text               c_w.l(_printf_str.o)
    0x08000dd6   0x08000dd6   0x000000b2   Code   RO         3141    .text               c_w.l(_printf_intcommon.o)
    0x08000e88   0x08000e88   0x00000028   Code   RO         3143    .text               c_w.l(_printf_charcount.o)
    0x08000eb0   0x08000eb0   0x00000030   Code   RO         3145    .text               c_w.l(_printf_char_common.o)
    0x08000ee0   0x08000ee0   0x00000010   Code   RO         3147    .text               c_w.l(_snputc.o)
    0x08000ef0   0x08000ef0   0x000000bc   Code   RO         3151    .text               c_w.l(_printf_wctomb.o)
    0x08000fac   0x08000fac   0x0000007c   Code   RO         3154    .text               c_w.l(_printf_longlong_dec.o)
    0x08001028   0x08001028   0x00000070   Code   RO         3160    .text               c_w.l(_printf_oct_int_ll.o)
    0x08001098   0x08001098   0x00000094   Code   RO         3180    .text               c_w.l(_printf_hex_int_ll_ptr.o)
    0x0800112c   0x0800112c   0x00000070   Code   RO         3205    .text               c_w.l(strtol.o)
    0x0800119c   0x0800119c   0x000000f8   Code   RO         3207    .text               c_w.l(fseek.o)
    0x08001294   0x08001294   0x00000108   Code   RO         3209    .text               c_w.l(stdio.o)
    0x0800139c   0x0800139c   0x000001c8   Code   RO         3214    .text               c_w.l(initio_locked.o)
    0x08001564   0x08001564   0x00000064   Code   RO         3216    .text               c_w.l(rt_memcpy_w.o)
    0x080015c8   0x080015c8   0x00000008   Code   RO         3284    .text               c_w.l(libspace.o)
    0x080015d0   0x080015d0   0x00000010   Code   RO         3309    .text               c_w.l(rt_ctype_table.o)
    0x080015e0   0x080015e0   0x00000000   Code   RO         3316    .text               c_w.l(maybetermalloc2.o)
    0x080015e0   0x080015e0   0x00000052   Code   RO         3319    .text               c_w.l(h1_extend_threads.o)
    0x08001632   0x08001632   0x0000008a   Code   RO         3321    .text               c_w.l(lludiv10.o)
    0x080016bc   0x080016bc   0x0000041c   Code   RO         3323    .text               c_w.l(_printf_fp_dec.o)
    0x08001ad8   0x08001ad8   0x000002fc   Code   RO         3327    .text               c_w.l(_printf_fp_hex.o)
    0x08001dd4   0x08001dd4   0x0000002c   Code   RO         3332    .text               c_w.l(_printf_char.o)
    0x08001e00   0x08001e00   0x0000002c   Code   RO         3334    .text               c_w.l(_printf_wchar.o)
    0x08001e2c   0x08001e2c   0x0000009e   Code   RO         3336    .text               c_w.l(_strtoul.o)
    0x08001eca   0x08001eca   0x00000042   Code   RO         3344    .text               c_w.l(ftell.o)
    0x08001f0c   0x08001f0c   0x0000004c   Code   RO         3350    .text               c_w.l(fclose.o)
    0x08001f58   0x08001f58   0x00000068   Code   RO         3356    .text               c_w.l(setvbuf_locked.o)
    0x08001fc0   0x08001fc0   0x0000014c   Code   RO         3358    .text               c_w.l(fopen_locked.o)
    0x0800210c   0x0800210c   0x00000048   Code   RO         3360    .text               c_w.l(_c16rtomb.o)
    0x08002154   0x08002154   0x0000000e   Code   RO         3362    .text               c_w.l(defsig_rtred_outer.o)
    0x08002162   0x08002162   0x0000000e   Code   RO         3366    .text               c_w.l(defsig_rtmem_outer.o)
    0x08002170   0x08002170   0x0000000c   Code   RO         3391    .text               c_w.l(sys_exit.o)
    0x0800217c   0x0800217c   0x00000002   Code   RO         3395    .text               c_w.l(use_no_semi.o)
    0x0800217e   0x0800217e   0x00000000   Code   RO         3397    .text               c_w.l(indicate_semi.o)
    0x0800217e   0x0800217e   0x0000004a   Code   RO         3398    .text               c_w.l(sys_stackheap_outer.o)
    0x080021c8   0x080021c8   0x00000008   Code   RO         3405    .text               c_w.l(rt_locale_intlibspace.o)
    0x080021d0   0x080021d0   0x00000010   Code   RO         3407    .text               c_w.l(term_alloc.o)
    0x080021e0   0x080021e0   0x00000080   Code   RO         3409    .text               c_w.l(_printf_fp_infnan.o)
    0x08002260   0x08002260   0x0000001c   Code   RO         3411    .text               c_w.l(_chval.o)
    0x0800227c   0x0800227c   0x000000e4   Code   RO         3413    .text               c_w.l(bigflt0.o)
    0x08002360   0x08002360   0x000001e2   Code   RO         3440    .text               c_w.l(flsbuf.o)
    0x08002542   0x08002542   0x0000000a   Code   RO         3448    .text               c_w.l(defsig_exit.o)
    0x0800254c   0x0800254c   0x00000034   Code   RO         3454    .text               c_w.l(defsig_rtred_inner.o)
    0x08002580   0x08002580   0x00000050   Code   RO         3456    .text               c_w.l(defsig_rtmem_inner.o)
    0x080025d0   0x080025d0   0x0000000a   Code   RO         3477    .text               c_w.l(h1_final_threads.o)
    0x080025da   0x080025da   0x00000002   PAD
    0x080025dc   0x080025dc   0x00000040   Code   RO         3479    .text               c_w.l(_printf_char_file_locked.o)
    0x0800261c   0x0800261c   0x00000032   Code   RO         3489    .text               c_w.l(defsig_general.o)
    0x0800264e   0x0800264e   0x0000000e   Code   RO         3495    .text               c_w.l(sys_wrch.o)
    0x0800265c   0x0800265c   0x00000004   PAD
    0x08002660   0x08002660   0x00000016   Code   RO          955    .text.$Sub$$_fp_init  rtx_lib.o
    0x08002676   0x08002676   0x00000002   PAD
    0x08002678   0x08002678   0x00000184   Code   RO         1750    .text.ADC_Init      stm32f7xx_hal_adc.o
    0x080027fc   0x080027fc   0x00000004   PAD
    0x08002800   0x08002800   0x00000010   Code   RO          353    .text.DMA1_Stream5_IRQHandler  stm32f7xx_it.o
    0x08002810   0x08002810   0x00000010   Code   RO          355    .text.DMA1_Stream6_IRQHandler  stm32f7xx_it.o
    0x08002820   0x08002820   0x00000010   Code   RO          361    .text.DMA2_Stream1_IRQHandler  stm32f7xx_it.o
    0x08002830   0x08002830   0x00000010   Code   RO          363    .text.DMA2_Stream6_IRQHandler  stm32f7xx_it.o
    0x08002840   0x08002840   0x00000056   Code   RO         1951    .text.DMA_CalcBaseAndBitshift  stm32f7xx_hal_dma.o
    0x08002896   0x08002896   0x00000002   PAD
    0x08002898   0x08002898   0x000000f0   Code   RO         1949    .text.DMA_CheckFifoParam  stm32f7xx_hal_dma.o
    0x08002988   0x08002988   0x00000050   Code   RO         1957    .text.DMA_SetConfig  stm32f7xx_hal_dma.o
    0x080029d8   0x080029d8   0x000000bc   Code   RO         2954    .text.E4ftbotTerminalInit  FTbotLib.lib(e4ftbotterminal.o)
    0x08002a94   0x08002a94   0x00000028   Code   RO         2958    .text.E4setPosDisp  FTbotLib.lib(e4ftbotterminal.o)
    0x08002abc   0x08002abc   0x00000004   PAD
    0x08002ac0   0x08002ac0   0x00000006   Code   RO          333    .text.Error_Handler  main.o
    0x08002ac6   0x08002ac6   0x00000002   PAD
    0x08002ac8   0x08002ac8   0x00000008   Code   RO          637    .text.EvrRtxDelay   rtx_evr.o
    0x08002ad0   0x08002ad0   0x00000008   Code   RO          645    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x08002ad8   0x08002ad8   0x00000008   Code   RO          635    .text.EvrRtxDelayError  rtx_evr.o
    0x08002ae0   0x08002ae0   0x00000008   Code   RO          641    .text.EvrRtxDelayStarted  rtx_evr.o
    0x08002ae8   0x08002ae8   0x00000008   Code   RO          693    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x08002af0   0x08002af0   0x00000008   Code   RO          481    .text.EvrRtxKernelError  rtx_evr.o
    0x08002af8   0x08002af8   0x0000000a   Code   RO          529    .text.EvrRtxKernelErrorNotify  rtx_evr.o
    0x08002b02   0x08002b02   0x00000006   PAD
    0x08002b08   0x08002b08   0x00000008   Code   RO          491    .text.EvrRtxKernelGetState  rtx_evr.o
    0x08002b10   0x08002b10   0x00000002   Code   RO          483    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x08002b12   0x08002b12   0x00000006   PAD
    0x08002b18   0x08002b18   0x00000002   Code   RO          485    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x08002b1a   0x08002b1a   0x00000006   PAD
    0x08002b20   0x08002b20   0x00000002   Code   RO          493    .text.EvrRtxKernelStart  rtx_evr.o
    0x08002b22   0x08002b22   0x00000006   PAD
    0x08002b28   0x08002b28   0x00000002   Code   RO          495    .text.EvrRtxKernelStarted  rtx_evr.o
    0x08002b2a   0x08002b2a   0x00000006   PAD
    0x08002b30   0x08002b30   0x0000000e   Code   RO          471    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x08002b3e   0x08002b3e   0x00000002   PAD
    0x08002b40   0x08002b40   0x0000000a   Code   RO          477    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x08002b4a   0x08002b4a   0x00000006   PAD
    0x08002b50   0x08002b50   0x0000000c   Code   RO          479    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x08002b5c   0x08002b5c   0x00000004   PAD
    0x08002b60   0x08002b60   0x0000000e   Code   RO          475    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x08002b6e   0x08002b6e   0x00000002   PAD
    0x08002b70   0x08002b70   0x0000000c   Code   RO          473    .text.EvrRtxMemoryFree  rtx_evr.o
    0x08002b7c   0x08002b7c   0x00000004   PAD
    0x08002b80   0x08002b80   0x0000000c   Code   RO          469    .text.EvrRtxMemoryInit  rtx_evr.o
    0x08002b8c   0x08002b8c   0x00000004   PAD
    0x08002b90   0x08002b90   0x00000008   Code   RO          771    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x08002b98   0x08002b98   0x0000000a   Code   RO          799    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x08002ba2   0x08002ba2   0x00000006   PAD
    0x08002ba8   0x08002ba8   0x0000000a   Code   RO          795    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x08002bb2   0x08002bb2   0x00000006   PAD
    0x08002bb8   0x08002bb8   0x0000000e   Code   RO          815    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x08002bc6   0x08002bc6   0x00000002   PAD
    0x08002bc8   0x08002bc8   0x0000000a   Code   RO          829    .text.EvrRtxMessageQueueGetCount  rtx_evr.o
    0x08002bd2   0x08002bd2   0x00000006   PAD
    0x08002bd8   0x08002bd8   0x0000000c   Code   RO          817    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x08002be4   0x08002be4   0x00000004   PAD
    0x08002be8   0x08002be8   0x00000008   Code   RO          819    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x08002bf0   0x08002bf0   0x0000000a   Code   RO          809    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x08002bfa   0x08002bfa   0x00000006   PAD
    0x08002c00   0x08002c00   0x0000000a   Code   RO          811    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08002c0a   0x08002c0a   0x00000006   PAD
    0x08002c10   0x08002c10   0x0000000c   Code   RO          797    .text.EvrRtxMessageQueueNew  rtx_evr.o
    0x08002c1c   0x08002c1c   0x00000004   PAD
    0x08002c20   0x08002c20   0x0000000a   Code   RO          813    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x08002c2a   0x08002c2a   0x00000006   PAD
    0x08002c30   0x08002c30   0x0000000a   Code   RO          823    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x08002c3a   0x08002c3a   0x00000006   PAD
    0x08002c40   0x08002c40   0x00000010   Code   RO          803    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x08002c50   0x08002c50   0x0000000c   Code   RO          805    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x08002c5c   0x08002c5c   0x00000004   PAD
    0x08002c60   0x08002c60   0x00000008   Code   RO          807    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x08002c68   0x08002c68   0x00000008   Code   RO          833    .text.EvrRtxMessageQueueReset  rtx_evr.o
    0x08002c70   0x08002c70   0x00000008   Code   RO          835    .text.EvrRtxMessageQueueResetDone  rtx_evr.o
    0x08002c78   0x08002c78   0x0000000a   Code   RO          821    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x08002c82   0x08002c82   0x00000006   PAD
    0x08002c88   0x08002c88   0x0000000a   Code   RO          711    .text.EvrRtxMutexAcquire  rtx_evr.o
    0x08002c92   0x08002c92   0x00000006   PAD
    0x08002c98   0x08002c98   0x0000000a   Code   RO          713    .text.EvrRtxMutexAcquirePending  rtx_evr.o
    0x08002ca2   0x08002ca2   0x00000006   PAD
    0x08002ca8   0x08002ca8   0x00000008   Code   RO          715    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x08002cb0   0x08002cb0   0x0000000a   Code   RO          717    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x08002cba   0x08002cba   0x00000006   PAD
    0x08002cc0   0x08002cc0   0x0000000a   Code   RO          707    .text.EvrRtxMutexCreated  rtx_evr.o
    0x08002cca   0x08002cca   0x00000006   PAD
    0x08002cd0   0x08002cd0   0x00000008   Code   RO          727    .text.EvrRtxMutexDelete  rtx_evr.o
    0x08002cd8   0x08002cd8   0x00000008   Code   RO          729    .text.EvrRtxMutexDestroyed  rtx_evr.o
    0x08002ce0   0x08002ce0   0x0000000a   Code   RO          703    .text.EvrRtxMutexError  rtx_evr.o
    0x08002cea   0x08002cea   0x00000006   PAD
    0x08002cf0   0x08002cf0   0x00000008   Code   RO          705    .text.EvrRtxMutexNew  rtx_evr.o
    0x08002cf8   0x08002cf8   0x00000008   Code   RO          719    .text.EvrRtxMutexNotAcquired  rtx_evr.o
    0x08002d00   0x08002d00   0x00000008   Code   RO          721    .text.EvrRtxMutexRelease  rtx_evr.o
    0x08002d08   0x08002d08   0x0000000a   Code   RO          723    .text.EvrRtxMutexReleased  rtx_evr.o
    0x08002d12   0x08002d12   0x00000006   PAD
    0x08002d18   0x08002d18   0x0000000a   Code   RO          739    .text.EvrRtxSemaphoreAcquire  rtx_evr.o
    0x08002d22   0x08002d22   0x00000006   PAD
    0x08002d28   0x08002d28   0x0000000a   Code   RO          741    .text.EvrRtxSemaphoreAcquirePending  rtx_evr.o
    0x08002d32   0x08002d32   0x00000006   PAD
    0x08002d38   0x08002d38   0x00000008   Code   RO          743    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x08002d40   0x08002d40   0x0000000a   Code   RO          745    .text.EvrRtxSemaphoreAcquired  rtx_evr.o
    0x08002d4a   0x08002d4a   0x00000006   PAD
    0x08002d50   0x08002d50   0x0000000a   Code   RO          735    .text.EvrRtxSemaphoreCreated  rtx_evr.o
    0x08002d5a   0x08002d5a   0x00000006   PAD
    0x08002d60   0x08002d60   0x0000000a   Code   RO          731    .text.EvrRtxSemaphoreError  rtx_evr.o
    0x08002d6a   0x08002d6a   0x00000006   PAD
    0x08002d70   0x08002d70   0x0000000c   Code   RO          733    .text.EvrRtxSemaphoreNew  rtx_evr.o
    0x08002d7c   0x08002d7c   0x00000004   PAD
    0x08002d80   0x08002d80   0x00000008   Code   RO          747    .text.EvrRtxSemaphoreNotAcquired  rtx_evr.o
    0x08002d88   0x08002d88   0x00000008   Code   RO          749    .text.EvrRtxSemaphoreRelease  rtx_evr.o
    0x08002d90   0x08002d90   0x0000000a   Code   RO          751    .text.EvrRtxSemaphoreReleased  rtx_evr.o
    0x08002d9a   0x08002d9a   0x00000006   PAD
    0x08002da0   0x08002da0   0x0000000a   Code   RO          579    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x08002daa   0x08002daa   0x00000006   PAD
    0x08002db0   0x08002db0   0x0000000c   Code   RO          537    .text.EvrRtxThreadCreated  rtx_evr.o
    0x08002dbc   0x08002dbc   0x00000004   PAD
    0x08002dc0   0x08002dc0   0x00000008   Code   RO          591    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x08002dc8   0x08002dc8   0x0000000a   Code   RO          533    .text.EvrRtxThreadError  rtx_evr.o
    0x08002dd2   0x08002dd2   0x00000006   PAD
    0x08002dd8   0x08002dd8   0x00000002   Code   RO          587    .text.EvrRtxThreadExit  rtx_evr.o
    0x08002dda   0x08002dda   0x00000006   PAD
    0x08002de0   0x08002de0   0x0000000e   Code   RO          631    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x08002dee   0x08002dee   0x00000002   PAD
    0x08002df0   0x08002df0   0x00000008   Code   RO          629    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x08002df8   0x08002df8   0x00000008   Code   RO          545    .text.EvrRtxThreadGetId  rtx_evr.o
    0x08002e00   0x08002e00   0x00000008   Code   RO          577    .text.EvrRtxThreadJoined  rtx_evr.o
    0x08002e08   0x08002e08   0x0000000c   Code   RO          535    .text.EvrRtxThreadNew  rtx_evr.o
    0x08002e14   0x08002e14   0x00000004   PAD
    0x08002e18   0x08002e18   0x00000008   Code   RO          583    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x08002e20   0x08002e20   0x0000000a   Code   RO          555    .text.EvrRtxThreadPriorityUpdated  rtx_evr.o
    0x08002e2a   0x08002e2a   0x00000006   PAD
    0x08002e30   0x08002e30   0x0000000a   Code   RO          553    .text.EvrRtxThreadSetPriority  rtx_evr.o
    0x08002e3a   0x08002e3a   0x00000006   PAD
    0x08002e40   0x08002e40   0x00000008   Code   RO          585    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x08002e48   0x08002e48   0x0000000a   Code   RO          581    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x08002e52   0x08002e52   0x00000006   PAD
    0x08002e58   0x08002e58   0x0000000a   Code   RO          649    .text.EvrRtxTimerCallback  rtx_evr.o
    0x08002e62   0x08002e62   0x00000006   PAD
    0x08002e68   0x08002e68   0x00000008   Code   RO         1825    .text.HAL_ADCEx_InjectedConvCpltCallback  stm32f7xx_hal_adc_ex.o
    0x08002e70   0x08002e70   0x00000296   Code   RO         1786    .text.HAL_ADC_ConfigChannel  stm32f7xx_hal_adc.o
    0x08003106   0x08003106   0x00000002   PAD
    0x08003108   0x08003108   0x00000008   Code   RO         1740    .text.HAL_ADC_ConvCpltCallback  stm32f7xx_hal_adc.o
    0x08003110   0x08003110   0x00000008   Code   RO         1742    .text.HAL_ADC_ConvHalfCpltCallback  stm32f7xx_hal_adc.o
    0x08003118   0x08003118   0x00000008   Code   RO         1746    .text.HAL_ADC_ErrorCallback  stm32f7xx_hal_adc.o
    0x08003120   0x08003120   0x0000000e   Code   RO         1784    .text.HAL_ADC_GetValue  stm32f7xx_hal_adc.o
    0x0800312e   0x0800312e   0x00000002   PAD
    0x08003130   0x08003130   0x000000fa   Code   RO         1738    .text.HAL_ADC_Init  stm32f7xx_hal_adc.o
    0x0800322a   0x0800322a   0x00000006   PAD
    0x08003230   0x08003230   0x00000008   Code   RO         1744    .text.HAL_ADC_LevelOutOfWindowCallback  stm32f7xx_hal_adc.o
    0x08003238   0x08003238   0x00000080   Code   RO         2898    .text.HAL_ADC_MspInit  stm32f7xx_hal_msp.o
    0x080032b8   0x080032b8   0x0000012a   Code   RO         1764    .text.HAL_ADC_PollForConversion  stm32f7xx_hal_adc.o
    0x080033e2   0x080033e2   0x00000006   PAD
    0x080033e8   0x080033e8   0x000001b6   Code   RO         1760    .text.HAL_ADC_Start  stm32f7xx_hal_adc.o
    0x0800359e   0x0800359e   0x00000002   PAD
    0x080035a0   0x080035a0   0x000000d6   Code   RO         1934    .text.HAL_CRCEx_Polynomial_Set  stm32f7xx_hal_crc_ex.o
    0x08003676   0x08003676   0x00000002   PAD
    0x08003678   0x08003678   0x000000cc   Code   RO         1909    .text.HAL_CRC_Init  stm32f7xx_hal_crc.o
    0x08003744   0x08003744   0x00000004   PAD
    0x08003748   0x08003748   0x0000003a   Code   RO         2902    .text.HAL_CRC_MspInit  stm32f7xx_hal_msp.o
    0x08003782   0x08003782   0x00000006   PAD
    0x08003788   0x08003788   0x000000ec   Code   RO         1961    .text.HAL_DMA_Abort  stm32f7xx_hal_dma.o
    0x08003874   0x08003874   0x00000004   PAD
    0x08003878   0x08003878   0x00000044   Code   RO         1963    .text.HAL_DMA_Abort_IT  stm32f7xx_hal_dma.o
    0x080038bc   0x080038bc   0x00000004   PAD
    0x080038c0   0x080038c0   0x0000031e   Code   RO         1967    .text.HAL_DMA_IRQHandler  stm32f7xx_hal_dma.o
    0x08003bde   0x08003bde   0x00000002   PAD
    0x08003be0   0x08003be0   0x0000016e   Code   RO         1947    .text.HAL_DMA_Init  stm32f7xx_hal_dma.o
    0x08003d4e   0x08003d4e   0x00000002   PAD
    0x08003d50   0x08003d50   0x000000ce   Code   RO         1959    .text.HAL_DMA_Start_IT  stm32f7xx_hal_dma.o
    0x08003e1e   0x08003e1e   0x00000002   PAD
    0x08003e20   0x08003e20   0x000003ec   Code   RO         2000    .text.HAL_GPIO_Init  stm32f7xx_hal_gpio.o
    0x0800420c   0x0800420c   0x00000004   PAD
    0x08004210   0x08004210   0x0000000c   Code   RO         1682    .text.HAL_GetTick   stm32f7xx_hal.o
    0x0800421c   0x0800421c   0x00000004   PAD
    0x08004220   0x08004220   0x0000001a   Code   RO         1680    .text.HAL_IncTick   stm32f7xx_hal.o
    0x0800423a   0x0800423a   0x00000006   PAD
    0x08004240   0x08004240   0x00000026   Code   RO         1670    .text.HAL_Init      stm32f7xx_hal.o
    0x08004266   0x08004266   0x00000002   PAD
    0x08004268   0x08004268   0x000000ec   Code   RO         2917    .text.HAL_InitTick  stm32f7xx_hal_timebase_tim.o
    0x08004354   0x08004354   0x00000004   PAD
    0x08004358   0x08004358   0x0000009e   Code   RO         1870    .text.HAL_MPU_ConfigRegion  stm32f7xx_hal_cortex.o
    0x080043f6   0x080043f6   0x00000002   PAD
    0x080043f8   0x080043f8   0x00000022   Code   RO         1866    .text.HAL_MPU_Disable  stm32f7xx_hal_cortex.o
    0x0800441a   0x0800441a   0x00000006   PAD
    0x08004420   0x08004420   0x00000030   Code   RO         1868    .text.HAL_MPU_Enable  stm32f7xx_hal_cortex.o
    0x08004450   0x08004450   0x00000042   Code   RO         2896    .text.HAL_MspInit   stm32f7xx_hal_msp.o
    0x08004492   0x08004492   0x00000006   PAD
    0x08004498   0x08004498   0x00000014   Code   RO         1850    .text.HAL_NVIC_EnableIRQ  stm32f7xx_hal_cortex.o
    0x080044ac   0x080044ac   0x00000004   PAD
    0x080044b0   0x080044b0   0x00000032   Code   RO         1842    .text.HAL_NVIC_SetPriority  stm32f7xx_hal_cortex.o
    0x080044e2   0x080044e2   0x00000006   PAD
    0x080044e8   0x080044e8   0x00000010   Code   RO         1838    .text.HAL_NVIC_SetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x080044f8   0x080044f8   0x000000c6   Code   RO         2080    .text.HAL_PWREx_EnableOverDrive  stm32f7xx_hal_pwr_ex.o
    0x080045be   0x080045be   0x00000002   PAD
    0x080045c0   0x080045c0   0x00000872   Code   RO         2132    .text.HAL_RCCEx_PeriphCLKConfig  stm32f7xx_hal_rcc_ex.o
    0x08004e32   0x08004e32   0x00000006   PAD
    0x08004e38   0x08004e38   0x0000026c   Code   RO         2101    .text.HAL_RCC_ClockConfig  stm32f7xx_hal_rcc.o
    0x080050a4   0x080050a4   0x00000004   PAD
    0x080050a8   0x080050a8   0x00000054   Code   RO         2119    .text.HAL_RCC_GetClockConfig  stm32f7xx_hal_rcc.o
    0x080050fc   0x080050fc   0x00000004   PAD
    0x08005100   0x08005100   0x0000000c   Code   RO         2111    .text.HAL_RCC_GetHCLKFreq  stm32f7xx_hal_rcc.o
    0x0800510c   0x0800510c   0x00000004   PAD
    0x08005110   0x08005110   0x00000022   Code   RO         2113    .text.HAL_RCC_GetPCLK1Freq  stm32f7xx_hal_rcc.o
    0x08005132   0x08005132   0x00000006   PAD
    0x08005138   0x08005138   0x00000022   Code   RO         2115    .text.HAL_RCC_GetPCLK2Freq  stm32f7xx_hal_rcc.o
    0x0800515a   0x0800515a   0x00000006   PAD
    0x08005160   0x08005160   0x000000e6   Code   RO         2103    .text.HAL_RCC_GetSysClockFreq  stm32f7xx_hal_rcc.o
    0x08005246   0x08005246   0x00000002   PAD
    0x08005248   0x08005248   0x00000718   Code   RO         2099    .text.HAL_RCC_OscConfig  stm32f7xx_hal_rcc.o
    0x08005960   0x08005960   0x00000008   Code   RO         2484    .text.HAL_TIMEx_Break2Callback  stm32f7xx_hal_tim_ex.o
    0x08005968   0x08005968   0x00000008   Code   RO         2482    .text.HAL_TIMEx_BreakCallback  stm32f7xx_hal_tim_ex.o
    0x08005970   0x08005970   0x00000008   Code   RO         2478    .text.HAL_TIMEx_CommutCallback  stm32f7xx_hal_tim_ex.o
    0x08005978   0x08005978   0x000000a8   Code   RO         2153    .text.HAL_TIM_Base_Init  stm32f7xx_hal_tim.o
    0x08005a20   0x08005a20   0x00000008   Code   RO         2155    .text.HAL_TIM_Base_MspInit  stm32f7xx_hal_tim.o
    0x08005a28   0x08005a28   0x00000104   Code   RO         2167    .text.HAL_TIM_Base_Start_IT  stm32f7xx_hal_tim.o
    0x08005b2c   0x08005b2c   0x00000004   PAD
    0x08005b30   0x08005b30   0x00000008   Code   RO         2289    .text.HAL_TIM_IC_CaptureCallback  stm32f7xx_hal_tim.o
    0x08005b38   0x08005b38   0x000002b4   Code   RO         2287    .text.HAL_TIM_IRQHandler  stm32f7xx_hal_tim.o
    0x08005dec   0x08005dec   0x00000004   PAD
    0x08005df0   0x08005df0   0x00000008   Code   RO         2291    .text.HAL_TIM_OC_DelayElapsedCallback  stm32f7xx_hal_tim.o
    0x08005df8   0x08005df8   0x00000008   Code   RO         2293    .text.HAL_TIM_PWM_PulseFinishedCallback  stm32f7xx_hal_tim.o
    0x08005e00   0x08005e00   0x00000022   Code   RO          335    .text.HAL_TIM_PeriodElapsedCallback  main.o
    0x08005e22   0x08005e22   0x00000006   PAD
    0x08005e28   0x08005e28   0x00000008   Code   RO         2297    .text.HAL_TIM_TriggerCallback  stm32f7xx_hal_tim.o
    0x08005e30   0x08005e30   0x0000000c   Code   RO         2543    .text.HAL_UARTEx_RxEventCallback  stm32f7xx_hal_uart.o
    0x08005e3c   0x08005e3c   0x00000004   PAD
    0x08005e40   0x08005e40   0x00000008   Code   RO         2533    .text.HAL_UART_AbortCpltCallback  stm32f7xx_hal_uart.o
    0x08005e48   0x08005e48   0x00000008   Code   RO         2537    .text.HAL_UART_AbortReceiveCpltCallback  stm32f7xx_hal_uart.o
    0x08005e50   0x08005e50   0x00000008   Code   RO         2535    .text.HAL_UART_AbortTransmitCpltCallback  stm32f7xx_hal_uart.o
    0x08005e58   0x08005e58   0x00000008   Code   RO         2531    .text.HAL_UART_ErrorCallback  stm32f7xx_hal_uart.o
    0x08005e60   0x08005e60   0x000004be   Code   RO         2603    .text.HAL_UART_IRQHandler  stm32f7xx_hal_uart.o
    0x0800631e   0x0800631e   0x00000002   PAD
    0x08006320   0x08006320   0x000000c8   Code   RO         2497    .text.HAL_UART_Init  stm32f7xx_hal_uart.o
    0x080063e8   0x080063e8   0x000002d4   Code   RO         2906    .text.HAL_UART_MspInit  stm32f7xx_hal_msp.o
    0x080066bc   0x080066bc   0x00000004   PAD
    0x080066c0   0x080066c0   0x0000008c   Code   RO         2569    .text.HAL_UART_Receive_DMA  stm32f7xx_hal_uart.o
    0x0800674c   0x0800674c   0x00000004   PAD
    0x08006750   0x08006750   0x00000174   Code   RO         2519    .text.HAL_UART_RegisterCallback  stm32f7xx_hal_uart.o
    0x080068c4   0x080068c4   0x00000004   PAD
    0x080068c8   0x080068c8   0x00000008   Code   RO         2529    .text.HAL_UART_RxCpltCallback  stm32f7xx_hal_uart.o
    0x080068d0   0x080068d0   0x00000008   Code   RO         2527    .text.HAL_UART_RxHalfCpltCallback  stm32f7xx_hal_uart.o
    0x080068d8   0x080068d8   0x00000120   Code   RO         2545    .text.HAL_UART_Transmit  stm32f7xx_hal_uart.o
    0x080069f8   0x080069f8   0x00000102   Code   RO         2561    .text.HAL_UART_Transmit_DMA  stm32f7xx_hal_uart.o
    0x08006afa   0x08006afa   0x00000006   PAD
    0x08006b00   0x08006b00   0x00000018   Code   RO           36    .text.HAL_UART_TxCpltCallback  transmitthread.o
    0x08006b18   0x08006b18   0x00000008   Code   RO         2523    .text.HAL_UART_TxHalfCpltCallback  stm32f7xx_hal_uart.o
    0x08006b20   0x08006b20   0x00000014   Code   RO          383    .text.IsException   rtx_delay.o
    0x08006b34   0x08006b34   0x00000004   PAD
    0x08006b38   0x08006b38   0x00000014   Code   RO          854    .text.IsException   rtx_kernel.o
    0x08006b4c   0x08006b4c   0x00000004   PAD
    0x08006b50   0x08006b50   0x00000014   Code   RO         1079    .text.IsException   rtx_msgqueue.o
    0x08006b64   0x08006b64   0x00000004   PAD
    0x08006b68   0x08006b68   0x00000014   Code   RO         1160    .text.IsException   rtx_mutex.o
    0x08006b7c   0x08006b7c   0x00000004   PAD
    0x08006b80   0x08006b80   0x00000014   Code   RO         1205    .text.IsException   rtx_semaphore.o
    0x08006b94   0x08006b94   0x00000004   PAD
    0x08006b98   0x08006b98   0x00000014   Code   RO         1363    .text.IsException   rtx_thread.o
    0x08006bac   0x08006bac   0x00000004   PAD
    0x08006bb0   0x08006bb0   0x0000002e   Code   RO          385    .text.IsIrqMasked   rtx_delay.o
    0x08006bde   0x08006bde   0x00000002   PAD
    0x08006be0   0x08006be0   0x0000002e   Code   RO          856    .text.IsIrqMasked   rtx_kernel.o
    0x08006c0e   0x08006c0e   0x00000002   PAD
    0x08006c10   0x08006c10   0x0000002e   Code   RO         1081    .text.IsIrqMasked   rtx_msgqueue.o
    0x08006c3e   0x08006c3e   0x00000002   PAD
    0x08006c40   0x08006c40   0x0000002e   Code   RO         1162    .text.IsIrqMasked   rtx_mutex.o
    0x08006c6e   0x08006c6e   0x00000002   PAD
    0x08006c70   0x08006c70   0x0000002e   Code   RO         1207    .text.IsIrqMasked   rtx_semaphore.o
    0x08006c9e   0x08006c9e   0x00000002   PAD
    0x08006ca0   0x08006ca0   0x0000002e   Code   RO         1365    .text.IsIrqMasked   rtx_thread.o
    0x08006cce   0x08006cce   0x00000002   PAD
    0x08006cd0   0x08006cd0   0x00000022   Code   RO         1115    .text.IsMessageQueuePtrValid  rtx_msgqueue.o
    0x08006cf2   0x08006cf2   0x00000006   PAD
    0x08006cf8   0x08006cf8   0x00000022   Code   RO         1178    .text.IsMutexPtrValid  rtx_mutex.o
    0x08006d1a   0x08006d1a   0x00000006   PAD
    0x08006d20   0x08006d20   0x00000014   Code   RO          860    .text.IsPrivileged  rtx_kernel.o
    0x08006d34   0x08006d34   0x00000004   PAD
    0x08006d38   0x08006d38   0x00000022   Code   RO         1229    .text.IsSemaphorePtrValid  rtx_semaphore.o
    0x08006d5a   0x08006d5a   0x00000006   PAD
    0x08006d60   0x08006d60   0x00000022   Code   RO         1449    .text.IsThreadPtrValid  rtx_thread.o
    0x08006d82   0x08006d82   0x00000006   PAD
    0x08006d88   0x08006d88   0x00000056   Code   RO          317    .text.MPU_Config    main.o
    0x08006dde   0x08006dde   0x00000002   PAD
    0x08006de0   0x08006de0   0x00000080   Code   RO          329    .text.MX_ADC1_Init  main.o
    0x08006e60   0x08006e60   0x00000032   Code   RO          331    .text.MX_CRC_Init   main.o
    0x08006e92   0x08006e92   0x00000006   PAD
    0x08006e98   0x08006e98   0x0000008e   Code   RO          323    .text.MX_DMA_Init   main.o
    0x08006f26   0x08006f26   0x00000002   PAD
    0x08006f28   0x08006f28   0x00000060   Code   RO          321    .text.MX_GPIO_Init  main.o
    0x08006f88   0x08006f88   0x00000044   Code   RO          327    .text.MX_USART2_UART_Init  main.o
    0x08006fcc   0x08006fcc   0x00000004   PAD
    0x08006fd0   0x08006fd0   0x00000002   Code   RO          325    .text.MX_USART6_UART_Init  main.o
    0x08006fd2   0x08006fd2   0x00000006   PAD
    0x08006fd8   0x08006fd8   0x00000018   Code   RO          981    .text.MemBlockPtr   rtx_memory.o
    0x08006ff0   0x08006ff0   0x0000000a   Code   RO          979    .text.MemHeadPtr    rtx_memory.o
    0x08006ffa   0x08006ffa   0x00000006   PAD
    0x08007000   0x08007000   0x00000052   Code   RO         1131    .text.MessageQueueGet  rtx_msgqueue.o
    0x08007052   0x08007052   0x00000006   PAD
    0x08007058   0x08007058   0x000000ac   Code   RO         1123    .text.MessageQueuePut  rtx_msgqueue.o
    0x08007104   0x08007104   0x00000004   PAD
    0x08007108   0x08007108   0x00000042   Code   RO         1119    .text.MessageQueueRemove  rtx_msgqueue.o
    0x0800714a   0x0800714a   0x00000006   PAD
    0x08007150   0x08007150   0x0000006c   Code   RO         1848    .text.NVIC_EncodePriority  stm32f7xx_hal_cortex.o
    0x080071bc   0x080071bc   0x00000004   PAD
    0x080071c0   0x080071c0   0x0000000c   Code   RO         1593    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x080071cc   0x080071cc   0x00000004   PAD
    0x080071d0   0x080071d0   0x0000003c   Code   RO         1589    .text.OS_Tick_Enable  os_systick.o
    0x0800720c   0x0800720c   0x00000004   PAD
    0x08007210   0x08007210   0x00000006   Code   RO         1595    .text.OS_Tick_GetIRQn  os_systick.o
    0x08007216   0x08007216   0x00000002   PAD
    0x08007218   0x08007218   0x0000007e   Code   RO         1587    .text.OS_Tick_Setup  os_systick.o
    0x08007296   0x08007296   0x00000002   PAD
    0x08007298   0x08007298   0x00000026   Code   RO           86    .text.RxCpltCallback  receiveinit.o
    0x080072be   0x080072be   0x00000002   PAD
    0x080072c0   0x080072c0   0x00000024   Code   RO           84    .text.RxHalfCpltCallback  receiveinit.o
    0x080072e4   0x080072e4   0x00000004   PAD
    0x080072e8   0x080072e8   0x00000050   Code   RO          918    .text.SVC_Setup     rtx_kernel.o
    0x08007338   0x08007338   0x00000024   Code   RO         1233    .text.SemaphoreTokenDecrement  rtx_semaphore.o
    0x0800735c   0x0800735c   0x00000004   PAD
    0x08007360   0x08007360   0x0000002e   Code   RO         1245    .text.SemaphoreTokenIncrement  rtx_semaphore.o
    0x0800738e   0x0800738e   0x00000002   PAD
    0x08007390   0x08007390   0x00000010   Code   RO         1284    .text.SetPendSV     rtx_system.o
    0x080073a0   0x080073a0   0x00000034   Code   RO         1329    .text.SetPrivileged  rtx_thread.o
    0x080073d4   0x080073d4   0x00000004   PAD
    0x080073d8   0x080073d8   0x00000018   Code   RO         1325    .text.StackOffsetR0  rtx_thread.o
    0x080073f0   0x080073f0   0x000000c0   Code   RO          319    .text.SystemClock_Config  main.o
    0x080074b0   0x080074b0   0x00000012   Code   RO         2940    .text.SystemInit    system_stm32f7xx.o
    0x080074c2   0x080074c2   0x00000006   PAD
    0x080074c8   0x080074c8   0x00000010   Code   RO          359    .text.TIM6_DAC_IRQHandler  stm32f7xx_it.o
    0x080074d8   0x080074d8   0x0000019a   Code   RO         2157    .text.TIM_Base_SetConfig  stm32f7xx_hal_tim.o
    0x08007672   0x08007672   0x00000006   PAD
    0x08007678   0x08007678   0x0000007c   Code   RO         1457    .text.ThreadFlagsCheck  rtx_thread.o
    0x080076f4   0x080076f4   0x00000004   PAD
    0x080076f8   0x080076f8   0x0000009e   Code   RO         1560    .text.TimerInsert   rtx_timer.o
    0x08007796   0x08007796   0x00000002   PAD
    0x08007798   0x08007798   0x00000028   Code   RO         1556    .text.TimerUnlink   rtx_timer.o
    0x080077c0   0x080077c0   0x00000148   Code   RO         2505    .text.UART_AdvFeatureConfig  stm32f7xx_hal_uart.o
    0x08007908   0x08007908   0x00000078   Code   RO         2507    .text.UART_CheckIdleState  stm32f7xx_hal_uart.o
    0x08007980   0x08007980   0x00000026   Code   RO         2605    .text.UART_DMAAbortOnError  stm32f7xx_hal_uart.o
    0x080079a6   0x080079a6   0x00000002   PAD
    0x080079a8   0x080079a8   0x00000080   Code   RO         2567    .text.UART_DMAError  stm32f7xx_hal_uart.o
    0x08007a28   0x08007a28   0x000000fa   Code   RO         2635    .text.UART_DMAReceiveCplt  stm32f7xx_hal_uart.o
    0x08007b22   0x08007b22   0x00000006   PAD
    0x08007b28   0x08007b28   0x0000003a   Code   RO         2637    .text.UART_DMARxHalfCplt  stm32f7xx_hal_uart.o
    0x08007b62   0x08007b62   0x00000006   PAD
    0x08007b68   0x08007b68   0x0000007c   Code   RO         2563    .text.UART_DMATransmitCplt  stm32f7xx_hal_uart.o
    0x08007be4   0x08007be4   0x00000004   PAD
    0x08007be8   0x08007be8   0x00000018   Code   RO         2565    .text.UART_DMATxHalfCplt  stm32f7xx_hal_uart.o
    0x08007c00   0x08007c00   0x00000098   Code   RO         2581    .text.UART_EndRxTransfer  stm32f7xx_hal_uart.o
    0x08007c98   0x08007c98   0x00000044   Code   RO         2607    .text.UART_EndTransmit_IT  stm32f7xx_hal_uart.o
    0x08007cdc   0x08007cdc   0x00000004   PAD
    0x08007ce0   0x08007ce0   0x00000034   Code   RO         2579    .text.UART_EndTxTransfer  stm32f7xx_hal_uart.o
    0x08007d14   0x08007d14   0x00000004   PAD
    0x08007d18   0x08007d18   0x00000086   Code   RO         2499    .text.UART_InitCallbacksToDefault  stm32f7xx_hal_uart.o
    0x08007d9e   0x08007d9e   0x00000002   PAD
    0x08007da0   0x08007da0   0x00000540   Code   RO         2503    .text.UART_SetConfig  stm32f7xx_hal_uart.o
    0x080082e0   0x080082e0   0x00000122   Code   RO         2571    .text.UART_Start_Receive_DMA  stm32f7xx_hal_uart.o
    0x08008402   0x08008402   0x00000006   PAD
    0x08008408   0x08008408   0x00000174   Code   RO         2547    .text.UART_WaitOnFlagUntilTimeout  stm32f7xx_hal_uart.o
    0x0800857c   0x0800857c   0x00000004   PAD
    0x08008580   0x08008580   0x00000010   Code   RO          357    .text.USART2_IRQHandler  stm32f7xx_it.o
    0x08008590   0x08008590   0x00000010   Code   RO          365    .text.USART6_IRQHandler  stm32f7xx_it.o
    0x080085a0   0x080085a0   0x00000030   Code   RO         1852    .text.__NVIC_EnableIRQ  stm32f7xx_hal_cortex.o
    0x080085d0   0x080085d0   0x00000010   Code   RO          920    .text.__NVIC_GetPriorityGrouping  rtx_kernel.o
    0x080085e0   0x080085e0   0x00000010   Code   RO         1844    .text.__NVIC_GetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x080085f0   0x080085f0   0x00000042   Code   RO         1846    .text.__NVIC_SetPriority  stm32f7xx_hal_cortex.o
    0x08008632   0x08008632   0x00000006   PAD
    0x08008638   0x08008638   0x0000003c   Code   RO         1840    .text.__NVIC_SetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x08008674   0x08008674   0x00000004   PAD
    0x08008678   0x08008678   0x00000028   Code   RO         1653    .text._mutex_acquire  retarget_os_rtos2.o
    0x080086a0   0x080086a0   0x00000012   Code   RO         1661    .text._mutex_free   retarget_os_rtos2.o
    0x080086b2   0x080086b2   0x00000006   PAD
    0x080086b8   0x080086b8   0x00000032   Code   RO         1649    .text._mutex_initialize  retarget_os_rtos2.o
    0x080086ea   0x080086ea   0x00000006   PAD
    0x080086f0   0x080086f0   0x00000024   Code   RO         1659    .text._mutex_release  retarget_os_rtos2.o
    0x08008714   0x08008714   0x00000004   PAD
    0x08008718   0x08008718   0x00000008   Code   RO          953    .text._platform_post_stackheap_init  rtx_lib.o
    0x08008720   0x08008720   0x0000004a   Code   RO         1626    .text._sys_close    retarget_io.o
    0x0800876a   0x0800876a   0x00000006   PAD
    0x08008770   0x08008770   0x0000004a   Code   RO         1636    .text._sys_flen     retarget_io.o
    0x080087ba   0x080087ba   0x00000006   PAD
    0x080087c0   0x080087c0   0x00000048   Code   RO         1632    .text._sys_istty    retarget_io.o
    0x08008808   0x08008808   0x00000084   Code   RO         1624    .text._sys_open     retarget_io.o
    0x0800888c   0x0800888c   0x00000004   PAD
    0x08008890   0x08008890   0x00000052   Code   RO         1634    .text._sys_seek     retarget_io.o
    0x080088e2   0x080088e2   0x00000006   PAD
    0x080088e8   0x080088e8   0x00000076   Code   RO         1628    .text._sys_write    retarget_io.o
    0x0800895e   0x0800895e   0x00000002   PAD
    0x08008960   0x08008960   0x000000b2   Code   RO          142    .text.advance_iterator  pb_common.o
    0x08008a12   0x08008a12   0x00000006   PAD
    0x08008a18   0x08008a18   0x00000038   Code   RO         1459    .text.atomic_chk32_all  rtx_thread.o
    0x08008a50   0x08008a50   0x00000034   Code   RO         1461    .text.atomic_chk32_any  rtx_thread.o
    0x08008a84   0x08008a84   0x00000004   PAD
    0x08008a88   0x08008a88   0x0000002c   Code   RO         1237    .text.atomic_dec16_nz  rtx_semaphore.o
    0x08008ab4   0x08008ab4   0x00000004   PAD
    0x08008ab8   0x08008ab8   0x0000002c   Code   RO         1286    .text.atomic_dec16_nz  rtx_system.o
    0x08008ae4   0x08008ae4   0x00000004   PAD
    0x08008ae8   0x08008ae8   0x00000020   Code   RO         1006    .text.atomic_dec32  rtx_mempool.o
    0x08008b08   0x08008b08   0x00000028   Code   RO         1133    .text.atomic_dec32_nz  rtx_msgqueue.o
    0x08008b30   0x08008b30   0x00000034   Code   RO         1288    .text.atomic_inc16_lim  rtx_system.o
    0x08008b64   0x08008b64   0x00000004   PAD
    0x08008b68   0x08008b68   0x00000038   Code   RO         1247    .text.atomic_inc16_lt  rtx_semaphore.o
    0x08008ba0   0x08008ba0   0x00000038   Code   RO         1292    .text.atomic_inc16_lt  rtx_system.o
    0x08008bd8   0x08008bd8   0x00000020   Code   RO         1000    .text.atomic_inc32  rtx_mempool.o
    0x08008bf8   0x08008bf8   0x00000020   Code   RO         1125    .text.atomic_inc32  rtx_msgqueue.o
    0x08008c18   0x08008c18   0x00000028   Code   RO          998    .text.atomic_link_get  rtx_mempool.o
    0x08008c40   0x08008c40   0x00000030   Code   RO         1004    .text.atomic_link_put  rtx_mempool.o
    0x08008c70   0x08008c70   0x00000028   Code   RO         1135    .text.atomic_wr8    rtx_msgqueue.o
    0x08008c98   0x08008c98   0x00000032   Code   RO          165    .text.buf_read      pb_decode.o
    0x08008cca   0x08008cca   0x00000006   PAD
    0x08008cd0   0x08008cd0   0x0000002a   Code   RO          248    .text.buf_write     pb_encode.o
    0x08008cfa   0x08008cfa   0x00000006   PAD
    0x08008d00   0x08008d00   0x0000001c   Code   RO           50    .text.calcPotiRaw2Volt  poticalc.o
    0x08008d1c   0x08008d1c   0x00000004   PAD
    0x08008d20   0x08008d20   0x000000fa   Code   RO           15    .text.concatenate3Strings  initcom.o
    0x08008e1a   0x08008e1a   0x00000006   PAD
    0x08008e20   0x08008e20   0x000000cc   Code   RO           70    .text.convertSpeedSteeringToWheelSpeeds  receivethread.o
    0x08008eec   0x08008eec   0x00000004   PAD
    0x08008ef0   0x08008ef0   0x000002a6   Code   RO          221    .text.decode_basic_field  pb_decode.o
    0x08009196   0x08009196   0x00000002   PAD
    0x08009198   0x08009198   0x0000012e   Code   RO          219    .text.decode_callback_field  pb_decode.o
    0x080092c6   0x080092c6   0x00000002   PAD
    0x080092c8   0x080092c8   0x0000009a   Code   RO          207    .text.decode_extension  pb_decode.o
    0x08009362   0x08009362   0x00000006   PAD
    0x08009368   0x08009368   0x00000094   Code   RO          209    .text.decode_field  pb_decode.o
    0x080093fc   0x080093fc   0x00000004   PAD
    0x08009400   0x08009400   0x00000032   Code   RO          217    .text.decode_pointer_field  pb_decode.o
    0x08009432   0x08009432   0x00000006   PAD
    0x08009438   0x08009438   0x000002a6   Code   RO          215    .text.decode_static_field  pb_decode.o
    0x080096de   0x080096de   0x00000002   PAD
    0x080096e0   0x080096e0   0x0000007e   Code   RO          213    .text.default_extension_decoder  pb_decode.o
    0x0800975e   0x0800975e   0x00000002   PAD
    0x08009760   0x08009760   0x00000054   Code   RO          280    .text.default_extension_encoder  pb_encode.o
    0x080097b4   0x080097b4   0x00000004   PAD
    0x080097b8   0x080097b8   0x0000005a   Code   RO           98    .text.driveThread   drivethread.o
    0x08009812   0x08009812   0x00000006   PAD
    0x08009818   0x08009818   0x000002e4   Code   RO          288    .text.encode_array  pb_encode.o
    0x08009afc   0x08009afc   0x00000004   PAD
    0x08009b00   0x08009b00   0x000000e2   Code   RO          290    .text.encode_basic_field  pb_encode.o
    0x08009be2   0x08009be2   0x00000006   PAD
    0x08009be8   0x08009be8   0x0000005e   Code   RO          286    .text.encode_callback_field  pb_encode.o
    0x08009c46   0x08009c46   0x00000002   PAD
    0x08009c48   0x08009c48   0x0000006a   Code   RO          254    .text.encode_extension_field  pb_encode.o
    0x08009cb2   0x08009cb2   0x00000006   PAD
    0x08009cb8   0x08009cb8   0x00000114   Code   RO          256    .text.encode_field  pb_encode.o
    0x08009dcc   0x08009dcc   0x00000004   PAD
    0x08009dd0   0x08009dd0   0x00000046   Code   RO           58    .text.getBatteryVoltageRaw  potentiometervoltage.o
    0x08009e16   0x08009e16   0x00000002   PAD
    0x08009e18   0x08009e18   0x00000020   Code   RO         1657    .text.is_thread_mode  retarget_os_rtos2.o
    0x08009e38   0x08009e38   0x000000ac   Code   RO         1093    .text.isrRtxMessageQueueGet  rtx_msgqueue.o
    0x08009ee4   0x08009ee4   0x00000004   PAD
    0x08009ee8   0x08009ee8   0x000000bc   Code   RO         1089    .text.isrRtxMessageQueuePut  rtx_msgqueue.o
    0x08009fa4   0x08009fa4   0x00000004   PAD
    0x08009fa8   0x08009fa8   0x0000006e   Code   RO         1215    .text.isrRtxSemaphoreAcquire  rtx_semaphore.o
    0x0800a016   0x0800a016   0x00000002   PAD
    0x0800a018   0x0800a018   0x00000074   Code   RO         1219    .text.isrRtxSemaphoreRelease  rtx_semaphore.o
    0x0800a08c   0x0800a08c   0x00000004   PAD
    0x0800a090   0x0800a090   0x00000054   Code   RO         1268    .text.isr_queue_get  rtx_system.o
    0x0800a0e4   0x0800a0e4   0x00000004   PAD
    0x0800a0e8   0x0800a0e8   0x0000005e   Code   RO         1282    .text.isr_queue_put  rtx_system.o
    0x0800a146   0x0800a146   0x00000002   PAD
    0x0800a148   0x0800a148   0x00000268   Code   RO          136    .text.load_descriptor_values  pb_common.o
    0x0800a3b0   0x0800a3b0   0x00000120   Code   RO          315    .text.main          main.o
    0x0800a4d0   0x0800a4d0   0x000001fc   Code   RO            2    .text.mainThread    wifimain.o
    0x0800a6cc   0x0800a6cc   0x00000004   PAD
    0x0800a6d0   0x0800a6d0   0x00000036   Code   RO          114    .text.motGetCurrSpeed  drivegettersetter.o
    0x0800a706   0x0800a706   0x00000002   PAD
    0x0800a708   0x0800a708   0x00000122   Code   RO          112    .text.motSetNomSpeed  drivegettersetter.o
    0x0800a82a   0x0800a82a   0x00000006   PAD
    0x0800a830   0x0800a830   0x00000054   Code   RO          381    .text.osDelay       rtx_delay.o
    0x0800a884   0x0800a884   0x00000004   PAD
    0x0800a888   0x0800a888   0x00000042   Code   RO          864    .text.osKernelGetState  rtx_kernel.o
    0x0800a8ca   0x0800a8ca   0x00000006   PAD
    0x0800a8d0   0x0800a8d0   0x0000004a   Code   RO          852    .text.osKernelInitialize  rtx_kernel.o
    0x0800a91a   0x0800a91a   0x00000006   PAD
    0x0800a920   0x0800a920   0x00000046   Code   RO          868    .text.osKernelStart  rtx_kernel.o
    0x0800a966   0x0800a966   0x00000002   PAD
    0x0800a968   0x0800a968   0x0000007e   Code   RO         1091    .text.osMessageQueueGet  rtx_msgqueue.o
    0x0800a9e6   0x0800a9e6   0x00000002   PAD
    0x0800a9e8   0x0800a9e8   0x00000048   Code   RO         1103    .text.osMessageQueueGetCount  rtx_msgqueue.o
    0x0800aa30   0x0800aa30   0x00000072   Code   RO         1077    .text.osMessageQueueNew  rtx_msgqueue.o
    0x0800aaa2   0x0800aaa2   0x00000006   PAD
    0x0800aaa8   0x0800aaa8   0x0000008a   Code   RO         1087    .text.osMessageQueuePut  rtx_msgqueue.o
    0x0800ab32   0x0800ab32   0x00000006   PAD
    0x0800ab38   0x0800ab38   0x00000056   Code   RO         1111    .text.osMessageQueueReset  rtx_msgqueue.o
    0x0800ab8e   0x0800ab8e   0x00000002   PAD
    0x0800ab90   0x0800ab90   0x00000064   Code   RO         1168    .text.osMutexAcquire  rtx_mutex.o
    0x0800abf4   0x0800abf4   0x00000004   PAD
    0x0800abf8   0x0800abf8   0x00000056   Code   RO         1174    .text.osMutexDelete  rtx_mutex.o
    0x0800ac4e   0x0800ac4e   0x00000002   PAD
    0x0800ac50   0x0800ac50   0x00000056   Code   RO         1158    .text.osMutexNew    rtx_mutex.o
    0x0800aca6   0x0800aca6   0x00000002   PAD
    0x0800aca8   0x0800aca8   0x00000056   Code   RO         1170    .text.osMutexRelease  rtx_mutex.o
    0x0800acfe   0x0800acfe   0x00000002   PAD
    0x0800ad00   0x0800ad00   0x00000030   Code   RO         1615    .text.osRtxErrorNotify  rtx_config.o
    0x0800ad30   0x0800ad30   0x0000000a   Code   RO         1272    .text.osRtxEventFlagsObject  rtx_system.o
    0x0800ad3a   0x0800ad3a   0x00000006   PAD
    0x0800ad40   0x0800ad40   0x00000008   Code   RO         1613    .text.osRtxIdleThread  rtx_config.o
    0x0800ad48   0x0800ad48   0x00000002   Code   RO          848    .text.osRtxKernelBeforeInit  rtx_kernel.o
    0x0800ad4a   0x0800ad4a   0x00000006   PAD
    0x0800ad50   0x0800ad50   0x0000001c   Code   RO          850    .text.osRtxKernelErrorNotify  rtx_kernel.o
    0x0800ad6c   0x0800ad6c   0x00000004   PAD
    0x0800ad70   0x0800ad70   0x0000000c   Code   RO         1264    .text.osRtxKernelGetState  rtx_system.o
    0x0800ad7c   0x0800ad7c   0x00000004   PAD
    0x0800ad80   0x0800ad80   0x0000000c   Code   RO         1333    .text.osRtxKernelGetState  rtx_thread.o
    0x0800ad8c   0x0800ad8c   0x00000004   PAD
    0x0800ad90   0x0800ad90   0x0000000c   Code   RO          914    .text.osRtxKernelState  rtx_kernel.o
    0x0800ad9c   0x0800ad9c   0x00000004   PAD
    0x0800ada0   0x0800ada0   0x0000014c   Code   RO          983    .text.osRtxMemoryAlloc  rtx_memory.o
    0x0800aeec   0x0800aeec   0x00000004   PAD
    0x0800aef0   0x0800aef0   0x000000c2   Code   RO          985    .text.osRtxMemoryFree  rtx_memory.o
    0x0800afb2   0x0800afb2   0x00000006   PAD
    0x0800afb8   0x0800afb8   0x00000096   Code   RO          977    .text.osRtxMemoryInit  rtx_memory.o
    0x0800b04e   0x0800b04e   0x00000002   PAD
    0x0800b050   0x0800b050   0x0000004a   Code   RO          996    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x0800b09a   0x0800b09a   0x00000006   PAD
    0x0800b0a0   0x0800b0a0   0x00000064   Code   RO         1002    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x0800b104   0x0800b104   0x00000004   PAD
    0x0800b108   0x0800b108   0x00000098   Code   RO          994    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x0800b1a0   0x0800b1a0   0x0000000a   Code   RO         1276    .text.osRtxMemoryPoolObject  rtx_system.o
    0x0800b1aa   0x0800b1aa   0x00000006   PAD
    0x0800b1b0   0x0800b1b0   0x0000000a   Code   RO         1278    .text.osRtxMessageObject  rtx_system.o
    0x0800b1ba   0x0800b1ba   0x00000006   PAD
    0x0800b1c0   0x0800b1c0   0x0000000a   Code   RO         1073    .text.osRtxMessageQueueId  rtx_msgqueue.o
    0x0800b1ca   0x0800b1ca   0x00000006   PAD
    0x0800b1d0   0x0800b1d0   0x00000144   Code   RO         1117    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x0800b314   0x0800b314   0x00000004   PAD
    0x0800b318   0x0800b318   0x0000003e   Code   RO         1071    .text.osRtxMessageQueueTimerSetup  rtx_msgqueue.o
    0x0800b356   0x0800b356   0x00000002   PAD
    0x0800b358   0x0800b358   0x0000005a   Code   RO         1194    .text.osRtxMutexDestroy  rtx_mutex.o
    0x0800b3b2   0x0800b3b2   0x00000006   PAD
    0x0800b3b8   0x0800b3b8   0x0000000a   Code   RO         1180    .text.osRtxMutexId  rtx_mutex.o
    0x0800b3c2   0x0800b3c2   0x00000006   PAD
    0x0800b3c8   0x0800b3c8   0x0000000a   Code   RO         1321    .text.osRtxMutexObject  rtx_thread.o
    0x0800b3d2   0x0800b3d2   0x00000006   PAD
    0x0800b3d8   0x0800b3d8   0x00000098   Code   RO         1152    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x0800b470   0x0800b470   0x000000ac   Code   RO         1156    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x0800b51c   0x0800b51c   0x00000004   PAD
    0x0800b520   0x0800b520   0x000000fc   Code   RO         1192    .text.osRtxMutexOwnerUnlock  rtx_mutex.o
    0x0800b61c   0x0800b61c   0x00000004   PAD
    0x0800b620   0x0800b620   0x0000000a   Code   RO         1121    .text.osRtxObject   rtx_msgqueue.o
    0x0800b62a   0x0800b62a   0x00000006   PAD
    0x0800b630   0x0800b630   0x0000000a   Code   RO         1154    .text.osRtxObject   rtx_mutex.o
    0x0800b63a   0x0800b63a   0x00000006   PAD
    0x0800b640   0x0800b640   0x0000000a   Code   RO         1235    .text.osRtxObject   rtx_semaphore.o
    0x0800b64a   0x0800b64a   0x00000006   PAD
    0x0800b650   0x0800b650   0x0000000a   Code   RO         1290    .text.osRtxObject   rtx_system.o
    0x0800b65a   0x0800b65a   0x00000006   PAD
    0x0800b660   0x0800b660   0x0000000a   Code   RO         1309    .text.osRtxObject   rtx_thread.o
    0x0800b66a   0x0800b66a   0x00000006   PAD
    0x0800b670   0x0800b670   0x000000b8   Code   RO         1266    .text.osRtxPendSV_Handler  rtx_system.o
    0x0800b728   0x0800b728   0x00000042   Code   RO         1280    .text.osRtxPostProcess  rtx_system.o
    0x0800b76a   0x0800b76a   0x00000006   PAD
    0x0800b770   0x0800b770   0x0000000a   Code   RO         1239    .text.osRtxSemaphoreId  rtx_semaphore.o
    0x0800b77a   0x0800b77a   0x00000006   PAD
    0x0800b780   0x0800b780   0x0000000a   Code   RO         1274    .text.osRtxSemaphoreObject  rtx_system.o
    0x0800b78a   0x0800b78a   0x00000006   PAD
    0x0800b790   0x0800b790   0x0000003e   Code   RO         1231    .text.osRtxSemaphorePostProcess  rtx_semaphore.o
    0x0800b7ce   0x0800b7ce   0x00000002   PAD
    0x0800b7d0   0x0800b7d0   0x00000008   Code   RO         1353    .text.osRtxThreadBeforeFree  rtx_thread.o
    0x0800b7d8   0x0800b7d8   0x00000088   Code   RO         1337    .text.osRtxThreadBlock  rtx_thread.o
    0x0800b860   0x0800b860   0x000000fa   Code   RO         1343    .text.osRtxThreadDelayInsert  rtx_thread.o
    0x0800b95a   0x0800b95a   0x00000006   PAD
    0x0800b960   0x0800b960   0x0000009c   Code   RO         1315    .text.osRtxThreadDelayRemove  rtx_thread.o
    0x0800b9fc   0x0800b9fc   0x00000004   PAD
    0x0800ba00   0x0800ba00   0x00000150   Code   RO         1317    .text.osRtxThreadDelayTick  rtx_thread.o
    0x0800bb50   0x0800bb50   0x00000060   Code   RO         1349    .text.osRtxThreadDestroy  rtx_thread.o
    0x0800bbb0   0x0800bbb0   0x00000096   Code   RO         1331    .text.osRtxThreadDispatch  rtx_thread.o
    0x0800bc46   0x0800bc46   0x00000002   PAD
    0x0800bc48   0x0800bc48   0x000000a2   Code   RO         1351    .text.osRtxThreadFree  rtx_thread.o
    0x0800bcea   0x0800bcea   0x00000006   PAD
    0x0800bcf0   0x0800bcf0   0x0000000c   Code   RO         1129    .text.osRtxThreadGetRunning  rtx_msgqueue.o
    0x0800bcfc   0x0800bcfc   0x00000004   PAD
    0x0800bd00   0x0800bd00   0x0000000c   Code   RO         1184    .text.osRtxThreadGetRunning  rtx_mutex.o
    0x0800bd0c   0x0800bd0c   0x00000004   PAD
    0x0800bd10   0x0800bd10   0x0000000c   Code   RO         1243    .text.osRtxThreadGetRunning  rtx_semaphore.o
    0x0800bd1c   0x0800bd1c   0x00000004   PAD
    0x0800bd20   0x0800bd20   0x0000000c   Code   RO         1335    .text.osRtxThreadGetRunning  rtx_thread.o
    0x0800bd2c   0x0800bd2c   0x00000004   PAD
    0x0800bd30   0x0800bd30   0x0000000c   Code   RO         1554    .text.osRtxThreadGetRunning  rtx_timer.o
    0x0800bd3c   0x0800bd3c   0x00000004   PAD
    0x0800bd40   0x0800bd40   0x0000000a   Code   RO         1357    .text.osRtxThreadId  rtx_thread.o
    0x0800bd4a   0x0800bd4a   0x00000006   PAD
    0x0800bd50   0x0800bd50   0x0000003c   Code   RO         1347    .text.osRtxThreadJoinWakeup  rtx_thread.o
    0x0800bd8c   0x0800bd8c   0x00000004   PAD
    0x0800bd90   0x0800bd90   0x00000036   Code   RO         1305    .text.osRtxThreadListGet  rtx_thread.o
    0x0800bdc6   0x0800bdc6   0x00000002   PAD
    0x0800bdc8   0x0800bdc8   0x00000076   Code   RO         1301    .text.osRtxThreadListPut  rtx_thread.o
    0x0800be3e   0x0800be3e   0x00000002   PAD
    0x0800be40   0x0800be40   0x00000032   Code   RO         1311    .text.osRtxThreadListRemove  rtx_thread.o
    0x0800be72   0x0800be72   0x00000006   PAD
    0x0800be78   0x0800be78   0x00000022   Code   RO         1319    .text.osRtxThreadListRoot  rtx_thread.o
    0x0800be9a   0x0800be9a   0x00000006   PAD
    0x0800bea0   0x0800bea0   0x00000058   Code   RO         1307    .text.osRtxThreadListSort  rtx_thread.o
    0x0800bef8   0x0800bef8   0x0000000a   Code   RO         1270    .text.osRtxThreadObject  rtx_system.o
    0x0800bf02   0x0800bf02   0x00000006   PAD
    0x0800bf08   0x0800bf08   0x0000000a   Code   RO         1303    .text.osRtxThreadObject  rtx_thread.o
    0x0800bf12   0x0800bf12   0x00000006   PAD
    0x0800bf18   0x0800bf18   0x00000044   Code   RO         1455    .text.osRtxThreadPostProcess  rtx_thread.o
    0x0800bf5c   0x0800bf5c   0x00000004   PAD
    0x0800bf60   0x0800bf60   0x00000020   Code   RO         1313    .text.osRtxThreadReadyPut  rtx_thread.o
    0x0800bf80   0x0800bf80   0x00000022   Code   RO         1323    .text.osRtxThreadRegPtr  rtx_thread.o
    0x0800bfa2   0x0800bfa2   0x00000006   PAD
    0x0800bfa8   0x0800bfa8   0x00000014   Code   RO         1491    .text.osRtxThreadSetRunning  rtx_thread.o
    0x0800bfbc   0x0800bfbc   0x00000004   PAD
    0x0800bfc0   0x0800bfc0   0x00000014   Code   RO         1558    .text.osRtxThreadSetRunning  rtx_timer.o
    0x0800bfd4   0x0800bfd4   0x00000004   PAD
    0x0800bfd8   0x0800bfd8   0x0000003c   Code   RO         1345    .text.osRtxThreadStackCheck  rtx_thread.o
    0x0800c014   0x0800c014   0x00000004   PAD
    0x0800c018   0x0800c018   0x00000096   Code   RO         1355    .text.osRtxThreadStartup  rtx_thread.o
    0x0800c0ae   0x0800c0ae   0x00000002   PAD
    0x0800c0b0   0x0800c0b0   0x0000002e   Code   RO         1327    .text.osRtxThreadSwitch  rtx_thread.o
    0x0800c0de   0x0800c0de   0x00000002   PAD
    0x0800c0e0   0x0800c0e0   0x00000076   Code   RO         1341    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x0800c156   0x0800c156   0x00000002   PAD
    0x0800c158   0x0800c158   0x00000046   Code   RO         1339    .text.osRtxThreadWaitExit  rtx_thread.o
    0x0800c19e   0x0800c19e   0x00000002   PAD
    0x0800c1a0   0x0800c1a0   0x00000110   Code   RO         1262    .text.osRtxTick_Handler  rtx_system.o
    0x0800c2b0   0x0800c2b0   0x00000030   Code   RO         1530    .text.osRtxTimerSetup  rtx_timer.o
    0x0800c2e0   0x0800c2e0   0x00000032   Code   RO         1534    .text.osRtxTimerThread  rtx_timer.o
    0x0800c312   0x0800c312   0x00000006   PAD
    0x0800c318   0x0800c318   0x000000dc   Code   RO         1532    .text.osRtxTimerTick  rtx_timer.o
    0x0800c3f4   0x0800c3f4   0x00000004   PAD
    0x0800c3f8   0x0800c3f8   0x0000005e   Code   RO         1213    .text.osSemaphoreAcquire  rtx_semaphore.o
    0x0800c456   0x0800c456   0x00000002   PAD
    0x0800c458   0x0800c458   0x00000072   Code   RO         1203    .text.osSemaphoreNew  rtx_semaphore.o
    0x0800c4ca   0x0800c4ca   0x00000006   PAD
    0x0800c4d0   0x0800c4d0   0x0000004e   Code   RO         1217    .text.osSemaphoreRelease  rtx_semaphore.o
    0x0800c51e   0x0800c51e   0x00000002   PAD
    0x0800c520   0x0800c520   0x00000010   Code   RO         1451    .text.osThreadEntry  rtx_thread.o
    0x0800c530   0x0800c530   0x00000024   Code   RO         1403    .text.osThreadExit  rtx_thread.o
    0x0800c554   0x0800c554   0x00000004   PAD
    0x0800c558   0x0800c558   0x0000003a   Code   RO         1379    .text.osThreadGetId  rtx_thread.o
    0x0800c592   0x0800c592   0x00000006   PAD
    0x0800c598   0x0800c598   0x00000072   Code   RO         1361    .text.osThreadNew   rtx_thread.o
    0x0800c60a   0x0800c60a   0x00000006   PAD
    0x0800c610   0x0800c610   0x00000064   Code   RO         1389    .text.osThreadSetPriority  rtx_thread.o
    0x0800c674   0x0800c674   0x00000004   PAD
    0x0800c678   0x0800c678   0x00000020   Code   RO         1651    .text.os_kernel_is_initialized  retarget_os_rtos2.o
    0x0800c698   0x0800c698   0x00000020   Code   RO         1655    .text.os_kernel_is_running  retarget_os_rtos2.o
    0x0800c6b8   0x0800c6b8   0x0000026a   Code   RO          284    .text.pb_check_proto3_default_value  pb_encode.o
    0x0800c922   0x0800c922   0x00000006   PAD
    0x0800c928   0x0800c928   0x00000048   Code   RO          187    .text.pb_close_string_substream  pb_decode.o
    0x0800c970   0x0800c970   0x0000000e   Code   RO          150    .text.pb_const_cast  pb_common.o
    0x0800c97e   0x0800c97e   0x00000002   PAD
    0x0800c980   0x0800c980   0x00000016   Code   RO          223    .text.pb_dec_bool   pb_decode.o
    0x0800c996   0x0800c996   0x00000002   PAD
    0x0800c998   0x0800c998   0x00000120   Code   RO          227    .text.pb_dec_bytes  pb_decode.o
    0x0800cab8   0x0800cab8   0x000000b8   Code   RO          233    .text.pb_dec_fixed_length_bytes  pb_decode.o
    0x0800cb70   0x0800cb70   0x0000012c   Code   RO          229    .text.pb_dec_string  pb_decode.o
    0x0800cc9c   0x0800cc9c   0x00000004   PAD
    0x0800cca0   0x0800cca0   0x00000118   Code   RO          231    .text.pb_dec_submessage  pb_decode.o
    0x0800cdb8   0x0800cdb8   0x0000024e   Code   RO          225    .text.pb_dec_varint  pb_decode.o
    0x0800d006   0x0800d006   0x00000002   PAD
    0x0800d008   0x0800d008   0x00000026   Code   RO          193    .text.pb_decode     pb_decode.o
    0x0800d02e   0x0800d02e   0x00000002   PAD
    0x0800d030   0x0800d030   0x00000038   Code   RO          197    .text.pb_decode_bool  pb_decode.o
    0x0800d068   0x0800d068   0x00000034   Code   RO          201    .text.pb_decode_fixed32  pb_decode.o
    0x0800d09c   0x0800d09c   0x00000004   PAD
    0x0800d0a0   0x0800d0a0   0x00000038   Code   RO          203    .text.pb_decode_fixed64  pb_decode.o
    0x0800d0d8   0x0800d0d8   0x0000039e   Code   RO          191    .text.pb_decode_inner  pb_decode.o
    0x0800d476   0x0800d476   0x00000002   PAD
    0x0800d478   0x0800d478   0x00000062   Code   RO          199    .text.pb_decode_svarint  pb_decode.o
    0x0800d4da   0x0800d4da   0x00000006   PAD
    0x0800d4e0   0x0800d4e0   0x00000052   Code   RO          177    .text.pb_decode_tag  pb_decode.o
    0x0800d532   0x0800d532   0x00000006   PAD
    0x0800d538   0x0800d538   0x000000ca   Code   RO          173    .text.pb_decode_varint  pb_decode.o
    0x0800d602   0x0800d602   0x00000006   PAD
    0x0800d608   0x0800d608   0x00000016   Code   RO          169    .text.pb_decode_varint32  pb_decode.o
    0x0800d61e   0x0800d61e   0x00000002   PAD
    0x0800d620   0x0800d620   0x000001b0   Code   RO          171    .text.pb_decode_varint32_eof  pb_decode.o
    0x0800d7d0   0x0800d7d0   0x00000074   Code   RO          154    .text.pb_default_field_callback  pb_common.o
    0x0800d844   0x0800d844   0x00000004   PAD
    0x0800d848   0x0800d848   0x00000020   Code   RO          296    .text.pb_enc_bool   pb_encode.o
    0x0800d868   0x0800d868   0x00000088   Code   RO          298    .text.pb_enc_bytes  pb_encode.o
    0x0800d8f0   0x0800d8f0   0x0000006e   Code   RO          294    .text.pb_enc_fixed  pb_encode.o
    0x0800d95e   0x0800d95e   0x00000002   PAD
    0x0800d960   0x0800d960   0x00000018   Code   RO          304    .text.pb_enc_fixed_length_bytes  pb_encode.o
    0x0800d978   0x0800d978   0x000000f6   Code   RO          300    .text.pb_enc_string  pb_encode.o
    0x0800da6e   0x0800da6e   0x00000002   PAD
    0x0800da70   0x0800da70   0x00000096   Code   RO          302    .text.pb_enc_submessage  pb_encode.o
    0x0800db06   0x0800db06   0x00000002   PAD
    0x0800db08   0x0800db08   0x0000018c   Code   RO          292    .text.pb_enc_varint  pb_encode.o
    0x0800dc94   0x0800dc94   0x00000004   PAD
    0x0800dc98   0x0800dc98   0x0000007a   Code   RO          252    .text.pb_encode     pb_encode.o
    0x0800dd12   0x0800dd12   0x00000006   PAD
    0x0800dd18   0x0800dd18   0x00000016   Code   RO          270    .text.pb_encode_fixed32  pb_encode.o
    0x0800dd2e   0x0800dd2e   0x00000002   PAD
    0x0800dd30   0x0800dd30   0x00000016   Code   RO          272    .text.pb_encode_fixed64  pb_encode.o
    0x0800dd46   0x0800dd46   0x00000002   PAD
    0x0800dd48   0x0800dd48   0x00000038   Code   RO          278    .text.pb_encode_string  pb_encode.o
    0x0800dd80   0x0800dd80   0x00000122   Code   RO          260    .text.pb_encode_submessage  pb_encode.o
    0x0800dea2   0x0800dea2   0x00000006   PAD
    0x0800dea8   0x0800dea8   0x0000005e   Code   RO          268    .text.pb_encode_svarint  pb_encode.o
    0x0800df06   0x0800df06   0x00000002   PAD
    0x0800df08   0x0800df08   0x0000002a   Code   RO          274    .text.pb_encode_tag  pb_encode.o
    0x0800df32   0x0800df32   0x00000006   PAD
    0x0800df38   0x0800df38   0x00000090   Code   RO          276    .text.pb_encode_tag_for_field  pb_encode.o
    0x0800dfc8   0x0800dfc8   0x0000004e   Code   RO          264    .text.pb_encode_varint  pb_encode.o
    0x0800e016   0x0800e016   0x00000002   PAD
    0x0800e018   0x0800e018   0x000000f0   Code   RO          266    .text.pb_encode_varint_32  pb_encode.o
    0x0800e108   0x0800e108   0x00000028   Code   RO          134    .text.pb_field_iter_begin  pb_common.o
    0x0800e130   0x0800e130   0x00000026   Code   RO          148    .text.pb_field_iter_begin_const  pb_common.o
    0x0800e156   0x0800e156   0x00000002   PAD
    0x0800e158   0x0800e158   0x0000005e   Code   RO          138    .text.pb_field_iter_begin_extension  pb_common.o
    0x0800e1b6   0x0800e1b6   0x00000002   PAD
    0x0800e1b8   0x0800e1b8   0x0000001e   Code   RO          152    .text.pb_field_iter_begin_extension_const  pb_common.o
    0x0800e1d6   0x0800e1d6   0x00000002   PAD
    0x0800e1d8   0x0800e1d8   0x000000c8   Code   RO          144    .text.pb_field_iter_find  pb_common.o
    0x0800e2a0   0x0800e2a0   0x00000078   Code   RO          146    .text.pb_field_iter_find_extension  pb_common.o
    0x0800e318   0x0800e318   0x00000020   Code   RO          140    .text.pb_field_iter_next  pb_common.o
    0x0800e338   0x0800e338   0x0000019a   Code   RO          211    .text.pb_field_set_to_default  pb_decode.o
    0x0800e4d2   0x0800e4d2   0x00000006   PAD
    0x0800e4d8   0x0800e4d8   0x0000002a   Code   RO          167    .text.pb_istream_from_buffer  pb_decode.o
    0x0800e502   0x0800e502   0x00000006   PAD
    0x0800e508   0x0800e508   0x00000092   Code   RO          185    .text.pb_make_string_substream  pb_decode.o
    0x0800e59a   0x0800e59a   0x00000006   PAD
    0x0800e5a0   0x0800e5a0   0x000000ea   Code   RO          205    .text.pb_message_set_to_defaults  pb_decode.o
    0x0800e68a   0x0800e68a   0x00000006   PAD
    0x0800e690   0x0800e690   0x00000028   Code   RO          246    .text.pb_ostream_from_buffer  pb_encode.o
    0x0800e6b8   0x0800e6b8   0x00000106   Code   RO          163    .text.pb_read       pb_decode.o
    0x0800e7be   0x0800e7be   0x00000002   PAD
    0x0800e7c0   0x0800e7c0   0x0000008a   Code   RO          175    .text.pb_readbyte   pb_decode.o
    0x0800e84a   0x0800e84a   0x00000006   PAD
    0x0800e850   0x0800e850   0x0000008c   Code   RO          179    .text.pb_skip_field  pb_decode.o
    0x0800e8dc   0x0800e8dc   0x00000004   PAD
    0x0800e8e0   0x0800e8e0   0x00000062   Code   RO          183    .text.pb_skip_string  pb_decode.o
    0x0800e942   0x0800e942   0x00000006   PAD
    0x0800e948   0x0800e948   0x0000003e   Code   RO          181    .text.pb_skip_varint  pb_decode.o
    0x0800e986   0x0800e986   0x00000002   PAD
    0x0800e988   0x0800e988   0x000000b8   Code   RO          250    .text.pb_write      pb_encode.o
    0x0800ea40   0x0800ea40   0x0000005c   Code   RO           68    .text.processReceivedData  receivethread.o
    0x0800ea9c   0x0800ea9c   0x00000004   PAD
    0x0800eaa0   0x0800eaa0   0x000000fe   Code   RO          235    .text.read_raw_value  pb_decode.o
    0x0800eb9e   0x0800eb9e   0x00000002   PAD
    0x0800eba0   0x0800eba0   0x000001c0   Code   RO           66    .text.receiveThread  receivethread.o
    0x0800ed60   0x0800ed60   0x00000042   Code   RO           82    .text.receive_init  receiveinit.o
    0x0800eda2   0x0800eda2   0x00000006   PAD
    0x0800eda8   0x0800eda8   0x00000040   Code   RO          282    .text.safe_read_bool  pb_encode.o
    0x0800ede8   0x0800ede8   0x00000068   Code   RO         2960    .text.stdout_putchar  FTbotLib.lib(e4ftbotterminal.o)
    0x0800ee50   0x0800ee50   0x00000050   Code   RO          389    .text.svcRtxDelay   rtx_delay.o
    0x0800eea0   0x0800eea0   0x00000016   Code   RO          866    .text.svcRtxKernelGetState  rtx_kernel.o
    0x0800eeb6   0x0800eeb6   0x00000002   PAD
    0x0800eeb8   0x0800eeb8   0x00000304   Code   RO          912    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x0800f1bc   0x0800f1bc   0x00000004   PAD
    0x0800f1c0   0x0800f1c0   0x000000a4   Code   RO          916    .text.svcRtxKernelStart  rtx_kernel.o
    0x0800f264   0x0800f264   0x00000004   PAD
    0x0800f268   0x0800f268   0x00000168   Code   RO         1137    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x0800f3d0   0x0800f3d0   0x00000048   Code   RO         1105    .text.svcRtxMessageQueueGetCount  rtx_msgqueue.o
    0x0800f418   0x0800f418   0x00000290   Code   RO         1075    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x0800f6a8   0x0800f6a8   0x0000015c   Code   RO         1127    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x0800f804   0x0800f804   0x00000004   PAD
    0x0800f808   0x0800f808   0x0000012a   Code   RO         1139    .text.svcRtxMessageQueueReset  rtx_msgqueue.o
    0x0800f932   0x0800f932   0x00000006   PAD
    0x0800f938   0x0800f938   0x00000176   Code   RO         1182    .text.svcRtxMutexAcquire  rtx_mutex.o
    0x0800faae   0x0800faae   0x00000002   PAD
    0x0800fab0   0x0800fab0   0x00000058   Code   RO         1190    .text.svcRtxMutexDelete  rtx_mutex.o
    0x0800fb08   0x0800fb08   0x00000142   Code   RO         1176    .text.svcRtxMutexNew  rtx_mutex.o
    0x0800fc4a   0x0800fc4a   0x00000006   PAD
    0x0800fc50   0x0800fc50   0x000001a0   Code   RO         1186    .text.svcRtxMutexRelease  rtx_mutex.o
    0x0800fdf0   0x0800fdf0   0x000000aa   Code   RO         1241    .text.svcRtxSemaphoreAcquire  rtx_semaphore.o
    0x0800fe9a   0x0800fe9a   0x00000006   PAD
    0x0800fea0   0x0800fea0   0x00000176   Code   RO         1227    .text.svcRtxSemaphoreNew  rtx_semaphore.o
    0x08010016   0x08010016   0x00000002   PAD
    0x08010018   0x08010018   0x000000a2   Code   RO         1249    .text.svcRtxSemaphoreRelease  rtx_semaphore.o
    0x080100ba   0x080100ba   0x00000006   PAD
    0x080100c0   0x080100c0   0x00000084   Code   RO         1489    .text.svcRtxThreadExit  rtx_thread.o
    0x08010144   0x08010144   0x00000004   PAD
    0x08010148   0x08010148   0x00000016   Code   RO         1381    .text.svcRtxThreadGetId  rtx_thread.o
    0x0801015e   0x0801015e   0x00000002   PAD
    0x08010160   0x08010160   0x0000046a   Code   RO         1359    .text.svcRtxThreadNew  rtx_thread.o
    0x080105ca   0x080105ca   0x00000006   PAD
    0x080105d0   0x080105d0   0x000000a4   Code   RO         1471    .text.svcRtxThreadSetPriority  rtx_thread.o
    0x08010674   0x08010674   0x00000004   PAD
    0x08010678   0x08010678   0x000001d2   Code   RO           34    .text.transmitThread  transmitthread.o
    0x0801084a   0x0801084a   0x00000006   PAD
    0x08010850   0x08010850   0x000000fe   Code   RO           17    .text.uart_init     initcom.o
    0x0801094e   0x0801094e   0x00000002   PAD
    0x08010950   0x08010950   0x0000013e   Code   RO           19    .text.wifi_init     initcom.o
    0x08010a8e   0x08010a8e   0x00000002   PAD
    0x08010a90   0x08010a90   0x00000012   Code   RO         1453    .text.xPSR_InitVal  rtx_thread.o
    0x08010aa2   0x08010aa2   0x0000003e   Code   RO         3416    CL$$btod_d2e        c_w.l(btod.o)
    0x08010ae0   0x08010ae0   0x00000046   Code   RO         3418    CL$$btod_d2e_denorm_low  c_w.l(btod.o)
    0x08010b26   0x08010b26   0x00000060   Code   RO         3417    CL$$btod_d2e_norm_op1  c_w.l(btod.o)
    0x08010b86   0x08010b86   0x00000002   PAD
    0x08010b88   0x08010b88   0x00000338   Code   RO         3426    CL$$btod_div_common  c_w.l(btod.o)
    0x08010ec0   0x08010ec0   0x000000dc   Code   RO         3423    CL$$btod_e2e        c_w.l(btod.o)
    0x08010f9c   0x08010f9c   0x0000002a   Code   RO         3420    CL$$btod_ediv       c_w.l(btod.o)
    0x08010fc6   0x08010fc6   0x0000002a   Code   RO         3419    CL$$btod_emul       c_w.l(btod.o)
    0x08010ff0   0x08010ff0   0x00000244   Code   RO         3425    CL$$btod_mult_common  c_w.l(btod.o)
    0x08011234   0x08011234   0x00000030   Code   RO         3473    i.__ARM_fpclassify  m_wm.l(fpclassify.o)
    0x08011264   0x08011264   0x0000000e   Code   RO         3048    i._is_digit         c_w.l(__printf_wp.o)
    0x08011272   0x08011272   0x0000001c   Code   RO         3341    i.fputc             c_w.l(fputc.o)
    0x0801128e   0x0801128e   0x00000002   PAD
    0x08011290   0x08011290   0x0000002c   Code   RO         3443    locale$$code        c_w.l(lc_ctype_c.o)
    0x080112bc   0x080112bc   0x0000002c   Code   RO         3446    locale$$code        c_w.l(lc_numeric_c.o)
    0x080112e8   0x080112e8   0x0000000c   Code   RO         3267    x$fpl$dretinf       fz_wm.l(dretinf.o)
    0x080112f4   0x080112f4   0x00000056   Code   RO         3090    x$fpl$f2d           fz_wm.l(f2d.o)
    0x0801134a   0x0801134a   0x0000008c   Code   RO         3269    x$fpl$fnaninf       fz_wm.l(fnaninf.o)
    0x080113d6   0x080113d6   0x0000001a   Code   RO         3092    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x080113f0   0x080113f0   0x00000004   Code   RO         3271    x$fpl$printf1       fz_wm.l(printf1.o)
    0x080113f4   0x080113f4   0x00000004   Code   RO         3273    x$fpl$printf2       fz_wm.l(printf2.o)
    0x080113f8   0x080113f8   0x00000000   Code   RO         3279    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x080113f8   0x080113f8   0x00000011   Data   RO         3056    .constdata          c_w.l(__printf_flags_ss_wp.o)
    0x08011409   0x08011409   0x00000003   PAD
    0x0801140c   0x0801140c   0x00000008   Data   RO         3152    .constdata          c_w.l(_printf_wctomb.o)
    0x08011414   0x08011414   0x00000028   Data   RO         3181    .constdata          c_w.l(_printf_hex_int_ll_ptr.o)
    0x0801143c   0x0801143c   0x00000026   Data   RO         3328    .constdata          c_w.l(_printf_fp_hex.o)
    0x08011462   0x08011462   0x00000002   PAD
    0x08011464   0x08011464   0x00000094   Data   RO         3414    .constdata          c_w.l(bigflt0.o)
    0x080114f8   0x080114f8   0x00000070   Data   RO          961    .rodata             rtx_lib.o
    0x08011568   0x08011568   0x00000038   Data   RO          964    .rodata             rtx_lib.o
    0x080115a0   0x080115a0   0x00000010   Data   RO         2945    .rodata.AHBPrescTable  system_stm32f7xx.o
    0x080115b0   0x080115b0   0x00000008   Data   RO         2946    .rodata.APBPrescTable  system_stm32f7xx.o
    0x080115b8   0x080115b8   0x00000008   Data   RO         1977    .rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset  stm32f7xx_hal_dma.o
    0x080115c0   0x080115c0   0x00000008   Data   RO         1640    .rodata.__stderr_name  retarget_io.o
    0x080115c8   0x080115c8   0x00000007   Data   RO         1638    .rodata.__stdin_name  retarget_io.o
    0x080115cf   0x080115cf   0x00000008   Data   RO         1639    .rodata.__stdout_name  retarget_io.o
    0x080115d7   0x080115d7   0x00000001   PAD
    0x080115d8   0x080115d8   0x00000010   Data   RO          126    .rodata.ftbot_RobotStatus_field_info  ftbot.pb.o
    0x080115e8   0x080115e8   0x00000018   Data   RO          128    .rodata.ftbot_RobotStatus_msg  ftbot.pb.o
    0x08011600   0x08011600   0x00000004   Data   RO          127    .rodata.ftbot_RobotStatus_submsg_info  ftbot.pb.o
    0x08011604   0x08011604   0x0000000c   Data   RO          123    .rodata.ftbot_SetSpeedSteering_field_info  ftbot.pb.o
    0x08011610   0x08011610   0x00000018   Data   RO          125    .rodata.ftbot_SetSpeedSteering_msg  ftbot.pb.o
    0x08011628   0x08011628   0x00000004   Data   RO          124    .rodata.ftbot_SetSpeedSteering_submsg_info  ftbot.pb.o
    0x0801162c   0x0801162c   0x00000004   Data   RO          963    .rodata.osRtxUserSVC  rtx_lib.o
    0x08011630   0x08011630   0x00000024   Data   RO          958    .rodata.os_idle_thread_attr  rtx_lib.o
    0x08011654   0x08011654   0x00000018   Data   RO          960    .rodata.os_timer_mq_attr  rtx_lib.o
    0x0801166c   0x0801166c   0x00000024   Data   RO          959    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08011690   0x08011690   0x0000025e   Data   RO            7    .rodata.str1.1      wifimain.o
    0x080118ee   0x080118ee   0x00000014   Data   RO           25    .rodata.str1.1      initcom.o
    0x08011902   0x08011902   0x00000010   Data   RO           42    .rodata.str1.1      transmitthread.o
    0x08011912   0x08011912   0x00000006   Data   RO           74    .rodata.str1.1      receivethread.o
    0x08011918   0x08011918   0x0000019c   Data   RO          237    .rodata.str1.1      pb_decode.o
    0x08011ab4   0x08011ab4   0x00000089   Data   RO          306    .rodata.str1.1      pb_encode.o
    0x08011b3d   0x08011b3d   0x0000000b   Data   RO          944    .rodata.str1.1      rtx_kernel.o
    0x08011b48   0x08011b48   0x00000017   Data   RO         1641    .rodata.str1.1      retarget_io.o
    0x08011b5f   0x08011b5f   0x00000013   Data   RO         2964    .rodata.str1.1      FTbotLib.lib(e4ftbotterminal.o)
    0x08011b72   0x08011b72   0x00000005   Data   RO           21    .rodata.uart_init.command  initcom.o
    0x08011b77   0x08011b77   0x00000027   Data   RO           23    .rodata.wifi_init.udpCommand  initcom.o
    0x08011b9e   0x08011b9e   0x00000002   PAD
    0x08011ba0   0x08011ba0   0x00000040   Data   RO         3520    Region$$Table       anon$$obj.o
    0x08011be0   0x08011be0   0x00000110   Data   RO         3442    locale$$data        c_w.l(lc_ctype_c.o)
    0x08011cf0   0x08011cf0   0x0000001c   Data   RO         3445    locale$$data        c_w.l(lc_numeric_c.o)


    Execution Region RW_DTCM (Exec base: 0x20000000, Load base: 0x08011d10, Size: 0x00000e08, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08011d10   0x00000002   Data   RW           88    ETTI4dmaVar         receiveinit.o
    0x20000002   0x08011d12   0x00000006   PAD
    0x20000008        -       0x00000600   Zero   RW         2931    HEAP                startup_stm32f746xx.o
    0x20000608        -       0x00000800   Zero   RW         2930    STACK               startup_stm32f746xx.o


    Execution Region RW_SRAM1 (Exec base: 0x20010000, Load base: 0x08011d20, Size: 0x00008f88, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00000040])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20010000   COMPRESSED   0x00000004   Data   RW         3067    .data               c_w.l(stdio_streams.o)
    0x20010004   COMPRESSED   0x00000004   Data   RW         3068    .data               c_w.l(stdio_streams.o)
    0x20010008   COMPRESSED   0x00000004   Data   RW         3069    .data               c_w.l(stdio_streams.o)
    0x2001000c   COMPRESSED   0x00000004   Data   RW         3211    .data               c_w.l(streamlock.o)
    0x20010010   COMPRESSED   0x00000004   Data   RW         2944    .data.SystemCoreClock  system_stm32f7xx.o
    0x20010014   COMPRESSED   0x000000b8   Data   RW            4    .data.driveDisp     wifimain.o
    0x200100cc   COMPRESSED   0x0000001c   Data   RW          100    .data.leftMotorDescriptor  drivethread.o
    0x200100e8   COMPRESSED   0x000000a4   Data   RW          945    .data.os            rtx_kernel.o
    0x2001018c   COMPRESSED   0x0000001c   Data   RW          101    .data.rightMotorDescriptor  drivethread.o
    0x200101a8   COMPRESSED   0x00000001   Data   RW         1729    .data.uwTickFreq    stm32f7xx_hal.o
    0x200101a9   COMPRESSED   0x00000003   PAD
    0x200101ac   COMPRESSED   0x00000004   Data   RW         1728    .data.uwTickPrio    stm32f7xx_hal.o
    0x200101b0   COMPRESSED   0x00000010   PAD
    0x200101c0        -       0x00000054   Zero   RW         3064    .bss                c_w.l(stdio_streams.o)
    0x20010214        -       0x00000054   Zero   RW         3065    .bss                c_w.l(stdio_streams.o)
    0x20010268        -       0x00000054   Zero   RW         3066    .bss                c_w.l(stdio_streams.o)
    0x200102bc        -       0x00000060   Zero   RW         3285    .bss                c_w.l(libspace.o)
    0x2001031c        -       0x00000004   Zero   RW            6    .bss.MsgQId_nix     wifimain.o
    0x20010320        -       0x00000004   Zero   RW         2963    .bss.__termSem      FTbotLib.lib(e4ftbotterminal.o)
    0x20010324        -       0x00000004   Zero   RW            5    .bss.driveControlMutId  wifimain.o
    0x20010328        -       0x00000004   Zero   RW          103    .bss.driveId        drivethread.o
    0x2001032c        -       0x0000000c   Zero   RW            8    .bss.driveInfo      wifimain.o
    0x20010338        -       0x00000064   Zero   RW          337    .bss.hadc1          main.o
    0x2001039c        -       0x00000024   Zero   RW          338    .bss.hcrc           main.o
    0x200103c0        -       0x00000060   Zero   RW          341    .bss.hdma_usart2_rx  main.o
    0x20010420        -       0x00000060   Zero   RW          342    .bss.hdma_usart2_tx  main.o
    0x20010480        -       0x00000060   Zero   RW          343    .bss.hdma_usart6_rx  main.o
    0x200104e0        -       0x00000060   Zero   RW          344    .bss.hdma_usart6_tx  main.o
    0x20010540        -       0x0000004c   Zero   RW         2923    .bss.htim6          stm32f7xx_hal_timebase_tim.o
    0x2001058c        -       0x000000b4   Zero   RW          339    .bss.huart2         main.o
    0x20010640        -       0x000000b4   Zero   RW          340    .bss.huart6         main.o
    0x200106f4   COMPRESSED   0x00000004   PAD
    0x200106f8        -       0x00008040   Zero   RW          957    .bss.os             rtx_lib.o
    0x20018738        -       0x00000001   Zero   RW         1605    .bss.os             os_systick.o
    0x20018739   COMPRESSED   0x00000003   PAD
    0x2001873c        -       0x00000034   Zero   RW          968    .bss.os.msgqueue.cb  rtx_lib.o
    0x20018770        -       0x00000050   Zero   RW          969    .bss.os.msgqueue.mem  rtx_lib.o
    0x200187c0        -       0x000000a0   Zero   RW          965    .bss.os.thread.cb   rtx_lib.o
    0x20018860        -       0x00000200   Zero   RW          966    .bss.os.thread.idle.stack  rtx_lib.o
    0x20018a60        -       0x00000200   Zero   RW          967    .bss.os.thread.timer.stack  rtx_lib.o
    0x20018c60        -       0x00000004   Zero   RW         2962    .bss.pEmbDispHandle  FTbotLib.lib(e4ftbotterminal.o)
    0x20018c64        -       0x00000001   Zero   RW          102    .bss.powerFail      drivethread.o
    0x20018c65   COMPRESSED   0x00000003   PAD
    0x20018c68        -       0x00000004   Zero   RW           72    .bss.receiveId      receivethread.o
    0x20018c6c        -       0x00000080   Zero   RW           73    .bss.receiveThread.buffer_rx  receivethread.o
    0x20018cec        -       0x00000004   Zero   RW           38    .bss.transmitId     transmitthread.o
    0x20018cf0   COMPRESSED   0x00000010   PAD
    0x20018d00        -       0x00000080   Zero   RW           40    .bss.transmitThread.buffer_stream  transmitthread.o
    0x20018d80        -       0x00000080   Zero   RW           39    .bss.transmitThread.buffer_transmit  transmitthread.o
    0x20018e00        -       0x00000004   Zero   RW           41    .bss.uartTxSemaphore  transmitthread.o
    0x20018e04        -       0x00000080   Zero   RW           22    .bss.uart_init.buffer_msgQ  initcom.o
    0x20018e84        -       0x00000004   Zero   RW         1730    .bss.uwTick         stm32f7xx_hal.o
    0x20018e88        -       0x00000080   Zero   RW           26    .bss.wifi_init.buffer_msgQ  initcom.o
    0x20018f08        -       0x00000080   Zero   RW           24    .bss.wifi_init.commandBuffer  initcom.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       344          0          0          0          0       1046   drivegettersetter.o
        90          0          0         56          5       2776   drivethread.o
         0          0         84          0          0       1789   ftbot.pb.o
       822          0         64          0        384       2420   initcom.o
       256         16          0          0          0        812   irq_armv7m.o
      1092          0          0          0        880      15560   main.o
       204          0          0          0          1       5747   os_systick.o
      1478          0          0          0          0       5767   pb_common.o
      7672         36        412          0          0      16023   pb_decode.o
      4678         24        137          0          0      12133   pb_encode.o
        70          0          0          0          0        793   potentiometervoltage.o
        28          4          0          0          0        541   poticalc.o
       140          0          0          2          0       4680   receiveinit.o
       744         16          6          0        132       4358   receivethread.o
       552          0         46          0          0       2451   retarget_io.o
       240          0          0          0          0       2400   retarget_os_rtos2.o
        56          6          0          0          0        733   rtx_config.o
       230          0          0          0          0       2840   rtx_delay.o
       686          0          0          0          0      26565   rtx_evr.o
      1392          0         11        164          0      19003   rtx_kernel.o
        30          0        268          0      34148       6376   rtx_lib.o
       710          0          0          0          0       2384   rtx_memory.o
       478          0          0          0          0      12703   rtx_mempool.o
      3580          0          0          0          0      15329   rtx_msgqueue.o
      2356          0          0          0          0       9526   rtx_mutex.o
      1594          0          0          0          0       9658   rtx_semaphore.o
       940         10          0          0          0       6986   rtx_system.o
      4558          0          0          0          0      34419   rtx_thread.o
       548          0          0          0          0       9434   rtx_timer.o
        64         26        456          0       3584        904   startup_stm32f746xx.o
        76          0          0          5          4       8074   stm32f7xx_hal.o
      2082          0          0          0          0      11742   stm32f7xx_hal_adc.o
         8          0          0          0          0       8611   stm32f7xx_hal_adc_ex.o
       624          0          0          0          0      10736   stm32f7xx_hal_cortex.o
       204          0          0          0          0       4314   stm32f7xx_hal_crc.o
       214         26          0          0          0       2743   stm32f7xx_hal_crc_ex.o
      2080          8          8          0          0       8781   stm32f7xx_hal_dma.o
      1004          0          0          0          0       5469   stm32f7xx_hal_gpio.o
       976          0          0          0          0      12245   stm32f7xx_hal_msp.o
       198          0          0          0          0       6005   stm32f7xx_hal_pwr_ex.o
      2830          0          0          0          0       8307   stm32f7xx_hal_rcc.o
      2162          0          0          0          0       7530   stm32f7xx_hal_rcc_ex.o
      1570          0          0          0          0      37262   stm32f7xx_hal_tim.o
        24          0          0          0          0      16266   stm32f7xx_hal_tim_ex.o
       236          0          0          0         76       7912   stm32f7xx_hal_timebase_tim.o
      6022         52          0          0          0      26265   stm32f7xx_hal_uart.o
       112          0          0          0          0       1052   stm32f7xx_it.o
        18          0         24          4          0       3414   system_stm32f7xx.o
       490          0         16          0        264       8629   transmitthread.o
       508          0        606        184         20       6460   wifimain.o

    ----------------------------------------------------------------------
     58418        232       2205        420      39544     437973   Object Totals
         0          0         64          0          0          0   (incl. Generated)
      1348          8          3          5         46          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       332         12         19          0          8        132   e4ftbotterminal.o
        24          4          0          0          0         84   __2printf.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
       392          4         17          0          0         92   __printf_flags_ss_wp.o
        14          0          0          0          0         68   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        72          0          0          0          0         96   _c16rtomb.o
        28          0          0          0          0         68   _chval.o
         6          0          0          0          0          0   _printf_a.o
         6          0          0          0          0          0   _printf_c.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
        64          6          0          0          0         84   _printf_char_file_locked.o
        40          0          0          0          0         68   _printf_charcount.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
         6          0          0          0          0          0   _printf_e.o
         6          0          0          0          0          0   _printf_f.o
      1052          0          0          0          0        148   _printf_fp_dec.o
       764          8         38          0          0        100   _printf_fp_hex.o
       128         16          0          0          0         84   _printf_fp_infnan.o
         6          0          0          0          0          0   _printf_g.o
       148          4         40          0          0        160   _printf_hex_int_ll_ptr.o
         6          0          0          0          0          0   _printf_i.o
       178          0          0          0          0         88   _printf_intcommon.o
        10          0          0          0          0          0   _printf_l.o
         6          0          0          0          0          0   _printf_lc.o
        10          0          0          0          0          0   _printf_ll.o
         6          0          0          0          0          0   _printf_lld.o
         6          0          0          0          0          0   _printf_lli.o
         6          0          0          0          0          0   _printf_llo.o
         6          0          0          0          0          0   _printf_llu.o
         6          0          0          0          0          0   _printf_llx.o
       124         16          0          0          0         92   _printf_longlong_dec.o
         6          0          0          0          0          0   _printf_ls.o
         6          0          0          0          0          0   _printf_n.o
         6          0          0          0          0          0   _printf_o.o
       112          8          0          0          0        124   _printf_oct_int_ll.o
         6          0          0          0          0          0   _printf_p.o
        78          0          0          0          0        108   _printf_pad.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         80   _printf_str.o
        36          0          0          0          0         84   _printf_truncate.o
         6          0          0          0          0          0   _printf_u.o
        44          0          0          0          0        108   _printf_wchar.o
       188          6          8          0          0         92   _printf_wctomb.o
         6          0          0          0          0          0   _printf_x.o
        16          0          0          0          0         68   _snputc.o
       158          0          0          0          0         92   _strtoul.o
        26          0          0          0          0         80   atoi.o
       228          4        148          0          0         96   bigflt0.o
      1936        128          0          0          0        668   btod.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        52         38          0          0          0         76   defsig_rtred_inner.o
        14          0          0          0          0         80   defsig_rtred_outer.o
        18          0          0          0          0         80   exit.o
        76          0          0          0          0         88   fclose.o
       144         10          0          0          0        128   fflush_locked.o
       482          0          0          0          0         92   flsbuf.o
       332         10          0          0          0        152   fopen_locked.o
        28          0          0          0          0         68   fputc.o
       248          6          0          0          0         84   fseek.o
        66          0          0          0          0         76   ftell.o
       166          0          0          0          0        144   h1_alloc_threads.o
        82          0          0          0          0        104   h1_extend_threads.o
        10          0          0          0          0         76   h1_final_threads.o
       118          0          0          0          0        108   h1_free_threads.o
        18          0          0          0          0         84   h1_init_threads.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
       456         48          0          0          0        116   initio_locked.o
        44         10        272          0          0         76   lc_ctype_c.o
        44         10         28          0          0         76   lc_numeric_c.o
         2          0          0          0          0          0   libinit.o
        46          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
        10          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         80   lludiv10.o
       240          0          0          0          0        100   lludivv7m.o
         0          0          0          0          0          0   maybetermalloc2.o
        24          4          0          0          0         84   printf.o
        16          4          0          0          0         76   rt_ctype_table.o
         8          4          0          0          0         68   rt_errno_addr_intlibspace.o
         8          4          0          0          0         68   rt_heap_descriptor_intlibspace.o
         8          4          0          0          0         68   rt_locale_intlibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       104          0          0          0          0         88   setvbuf_locked.o
        64          6          0          0          0         84   snprintf.o
       264          6          0          0          0        160   stdio.o
         0          0          0         12        252          0   stdio_streams.o
        20          0          0          0          0         68   strchr.o
       124          0          0          0          0         88   strcmpv7m_pel.o
         0          0          0          4          0          0   streamlock.o
       150          0          0          0          0         80   strncmp.o
       112          0          0          0          0         88   strtol.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
        16          0          0          0          0         80   term_alloc.o
         2          0          0          0          0         68   use_no_semi.o
        12          0          0          0          0        116   dretinf.o
        86          4          0          0          0        132   f2d.o
       140          4          0          0          0        132   fnaninf.o
        26          0          0          0          0        116   fpinit.o
         4          0          0          0          0        116   printf1.o
         4          0          0          0          0        116   printf2.o
         0          0          0          0          0          0   usenofp.o
        48          0          0          0          0        124   fpclassify.o

    ----------------------------------------------------------------------
     11774        488        575         16        356       8592   Library Totals
        32          4          5          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       332         12         19          0          8        132   FTbotLib.lib
     11090        464        551         16        348       7608   c_w.l
       272          8          0          0          0        728   fz_wm.l
        48          0          0          0          0        124   m_wm.l

    ----------------------------------------------------------------------
     11774        488        575         16        356       8592   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     70192        720       2780        436      39900     441049   Grand Totals
     70192        720       2780         68      39900     441049   ELF Image Totals (compressed)
     70192        720       2780         68          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                72972 (  71.26kB)
    Total RW  Size (RW Data + ZI Data)             40336 (  39.39kB)
    Total ROM Size (Code + RO Data + RW Data)      73040 (  71.33kB)

==============================================================================

