Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    initmain.o(.text.concatenate4Strings) refers to h1_alloc_threads.o(.text) for malloc
    initmain.o(.text.concatenate4Strings) refers to exit.o(.text) for exit
    initmain.o(.ARM.exidx.text.concatenate4Strings) refers to initmain.o(.text.concatenate4Strings) for [Anonymous Symbol]
    initmain.o(.text.mainThread) refers to initmain.o(.rodata.str1.1) for .L.str.1
    initmain.o(.text.mainThread) refers to initmain.o(.text.concatenate4Strings) for concatenate4Strings
    initmain.o(.ARM.exidx.text.mainThread) refers to initmain.o(.text.mainThread) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32f7xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to main.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to main.o(.text.MX_DMA_Init) for MX_DMA_Init
    main.o(.text.main) refers to main.o(.text.MX_USART6_UART_Init) for MX_USART6_UART_Init
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to initmain.o(.text.mainThread) for mainThread
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for HAL_PWREx_EnableOverDrive
    main.o(.text.SystemClock_Config) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.text.MX_GPIO_Init) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    main.o(.text.MX_GPIO_Init) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    main.o(.ARM.exidx.text.MX_GPIO_Init) refers to main.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    main.o(.text.MX_DMA_Init) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    main.o(.text.MX_DMA_Init) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    main.o(.ARM.exidx.text.MX_DMA_Init) refers to main.o(.text.MX_DMA_Init) for [Anonymous Symbol]
    main.o(.text.MX_USART6_UART_Init) refers to main.o(.bss.huart6) for huart6
    main.o(.text.MX_USART6_UART_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    main.o(.text.MX_USART6_UART_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.ARM.exidx.text.MX_USART6_UART_Init) refers to main.o(.text.MX_USART6_UART_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.text.HAL_TIM_PeriodElapsedCallback) refers to stm32f7xx_hal.o(.text.HAL_IncTick) for HAL_IncTick
    main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler) refers to stm32f7xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.TIM6_DAC_IRQHandler) refers to stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler) refers to main.o(.bss.hdma_usart6_rx) for hdma_usart6_rx
    stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.DMA2_Stream1_IRQHandler) refers to stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler) refers to main.o(.bss.hdma_usart6_tx) for hdma_usart6_tx
    stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for HAL_DMA_IRQHandler
    stm32f7xx_it.o(.ARM.exidx.text.DMA2_Stream6_IRQHandler) refers to stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.$Sub$$_fp_init) refers to fpinit.o(x$fpl$fpinit) for $Super$$_fp_init
    rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init) refers to rtx_lib.o(.text.$Sub$$_fp_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxThreadBeforeFree) refers to rtx_lib.o(.text.user_perthread_libspace_free) for user_perthread_libspace_free
    rtx_lib.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_lib.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_lib.o(.text.user_perthread_libspace_free) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.ARM.exidx.text.user_perthread_libspace_free) refers to rtx_lib.o(.text.user_perthread_libspace_free) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f7xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f7xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f7xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_DeInit) refers to stm32f7xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f7xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f7xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_IncTick) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_IncTick) refers to stm32f7xx_hal.o(.bss.uwTick) for uwTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f7xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTick) refers to stm32f7xx_hal.o(.bss.uwTick) for uwTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f7xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f7xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_Delay) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal.o(.text.HAL_Delay) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f7xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f7xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f7xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f7xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f7xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f7xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f7xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f7xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableFMCMemorySwapping) refers to stm32f7xx_hal.o(.text.HAL_EnableFMCMemorySwapping) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableFMCMemorySwapping) refers to stm32f7xx_hal.o(.text.HAL_DisableFMCMemorySwapping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f7xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f7xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f7xx_hal_dma.o(.text.DMA_CheckFifoParam) for DMA_CheckFifoParam
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam) refers to stm32f7xx_hal_dma.o(.text.DMA_CheckFifoParam) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) refers to stm32f7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset) for DMA_CalcBaseAndBitshift.flagBitshiftOffset
    stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift) refers to stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32f7xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig) refers to stm32f7xx_hal_dma.o(.text.DMA_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32f7xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to stm32f7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart) refers to stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) for [Anonymous Symbol]
    stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig) refers to stm32f7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) for [Anonymous Symbol]
    stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory) refers to stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMAError) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for HAL_TIMEx_Break2Callback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for TIM_OC5_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for TIM_OC6_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC5_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC6_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI3_SetConfig) for TIM_TI3_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI4_SetConfig) for TIM_TI4_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI3_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI3_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI4_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI4_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC3_SetConfig) for TIM_OC3_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC4_SetConfig) for TIM_OC4_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC5_SetConfig) for TIM_OC5_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC6_SetConfig) for TIM_OC6_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig) for TIM_OC1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_SetConfig) for TIM_TI2_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) refers to stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.TIM_ITRx_SetConfig) for TIM_ITRx_SetConfig
    stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_ITRx_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_ITRx_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig) for TIM_ETR_SetConfig
    stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage) for TIM_TI1_ConfigInputStage
    stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage) for TIM_TI2_ConfigInputStage
    stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd) for TIM_CCxNChannelCmd
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f7xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState) refers to stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_InitCallbacksToDefault) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32f7xx_hal_uart.o(.text.UART_SetConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_AdvFeatureConfig) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) refers to stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_CheckIdleState) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_LIN_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init) refers to stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_DeInit) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_UnRegisterCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RegisterRxEventCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterRxEventCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterRxEventCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_UnRegisterRxEventCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterRxEventCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback) refers to stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout) refers to stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Receive) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32f7xx_hal_uart.o(.text.UART_TxISR_16BIT) for UART_TxISR_16BIT
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32f7xx_hal_uart.o(.text.UART_TxISR_8BIT) for UART_TxISR_8BIT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT) refers to stm32f7xx_hal_uart.o(.text.UART_TxISR_16BIT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT) refers to stm32f7xx_hal_uart.o(.text.UART_TxISR_8BIT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_RxISR_16BIT) for UART_RxISR_16BIT
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_RxISR_8BIT) for UART_RxISR_8BIT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMATransmitCplt) for UART_DMATransmitCplt
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxHalfCplt) for UART_DMATxHalfCplt
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt) refers to stm32f7xx_hal_uart.o(.text.UART_DMATransmitCplt) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_DMAError) refers to stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer) for UART_EndTxTransfer
    stm32f7xx_hal_uart.o(.text.UART_DMAError) refers to stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAError) refers to stm32f7xx_hal_uart.o(.text.UART_DMAError) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMAReceiveCplt) for UART_DMAReceiveCplt
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxHalfCplt) for UART_DMARxHalfCplt
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DMAPause) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DMAResume) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer) for UART_EndTxTransfer
    stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndTxTransfer) refers to stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer) refers to stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Abort) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxAbortCallback) for UART_DMATxAbortCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxAbortCallback) for UART_DMARxAbortCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for UART_DMATxOnlyAbortCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback) refers to stm32f7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for UART_DMARxOnlyAbortCallback
    stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer) for UART_EndRxTransfer
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.UART_DMAAbortOnError) for UART_DMAAbortOnError
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.UART_EndTransmit_IT) for UART_EndTransmit_IT
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError) refers to stm32f7xx_hal_uart.o(.text.UART_DMAAbortOnError) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndTransmit_IT) refers to stm32f7xx_hal_uart.o(.text.UART_EndTransmit_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ReceiverTimeout_Config) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_EnableReceiverTimeout) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_EnableReceiverTimeout) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DisableReceiverTimeout) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_DisableReceiverTimeout) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnableMuteMode) refers to stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_DisableMuteMode) refers to stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode) refers to stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter) refers to stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver) refers to stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak) refers to stm32f7xx_hal_uart.o(.text.HAL_LIN_SendBreak) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_GetState) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError) refers to stm32f7xx_hal_uart.o(.text.HAL_UART_GetError) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT) refers to stm32f7xx_hal_uart.o(.text.UART_RxISR_16BIT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT) refers to stm32f7xx_hal_uart.o(.text.UART_RxISR_8BIT) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt) refers to stm32f7xx_hal_uart.o(.text.UART_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt) refers to stm32f7xx_hal_uart.o(.text.UART_DMARxHalfCplt) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault) for UART_InitCallbacksToDefault
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_RS485Ex_Init) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32f7xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) for [Anonymous Symbol]
    stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_GetRxEventType) refers to stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_GetRxEventType) for [Anonymous Symbol]
    stm32f7xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f7xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit) refers to stm32f7xx_ll_pwr.o(.text.LL_PWR_DeInit) for [Anonymous Symbol]
    stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for LL_RCC_HSI_SetCalibTrimming
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for LL_RCC_GetAPB1Prescaler
    stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for LL_RCC_GetAPB2Prescaler
    stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource) for LL_RCC_GetUSARTClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSE_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockSource) for LL_RCC_GetUARTClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUARTClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUARTClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource) for LL_RCC_GetI2CClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource) for LL_RCC_GetI2SClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) for RCC_PLLI2S_GetFreqDomain_I2S
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN) for LL_RCC_PLLI2S_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetR) for LL_RCC_PLLI2S_GetR
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_I2S) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource) for LL_RCC_GetLPTIMClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockSource) for LL_RCC_GetSAIClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) for RCC_PLLSAI_GetFreqDomain_SAI
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) for RCC_PLLI2S_GetFreqDomain_SAI
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSAIClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSAIClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN) for LL_RCC_PLLSAI_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetQ) for LL_RCC_PLLSAI_GetQ
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVQ) for LL_RCC_PLLSAI_GetDIVQ
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN) for LL_RCC_PLLI2S_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetQ) for LL_RCC_PLLI2S_GetQ
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetDIVQ) for LL_RCC_PLLI2S_GetDIVQ
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_SAI) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockSource) for LL_RCC_GetSDMMCClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCK48MClockSource) for LL_RCC_GetCK48MClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) for RCC_PLL_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) for RCC_PLLSAI_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSDMMCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSDMMCClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCK48MClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCK48MClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for LL_RCC_PLL_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetQ) for LL_RCC_PLL_GetQ
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN) for LL_RCC_PLLSAI_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetP) for LL_RCC_PLLSAI_GetP
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_48M) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockSource) for LL_RCC_GetRNGClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) for RCC_PLL_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) for RCC_PLLSAI_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRNGClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRNGClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockSource) for LL_RCC_GetCECClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCECClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCECClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource) for LL_RCC_GetUSBClockSource
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M) for RCC_PLL_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M) for RCC_PLLSAI_GetFreqDomain_48M
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLTDCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLTDCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) for RCC_PLLSAI_GetFreqDomain_LTDC
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLTDCClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLTDCClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN) for LL_RCC_PLLSAI_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetR) for LL_RCC_PLLSAI_GetR
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVR) for LL_RCC_PLLSAI_GetDIVR
    stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.rodata.aRCC_PLLSAIDIVRPrescTable) for aRCC_PLLSAIDIVRPrescTable
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_LTDC) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSPDIFRXClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSPDIFRXClockFreq) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) for RCC_PLLI2S_GetFreqDomain_SPDIFRX
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSPDIFRXClockFreq) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSPDIFRXClockFreq) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN) for LL_RCC_PLLI2S_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetP) for LL_RCC_PLLI2S_GetP
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for LL_RCC_PLL_GetN
    stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetP) for LL_RCC_PLL_GetP
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetN) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetP) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetP) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetN) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetDIVQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetP) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetP) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetR) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetR) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetDIVR) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVR) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetN) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetDIVQ) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetDIVQ) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetP) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetP) for [Anonymous Symbol]
    stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetR) refers to stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetR) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_Init1msTick) refers to stm32f7xx_ll_utils.o(.text.LL_InitTick) for LL_InitTick
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32f7xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_InitTick) refers to stm32f7xx_ll_utils.o(.text.LL_InitTick) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32f7xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32f7xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling) for LL_PWR_GetRegulVoltageScaling
    stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_PWR_IsEnabledOverDriveMode) for LL_PWR_IsEnabledOverDriveMode
    stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PWR_GetRegulVoltageScaling) refers to stm32f7xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PWR_IsEnabledOverDriveMode) refers to stm32f7xx_ll_utils.o(.text.LL_PWR_IsEnabledOverDriveMode) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to stm32f7xx_ll_utils.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to stm32f7xx_ll_utils.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLLSAI_IsReady) for LL_RCC_PLLSAI_IsReady
    stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLLI2S_IsReady) for LL_RCC_PLLI2S_IsReady
    stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy) refers to stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency) refers to stm32f7xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency) for LL_SetFlashLatency
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for LL_RCC_SetAPB2Prescaler
    stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for LL_RCC_HSE_EnableBypass
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for LL_RCC_HSE_DisableBypass
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLLSAI_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLLSAI_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLLI2S_IsReady) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLLI2S_IsReady) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler) refers to stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f7xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for HAL_RCCEx_PeriphCLKConfig
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.text.Error_Handler) for Error_Handler
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.bss.hdma_usart6_rx) for hdma_usart6_rx
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_Init) for HAL_DMA_Init
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.bss.hdma_usart6_tx) for hdma_usart6_tx
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_dma.o(.text.HAL_DMA_DeInit) for HAL_DMA_DeInit
    stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for HAL_RCC_GetClockConfig
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for HAL_TIM_Base_Start_IT
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f7xx_hal_timebase_tim.o(.text.HAL_SuspendTick) refers to stm32f7xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f7xx_hal_timebase_tim.o(.text.HAL_ResumeTick) refers to stm32f7xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f7xx_hal_timebase_tim.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    startup_stm32f746xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(RESET) refers to startup_stm32f746xx.o(STACK) for __initial_sp
    startup_stm32f746xx.o(RESET) refers to startup_stm32f746xx.o(.text) for Reset_Handler
    startup_stm32f746xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler) for TIM6_DAC_IRQHandler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler) for DMA2_Stream1_IRQHandler
    startup_stm32f746xx.o(RESET) refers to stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler) for DMA2_Stream6_IRQHandler
    startup_stm32f746xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f746xx.o(.text) refers to system_stm32f7xx.o(.text.SystemInit) for SystemInit
    startup_stm32f746xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f746xx.o(.text) refers to startup_stm32f746xx.o(HEAP) for Heap_Mem
    startup_stm32f746xx.o(.text) refers to startup_stm32f746xx.o(STACK) for Stack_Mem
    system_stm32f7xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f7xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f7xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f7xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f7xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for osRtxKernelBeforeInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for svcRtxKernelProtect
    rtx_kernel.o(.ARM.exidx.text.osKernelProtect) refers to rtx_kernel.o(.text.osKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for svcRtxKernelDestroyClass
    rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.osKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_lib.o(.text.osRtxThreadBeforeFree) for osRtxThreadBeforeFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadEntry) for osThreadEntry
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for svcRtxThreadGetClass
    rtx_thread.o(.ARM.exidx.text.osThreadGetClass) refers to rtx_thread.o(.text.osThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for svcRtxThreadGetZone
    rtx_thread.o(.ARM.exidx.text.osThreadGetZone) refers to rtx_thread.o(.text.osThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for svcRtxThreadFeedWatchdog
    rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.osThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for svcRtxThreadProtectPrivileged
    rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.osThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for svcRtxThreadSuspendClass
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass) refers to rtx_thread.o(.text.osThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for svcRtxThreadResumeClass
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadResumeClass) refers to rtx_thread.o(.text.osThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone) refers to rtx_thread.o(.text.osThreadTerminateZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for svcRtxThreadSetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.osThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for svcRtxThreadGetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.osThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadEntry) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_5) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_6) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    h1_alloc.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free_threads.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc_threads.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free_threads.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc_threads.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_threads.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_threads.o(.text) for __Heap_Initialize
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_init_threads.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_free_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to rtx_lib.o(.text.$Sub$$_fp_init) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_threads.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f746xx.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_threads.o(.text) for __Heap_Finalize
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    h1_final_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing initmain.o(.text), (0 bytes).
    Removing initmain.o(.ARM.exidx.text.concatenate4Strings), (8 bytes).
    Removing initmain.o(.ARM.exidx.text.mainThread), (8 bytes).
    Removing init_send.o(.text), (0 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_DMA_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_USART6_UART_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stm32f7xx_it.o(.text), (0 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.TIM6_DAC_IRQHandler), (8 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.DMA2_Stream1_IRQHandler), (8 bytes).
    Removing stm32f7xx_it.o(.ARM.exidx.text.DMA2_Stream6_IRQHandler), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (150 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.user_perthread_libspace_free), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing stm32f7xx_hal.o(.text), (0 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_InitTick), (104 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DeInit), (82 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_SetTickFreq), (88 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_Delay), (66 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_EnableCompensationCell), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DisableCompensationCell), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_EnableFMCMemorySwapping), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableFMCMemorySwapping), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DisableFMCMemorySwapping), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableFMCMemorySwapping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ), (50 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.SysTick_Config), (82 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable), (34 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable), (48 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (158 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (32 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority), (118 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority), (58 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (42 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (56 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (42 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive), (56 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (52 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text), (0 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_DeInit), (166 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_Start), (120 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.DMA_SetConfig), (80 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_Start_IT), (184 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort), (216 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (58 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (468 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (154 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (182 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_GetState), (12 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32f7xx_hal_dma.o(.text.HAL_DMA_GetError), (12 bytes).
    Removing stm32f7xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart), (154 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart), (8 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig), (68 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig), (8 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT), (8180 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT), (8 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory), (40 bytes).
    Removing stm32f7xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (604 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (40 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (38 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (80 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (56 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (10 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (210 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (56 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (58 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (110 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (42 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (100 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (100 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (182 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (234 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (310 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit), (552 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (200 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (18 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (18 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (324 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (40 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (486 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (752 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (192 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (80 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (192 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (86 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text), (0 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (150 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start), (238 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (68 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (80 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (370 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (40 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (22 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMAError), (144 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (90 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Init), (132 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (150 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start), (542 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_CCxChannelCmd), (54 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (302 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (648 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (408 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (1086 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (180 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (116 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (440 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Init), (132 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (150 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (542 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (302 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (648 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (408 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (1086 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (440 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Init), (132 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (150 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start), (626 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (266 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (730 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (372 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (1056 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMACaptureCplt), (196 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (116 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (400 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (120 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (112 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (192 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (216 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (216 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (240 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (284 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (112 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (276 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (362 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (324 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (410 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (802 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (442 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (178 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC1_SetConfig), (240 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC1_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC2_SetConfig), (250 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC3_SetConfig), (248 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC3_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC4_SetConfig), (170 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC4_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC5_SetConfig), (160 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC5_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_OC6_SetConfig), (162 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_OC6_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (286 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI1_SetConfig), (278 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI2_SetConfig), (108 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI3_SetConfig), (106 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI3_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI4_SetConfig), (108 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI4_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel), (414 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (378 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (58 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (700 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMATriggerCplt), (40 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (22 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (192 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (58 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart), (700 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (192 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (76 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (442 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_ETR_SetConfig), (52 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (372 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage), (80 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_ConfigInputStage), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_ITRx_SetConfig), (42 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_ITRx_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage), (82 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_TI2_ConfigInputStage), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (44 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro), (128 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig), (290 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (128 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (86 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_GetChannelState), (126 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32f7xx_hal_tim.o(.text.HAL_TIM_DMABurstState), (12 bytes).
    Removing stm32f7xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init), (262 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit), (112 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start), (310 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop), (94 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT), (322 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (106 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (410 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (106 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start), (394 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIM_CCxNChannelCmd), (54 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_CCxNChannelCmd), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop), (200 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT), (492 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT), (322 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA), (802 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt), (180 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN), (110 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA), (310 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start), (394 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop), (200 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT), (492 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT), (322 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA), (802 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (310 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start), (148 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop), (174 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (172 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (198 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent), (174 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (174 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (216 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt), (28 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt), (28 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization), (328 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime), (262 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (70 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5), (92 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState), (12 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState), (82 bytes).
    Removing stm32f7xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text), (0 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_InitCallbacksToDefault), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_AdvFeatureConfig), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_CheckIdleState), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_Init), (190 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_LIN_Init), (244 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_Init), (240 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DeInit), (138 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterCallback), (338 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterCallback), (384 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_UnRegisterCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_RegisterRxEventCallback), (126 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RegisterRxEventCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_UnRegisterRxEventCallback), (104 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_UnRegisterRxEventCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit), (276 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Receive), (420 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_IT), (188 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_TxISR_16BIT), (150 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_TxISR_8BIT), (140 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_IT), (132 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_Start_Receive_IT), (380 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Transmit_DMA), (248 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMATransmitCplt), (124 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMATxHalfCplt), (24 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMAError), (128 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAError), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Receive_DMA), (132 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_Start_Receive_DMA), (284 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DMAPause), (224 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DMAResume), (206 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DMAStop), (272 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_EndTxTransfer), (52 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndTxTransfer), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_EndRxTransfer), (152 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndRxTransfer), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Abort), (426 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit), (182 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive), (296 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_Abort_IT), (512 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMATxAbortCallback), (100 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMARxAbortCallback), (112 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT), (206 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback), (38 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT), (334 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback), (64 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_IRQHandler), (1214 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMAAbortOnError), (38 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_EndTransmit_IT), (68 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_EndTransmit_IT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config), (30 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ReceiverTimeout_Config), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_EnableReceiverTimeout), (94 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_EnableReceiverTimeout), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_DisableReceiverTimeout), (94 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DisableReceiverTimeout), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode), (100 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnableMuteMode), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode), (100 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_DisableMuteMode), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode), (20 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter), (142 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver), (142 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_LIN_SendBreak), (78 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_GetState), (28 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.HAL_UART_GetError), (14 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_RxISR_16BIT), (316 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_RxISR_8BIT), (312 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMAReceiveCplt), (250 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt), (8 bytes).
    Removing stm32f7xx_hal_uart.o(.text.UART_DMARxHalfCplt), (58 bytes).
    Removing stm32f7xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init), (228 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_RS485Ex_Init), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set), (86 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_MultiProcessorEx_AddressLength_Set), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle), (548 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT), (160 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA), (160 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA), (8 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.text.HAL_UARTEx_GetRxEventType), (12 bytes).
    Removing stm32f7xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_GetRxEventType), (8 bytes).
    Removing stm32f7xx_ll_pwr.o(.text), (0 bytes).
    Removing stm32f7xx_ll_pwr.o(.text.LL_PWR_DeInit), (38 bytes).
    Removing stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit), (8 bytes).
    Removing stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f7xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f7xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_DeInit), (206 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_Enable), (18 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming), (30 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq), (54 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_GetSystemClockFreq), (86 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq), (38 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq), (36 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq), (36 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq), (510 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSE_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq), (568 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUARTClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUARTClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUARTClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq), (446 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq), (84 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_I2S), (108 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_I2S), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq), (148 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockFreq), (226 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSAIClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSAIClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSAIClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_SAI), (134 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_SAI), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SAI), (130 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_SAI), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockFreq), (132 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSDMMCClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSDMMCClockSource), (26 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSDMMCClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCK48MClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCK48MClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_48M), (118 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_48M), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_48M), (124 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_48M), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockFreq), (78 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRNGClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetRNGClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRNGClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockFreq), (78 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCECClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetCECClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCECClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq), (78 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource), (22 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetLTDCClockFreq), (32 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLTDCClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLSAI_GetFreqDomain_LTDC), (140 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLSAI_GetFreqDomain_LTDC), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSPDIFRXClockFreq), (32 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSPDIFRXClockFreq), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX), (124 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLLI2S_GetFreqDomain_SPDIFRX), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS), (124 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetN), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetN), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetP), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetP), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLL_GetQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetN), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetN), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetDIVQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetP), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetP), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetR), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetR), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLSAI_GetDIVR), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLSAI_GetDIVR), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetN), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetN), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetDIVQ), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetDIVQ), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetP), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetP), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.text.LL_RCC_PLLI2S_GetR), (16 bytes).
    Removing stm32f7xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLLI2S_GetR), (8 bytes).
    Removing stm32f7xx_ll_rcc.o(.rodata.aRCC_PLLSAIDIVRPrescTable), (4 bytes).
    Removing stm32f7xx_ll_utils.o(.text), (0 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_Init1msTick), (20 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_InitTick), (54 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_InitTick), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_mDelay), (74 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_SetSystemCoreClock), (20 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_SetFlashLatency), (556 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PWR_GetRegulVoltageScaling), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_PWR_IsEnabledOverDriveMode), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PWR_IsEnabledOverDriveMode), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_FLASH_SetLatency), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_FLASH_GetLatency), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (106 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.UTILS_PLL_IsBusy), (56 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency), (66 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSI_Enable), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS), (54 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (182 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (126 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_HSE_Enable), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLLSAI_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLLSAI_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLLI2S_IsReady), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLLI2S_IsReady), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_PLL_Enable), (18 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_SetSysClkSource), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing stm32f7xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler), (28 bytes).
    Removing stm32f7xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.text), (0 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32f7xx_hal_msp.o(.text.HAL_UART_MspDeInit), (76 bytes).
    Removing stm32f7xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.text), (0 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.text.HAL_SuspendTick), (20 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.text.HAL_ResumeTick), (20 bytes).
    Removing stm32f7xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing system_stm32f7xx.o(.text), (0 bytes).
    Removing system_stm32f7xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f7xx.o(.text.SystemCoreClockUpdate), (302 bytes).
    Removing system_stm32f7xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelProtect), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelDestroyClass), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelDestroyClass), (6 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelProtect), (6 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (48 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBeforeFree), (2 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetClass), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetZone), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetZone), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFeedWatchdog), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.osThreadProtectPrivileged), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspendClass), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspendClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResumeClass), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResumeClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminateZone), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetAffinityMask), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetAffinityMask), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEntry), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (112 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFeedWatchdog), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadProtectPrivileged), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetAffinityMask), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetAffinityMask), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_2), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_4), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_5), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_5), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (316 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (166 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (108 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).

1345 unused section(s) (total 81801 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    InitMain.c                               0x00000000   Number         0  initmain.o ABSOLUTE
    RTE/Device/STM32F746ZGTx/startup_stm32f746xx.s 0x00000000   Number         0  startup_stm32f746xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    init_send.c                              0x00000000   Number         0  init_send.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32f7xx_hal.c                          0x00000000   Number         0  stm32f7xx_hal.o ABSOLUTE
    stm32f7xx_hal_cortex.c                   0x00000000   Number         0  stm32f7xx_hal_cortex.o ABSOLUTE
    stm32f7xx_hal_dma.c                      0x00000000   Number         0  stm32f7xx_hal_dma.o ABSOLUTE
    stm32f7xx_hal_dma_ex.c                   0x00000000   Number         0  stm32f7xx_hal_dma_ex.o ABSOLUTE
    stm32f7xx_hal_gpio.c                     0x00000000   Number         0  stm32f7xx_hal_gpio.o ABSOLUTE
    stm32f7xx_hal_msp.c                      0x00000000   Number         0  stm32f7xx_hal_msp.o ABSOLUTE
    stm32f7xx_hal_pwr.c                      0x00000000   Number         0  stm32f7xx_hal_pwr.o ABSOLUTE
    stm32f7xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f7xx_hal_pwr_ex.o ABSOLUTE
    stm32f7xx_hal_rcc.c                      0x00000000   Number         0  stm32f7xx_hal_rcc.o ABSOLUTE
    stm32f7xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f7xx_hal_rcc_ex.o ABSOLUTE
    stm32f7xx_hal_tim.c                      0x00000000   Number         0  stm32f7xx_hal_tim.o ABSOLUTE
    stm32f7xx_hal_tim_ex.c                   0x00000000   Number         0  stm32f7xx_hal_tim_ex.o ABSOLUTE
    stm32f7xx_hal_timebase_tim.c             0x00000000   Number         0  stm32f7xx_hal_timebase_tim.o ABSOLUTE
    stm32f7xx_hal_uart.c                     0x00000000   Number         0  stm32f7xx_hal_uart.o ABSOLUTE
    stm32f7xx_hal_uart_ex.c                  0x00000000   Number         0  stm32f7xx_hal_uart_ex.o ABSOLUTE
    stm32f7xx_it.c                           0x00000000   Number         0  stm32f7xx_it.o ABSOLUTE
    stm32f7xx_ll_pwr.c                       0x00000000   Number         0  stm32f7xx_ll_pwr.o ABSOLUTE
    stm32f7xx_ll_rcc.c                       0x00000000   Number         0  stm32f7xx_ll_rcc.o ABSOLUTE
    stm32f7xx_ll_utils.c                     0x00000000   Number         0  stm32f7xx_ll_utils.o ABSOLUTE
    system_stm32f7xx.c                       0x00000000   Number         0  system_stm32f7xx.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorSVC                            0x00000006   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    TCB_ZONE_OFS                             0x00000044   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      456  startup_stm32f746xx.o(RESET)
    !!!main                                  0x080001c8   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001d0   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000204   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000220   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800023c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800023e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x08000242   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800024a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800024a   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x0800024c   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800024e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800024e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800024e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800024e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800024e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x0800024e   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x08000252   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000252   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000254   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000254   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000254   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800025a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000262   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000266   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000266   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800026e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000270   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000270   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000274   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0800027c   Number         0  startup_stm32f746xx.o(.text)
    .text                                    0x0800027c   Section       64  startup_stm32f746xx.o(.text)
    [Anonymous Symbol]                       0x080002bc   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x080002e4   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x080002f4   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x08000306   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x0800031c   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x08000336   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x08000338   Number         0  irq_armv7m.o(.text)
    AlignUp                                  0x08000381   Thumb Code    10  h1_alloc_threads.o(.text)
    .text                                    0x08000380   Section        0  h1_alloc_threads.o(.text)
    Heap1_SizeAdjust                         0x0800038b   Thumb Code     6  h1_alloc_threads.o(.text)
    .text                                    0x08000426   Section      240  lludivv7m.o(.text)
    .text                                    0x08000516   Section        0  exit.o(.text)
    .text                                    0x08000528   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080005b2   Section       68  rt_memclr.o(.text)
    .text                                    0x080005f6   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000644   Section        0  heapauxi.o(.text)
    .text                                    0x0800064a   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .text                                    0x08000654   Section        0  hguard.o(.text)
    .text                                    0x08000658   Section        0  init_alloc.o(.text)
    .text                                    0x080006e2   Section        0  h1_init_threads.o(.text)
    .text                                    0x080006f4   Section        0  h1_free_threads.o(.text)
    .text                                    0x0800076a   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080007d0   Section        8  libspace.o(.text)
    AlignUpOffset                            0x080007d9   Thumb Code    14  h1_extend_threads.o(.text)
    .text                                    0x080007d8   Section        0  maybetermalloc2.o(.text)
    .text                                    0x080007d8   Section        0  h1_extend_threads.o(.text)
    .text                                    0x0800082a   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x08000838   Section        0  sys_exit.o(.text)
    .text                                    0x08000844   Section        2  use_no_semi.o(.text)
    .text                                    0x08000846   Section        0  indicate_semi.o(.text)
    .text                                    0x08000846   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000890   Section        0  term_alloc.o(.text)
    .text                                    0x080008a0   Section        0  defsig_exit.o(.text)
    .text                                    0x080008ac   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x080008fc   Section        0  h1_final_threads.o(.text)
    .text                                    0x08000906   Section        0  defsig_general.o(.text)
    .text                                    0x08000938   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08000948   Section        0  rtx_lib.o(.text.$Sub$$_fp_init)
    [Anonymous Symbol]                       0x08000960   Section        0  stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler)
    [Anonymous Symbol]                       0x08000970   Section        0  stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler)
    DMA_CalcBaseAndBitshift                  0x08000981   Thumb Code    86  stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    [Anonymous Symbol]                       0x08000980   Section        0  stm32f7xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift)
    DMA_CheckFifoParam                       0x080009d9   Thumb Code   222  stm32f7xx_hal_dma.o(.text.DMA_CheckFifoParam)
    [Anonymous Symbol]                       0x080009d8   Section        0  stm32f7xx_hal_dma.o(.text.DMA_CheckFifoParam)
    [Anonymous Symbol]                       0x08000ab8   Section        0  main.o(.text.Error_Handler)
    [Anonymous Symbol]                       0x08000ac0   Section        0  stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    [Anonymous Symbol]                       0x08000dd0   Section        0  stm32f7xx_hal_dma.o(.text.HAL_DMA_Init)
    [Anonymous Symbol]                       0x08000f30   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08001320   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x08001350   Section        0  stm32f7xx_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08001360   Section        0  stm32f7xx_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x08001380   Section        0  stm32f7xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x080013a8   Section        0  stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08001488   Section        0  stm32f7xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x080014d0   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x080014e0   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x08001510   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08001520   Section        0  stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive)
    [Anonymous Symbol]                       0x080015e0   Section        0  stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig)
    [Anonymous Symbol]                       0x08001e40   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x080020a0   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    [Anonymous Symbol]                       0x080020f8   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x08002108   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x08002130   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    [Anonymous Symbol]                       0x08002158   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08002240   Section        0  stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08002930   Section        0  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    [Anonymous Symbol]                       0x08002938   Section        0  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    [Anonymous Symbol]                       0x08002940   Section        0  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    [Anonymous Symbol]                       0x08002948   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    [Anonymous Symbol]                       0x080029d0   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    [Anonymous Symbol]                       0x080029d8   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    [Anonymous Symbol]                       0x08002ad8   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    [Anonymous Symbol]                       0x08002ae0   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    [Anonymous Symbol]                       0x08002d98   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    [Anonymous Symbol]                       0x08002da0   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    [Anonymous Symbol]                       0x08002da8   Section        0  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    [Anonymous Symbol]                       0x08002dd0   Section        0  stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    [Anonymous Symbol]                       0x08002dd8   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback)
    [Anonymous Symbol]                       0x08002de8   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback)
    [Anonymous Symbol]                       0x08002df0   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback)
    [Anonymous Symbol]                       0x08002df8   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback)
    [Anonymous Symbol]                       0x08002e00   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback)
    [Anonymous Symbol]                       0x08002e08   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_Init)
    [Anonymous Symbol]                       0x08002ec8   Section        0  stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit)
    [Anonymous Symbol]                       0x08003048   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback)
    [Anonymous Symbol]                       0x08003050   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback)
    [Anonymous Symbol]                       0x08003058   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback)
    [Anonymous Symbol]                       0x08003060   Section        0  stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback)
    IsIrqMasked                              0x08003069   Thumb Code    22  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08003068   Section        0  rtx_thread.o(.text.IsIrqMasked)
    MX_DMA_Init                              0x08003081   Thumb Code    76  main.o(.text.MX_DMA_Init)
    [Anonymous Symbol]                       0x08003080   Section        0  main.o(.text.MX_DMA_Init)
    MX_GPIO_Init                             0x080030d1   Thumb Code   156  main.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x080030d0   Section        0  main.o(.text.MX_GPIO_Init)
    MX_USART6_UART_Init                      0x08003171   Thumb Code    68  main.o(.text.MX_USART6_UART_Init)
    [Anonymous Symbol]                       0x08003170   Section        0  main.o(.text.MX_USART6_UART_Init)
    MessageQueueGet                          0x080031b5   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x080031b4   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x080031f5   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x080031f4   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x0800324d   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0800324c   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    NVIC_EncodePriority                      0x08003269   Thumb Code   108  stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x08003268   Section        0  stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x080032d8   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x080032e8   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08003328   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08003330   Section        0  os_systick.o(.text.OS_Tick_Setup)
    OUTLINED_FUNCTION_0                      0x080033af   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x080033ae   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x080033bb   Thumb Code    16  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x080033ba   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x080033cb   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x080033ca   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x080033d7   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x080033d6   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x080033dd   Thumb Code     6  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x080033dc   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x080033e8   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x080034a8   Section        0  system_stm32f7xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080034c0   Section        0  stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler)
    [Anonymous Symbol]                       0x080034d0   Section        0  stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig)
    ThreadFlagsCheck                         0x0800366b   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x0800366a   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x080036d1   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x080036d0   Section        0  rtx_timer.o(.text.TimerInsert)
    __arm_cp.10_0                            0x08003714   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08003718   Section        0  stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig)
    [Anonymous Symbol]                       0x08003860   Section        0  stm32f7xx_hal_uart.o(.text.UART_CheckIdleState)
    [Anonymous Symbol]                       0x080038d0   Section        0  stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault)
    [Anonymous Symbol]                       0x08003958   Section        0  stm32f7xx_hal_uart.o(.text.UART_SetConfig)
    [Anonymous Symbol]                       0x08003e38   Section        0  stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout)
    __NVIC_EnableIRQ                         0x08003fa1   Thumb Code    42  stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08003fa0   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x08003fd1   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x08003fd0   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriority                       0x08003fe1   Thumb Code    58  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08003fe0   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x08004021   Thumb Code    60  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08004020   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    __tagsym$$used.1                         0x08004060   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08004060   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08004080   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08004080   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x08004098   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08004098   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080040d0   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080040d0   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080040f0   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x080040f8   Section        0  initmain.o(.text.concatenate4Strings)
    [Anonymous Symbol]                       0x08004238   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08004348   Section        0  initmain.o(.text.mainThread)
    [Anonymous Symbol]                       0x08004370   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x08004398   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_1                             0x0800439c   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x080043a0   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x080043c8   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080043cc   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x080043ec   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080043f0   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.6_0                             0x0800445c   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08004460   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.5_0                             0x080044dc   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x080044e0   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.5_0                             0x08004500   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08004504   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.8_0                             0x08004524   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08004528   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x08004548   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x0800454c   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.6_0                             0x0800456c   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08004570   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x080045a0   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x080045a8   Section        0  rtx_kernel.o(.text.osRtxKernelBeforeInit)
    [Anonymous Symbol]                       0x080045aa   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x080045ae   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800461c   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0800465e   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08004694   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x080046ce   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08004718   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x08004751   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08004750   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080047fc   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x0800481c   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x08004820   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08004868   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x080048b4   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x08004930   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08004958   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x080049c4   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x080049c8   Section        0  rtx_lib.o(.text.osRtxThreadBeforeFree)
    osRtxThreadBlock                         0x080049d9   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x080049d8   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08004a0d   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08004a0c   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08004a88   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08004ac4   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08004b10   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08004b30   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x08004b85   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08004b84   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.16_0                            0x08004bd8   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08004bdc   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08004bfa   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08004c0c   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08004c38   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08004c4c   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08004c73   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08004c72   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08004c9c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08004cac   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08004cc0   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.18_1                            0x08004cf0   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08004cf4   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x08004d10   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08004d14   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.12_0                            0x08004d4c   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08004d50   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08004d84   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08004df4   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08004df8   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x08004e10   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x08004e14   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x08004e18   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08004e39   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08004e38   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08004ea4   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    osThreadEntry                            0x08004ea9   Thumb Code     6  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x08004ea8   Section        0  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x08004eb0   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.40_0                            0x08004eb8   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08004ebc   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.20_0                            0x08004ee4   Number         4  rtx_thread.o(.text.osThreadNew)
    os_kernel_is_active                      0x08004ee9   Thumb Code    54  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08004ee8   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    svcRtxKernelGetState                     0x08004f21   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08004f20   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x08004f28   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x08004f2d   Thumb Code   256  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08004f2c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.25_0                            0x0800502c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.25_2                            0x08005030   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08005035   Thumb Code   104  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08005034   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_0                            0x0800509c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_1                            0x080050a0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_2                            0x080050a4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_3                            0x080050a8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x080050ad   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x080050ac   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x08005174   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x08005179   Thumb Code   280  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08005178   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x08005290   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x08005294   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08005299   Thumb Code   168  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08005298   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08005341   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08005340   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x080053cc   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x080053d1   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x080053d0   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08005481   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08005480   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.9_0                             0x080054e4   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x080054e9   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080054e8   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x08005598   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x0800559d   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x0800559c   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.71_0                            0x080055e4   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x080055e9   Thumb Code   484  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x080055e8   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_0                            0x080057cc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_1                            0x080057d0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_2                            0x080057d4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_3                            0x080057d8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_4                            0x080057dc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_5                            0x080057e0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    user_perthread_libspace_free             0x080057e9   Thumb Code    72  rtx_lib.o(.text.user_perthread_libspace_free)
    [Anonymous Symbol]                       0x080057e8   Section        0  rtx_lib.o(.text.user_perthread_libspace_free)
    $v0                                      0x08005830   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x08005830   Section       26  fpinit.o(x$fpl$fpinit)
    __tagsym$$used.4                         0x0800584c   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x080058bc   Number         0  rtx_lib.o(.rodata)
    DMA_CalcBaseAndBitshift.flagBitshiftOffset 0x0800590c   Data           8  stm32f7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset)
    [Anonymous Symbol]                       0x0800590c   Section        0  stm32f7xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset)
    os_idle_thread_attr                      0x08005918   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08005918   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x0800593c   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x0800593c   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08005954   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08005954   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x08005978   Data           9  initmain.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005978   Section        0  initmain.o(.rodata.str1.1)
    .L.str.1                                 0x08005981   Data           8  initmain.o(.rodata.str1.1)
    .L.str.2                                 0x08005989   Data           3  initmain.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800598c   Section        0  rtx_kernel.o(.rodata.str1.4)
    Heap_Mem                                 0x20000000   Data         512  startup_stm32f746xx.o(HEAP)
    HEAP                                     0x20000000   Section      512  startup_stm32f746xx.o(HEAP)
    Stack_Mem                                0x20000200   Data        1024  startup_stm32f746xx.o(STACK)
    STACK                                    0x20000200   Section     1024  startup_stm32f746xx.o(STACK)
    __initial_sp                             0x20000600   Data           0  startup_stm32f746xx.o(STACK)
    .bss                                     0x200100b0   Section       96  libspace.o(.bss)
    os_isr_queue                             0x20010300   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20010300   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20010340   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x20018340   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20018340   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x20018344   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x20018344   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x20018354   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x20018534   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20018534   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20018568   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20018568   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200185b8   Data          80  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200185b8   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20018608   Data          80  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20018658   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20018658   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20018858   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20018858   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20018a58   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20018a58   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi5$EXTD16$VFPS$VFMA$PE$PLD8$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$WCHAR32$ENUMINT$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000001c8   Number         0  startup_stm32f746xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f746xx.o(RESET)
    __Vectors_End                            0x080001c8   Data           0  startup_stm32f746xx.o(RESET)
    __main                                   0x080001c9   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001d1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001d1   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001d1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001df   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000205   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000221   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800023d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800023f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_heap_2                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_alloca_1                   0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_rand_1                     0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_return                     0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800024b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x0800024d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800024f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800024f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x0800024f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x0800024f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800024f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800024f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_entry                               0x08000255   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000255   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000255   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800025b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000263   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000267   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000267   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800026f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000271   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000271   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000275   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800027d   Thumb Code     8  startup_stm32f746xx.o(.text)
    NMI_Handler                              0x08000285   Thumb Code     2  startup_stm32f746xx.o(.text)
    HardFault_Handler                        0x08000287   Thumb Code     2  startup_stm32f746xx.o(.text)
    MemManage_Handler                        0x08000289   Thumb Code     2  startup_stm32f746xx.o(.text)
    BusFault_Handler                         0x0800028b   Thumb Code     2  startup_stm32f746xx.o(.text)
    UsageFault_Handler                       0x0800028d   Thumb Code     2  startup_stm32f746xx.o(.text)
    DebugMon_Handler                         0x08000291   Thumb Code     2  startup_stm32f746xx.o(.text)
    ADC_IRQHandler                           0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_RX0_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_RX1_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_SCE_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN1_TX_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_RX0_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_RX1_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_SCE_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CAN2_TX_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    CEC_IRQHandler                           0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DCMI_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2D_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    ETH_IRQHandler                           0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    ETH_WKUP_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI0_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI15_10_IRQHandler                     0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI1_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI2_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI3_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI4_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    EXTI9_5_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    FLASH_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    FMC_IRQHandler                           0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    FPU_IRQHandler                           0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C1_ER_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C1_EV_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C2_ER_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C2_EV_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C3_ER_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C3_EV_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C4_ER_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    I2C4_EV_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    LPTIM1_IRQHandler                        0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    LTDC_ER_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    LTDC_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_FS_IRQHandler                        0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_IRQHandler                        0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    PVD_IRQHandler                           0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    QUADSPI_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    RCC_IRQHandler                           0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    RNG_IRQHandler                           0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    RTC_Alarm_IRQHandler                     0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    RTC_WKUP_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SAI1_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SAI2_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SDMMC1_IRQHandler                        0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPDIF_RX_IRQHandler                      0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI1_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI2_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI3_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI4_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI5_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    SPI6_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_CC_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM2_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM3_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM4_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM5_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM7_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_CC_IRQHandler                       0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART4_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART5_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART7_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    UART8_IRQHandler                         0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART1_IRQHandler                        0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART2_IRQHandler                        0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART3_IRQHandler                        0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    USART6_IRQHandler                        0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    WWDG_IRQHandler                          0x08000297   Thumb Code     0  startup_stm32f746xx.o(.text)
    __user_initial_stackheap                 0x08000299   Thumb Code     0  startup_stm32f746xx.o(.text)
    SVC_Handler                              0x080002bd   Thumb Code   152  irq_armv7m.o(.text)
    PendSV_Handler                           0x08000355   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x08000365   Thumb Code    16  irq_armv7m.o(.text)
    malloc_internal$concurrent               0x08000391   Thumb Code   130  h1_alloc_threads.o(.text)
    malloc                                   0x08000413   Thumb Code    20  h1_alloc_threads.o(.text)
    __aeabi_uldivmod                         0x08000427   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x08000427   Thumb Code   240  lludivv7m.o(.text)
    exit                                     0x08000517   Thumb Code    18  exit.o(.text)
    __aeabi_memcpy                           0x08000529   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000529   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0800058f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x080005b3   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080005b3   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x080005b7   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080005f7   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080005f7   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080005f7   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080005fb   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x08000645   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x08000647   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000649   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_descriptor                     0x0800064b   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    __use_no_heap                            0x08000655   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x08000657   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08000659   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x0800065b   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x0800065d   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x0800067f   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x08000685   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x080006e3   Thumb Code    14  h1_init_threads.o(.text)
    __Heap_DescSize                          0x080006f1   Thumb Code     4  h1_init_threads.o(.text)
    free_internal$concurrent                 0x080006f5   Thumb Code    98  h1_free_threads.o(.text)
    free                                     0x08000757   Thumb Code    20  h1_free_threads.o(.text)
    __aeabi_memcpy4                          0x0800076b   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0800076b   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0800076b   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080007b3   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_libspace                          0x080007d1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080007d1   Thumb Code     0  libspace.o(.text)
    _maybe_terminate_alloc                   0x080007d9   Thumb Code     0  maybetermalloc2.o(.text)
    __Heap_ProvideMemory                     0x080007e7   Thumb Code    68  h1_extend_threads.o(.text)
    __rt_SIGRTMEM                            0x0800082b   Thumb Code    14  defsig_rtmem_outer.o(.text)
    _sys_exit                                0x08000839   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000845   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000845   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000847   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x08000847   Thumb Code    74  sys_stackheap_outer.o(.text)
    _terminate_alloc                         0x08000891   Thumb Code    16  term_alloc.o(.text)
    __sig_exit                               0x080008a1   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTMEM_inner                      0x080008ad   Thumb Code    22  defsig_rtmem_inner.o(.text)
    __Heap_Finalize                          0x080008fd   Thumb Code    10  h1_final_threads.o(.text)
    __default_signal_display                 0x08000907   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x08000939   Thumb Code    14  sys_wrch.o(.text)
    _fp_init                                 0x08000949   Thumb Code    22  rtx_lib.o(.text.$Sub$$_fp_init)
    DMA2_Stream1_IRQHandler                  0x08000961   Thumb Code    16  stm32f7xx_it.o(.text.DMA2_Stream1_IRQHandler)
    DMA2_Stream6_IRQHandler                  0x08000971   Thumb Code    16  stm32f7xx_it.o(.text.DMA2_Stream6_IRQHandler)
    Error_Handler                            0x08000ab9   Thumb Code     6  main.o(.text.Error_Handler)
    HAL_DMA_IRQHandler                       0x08000ac1   Thumb Code   780  stm32f7xx_hal_dma.o(.text.HAL_DMA_IRQHandler)
    HAL_DMA_Init                             0x08000dd1   Thumb Code   346  stm32f7xx_hal_dma.o(.text.HAL_DMA_Init)
    HAL_GPIO_Init                            0x08000f31   Thumb Code  1004  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GPIO_WritePin                        0x08001321   Thumb Code    42  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    HAL_GetTick                              0x08001351   Thumb Code    12  stm32f7xx_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x08001361   Thumb Code    26  stm32f7xx_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x08001381   Thumb Code    38  stm32f7xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x080013a9   Thumb Code   224  stm32f7xx_hal_timebase_tim.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08001489   Thumb Code    66  stm32f7xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x080014d1   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x080014e1   Thumb Code    46  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x08001511   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_PWREx_EnableOverDrive                0x08001521   Thumb Code   190  stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive)
    HAL_RCCEx_PeriphCLKConfig                0x080015e1   Thumb Code  2144  stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig)
    HAL_RCC_ClockConfig                      0x08001e41   Thumb Code   602  stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetClockConfig                   0x080020a1   Thumb Code    84  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    HAL_RCC_GetHCLKFreq                      0x080020f9   Thumb Code    12  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetPCLK1Freq                     0x08002109   Thumb Code    34  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    HAL_RCC_GetPCLK2Freq                     0x08002131   Thumb Code    34  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    HAL_RCC_GetSysClockFreq                  0x08002159   Thumb Code   230  stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08002241   Thumb Code  1774  stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_TIMEx_Break2Callback                 0x08002931   Thumb Code     8  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    HAL_TIMEx_BreakCallback                  0x08002939   Thumb Code     8  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    HAL_TIMEx_CommutCallback                 0x08002941   Thumb Code     8  stm32f7xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    HAL_TIM_Base_Init                        0x08002949   Thumb Code   132  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    HAL_TIM_Base_MspInit                     0x080029d1   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_MspInit)
    HAL_TIM_Base_Start_IT                    0x080029d9   Thumb Code   250  stm32f7xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    HAL_TIM_IC_CaptureCallback               0x08002ad9   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    HAL_TIM_IRQHandler                       0x08002ae1   Thumb Code   692  stm32f7xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    HAL_TIM_OC_DelayElapsedCallback          0x08002d99   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    HAL_TIM_PWM_PulseFinishedCallback        0x08002da1   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    HAL_TIM_PeriodElapsedCallback            0x08002da9   Thumb Code    34  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    HAL_TIM_TriggerCallback                  0x08002dd1   Thumb Code     8  stm32f7xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    HAL_UARTEx_RxEventCallback               0x08002dd9   Thumb Code    12  stm32f7xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback)
    HAL_UART_AbortCpltCallback               0x08002de9   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback)
    HAL_UART_AbortReceiveCpltCallback        0x08002df1   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback)
    HAL_UART_AbortTransmitCpltCallback       0x08002df9   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback)
    HAL_UART_ErrorCallback                   0x08002e01   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_ErrorCallback)
    HAL_UART_Init                            0x08002e09   Thumb Code   190  stm32f7xx_hal_uart.o(.text.HAL_UART_Init)
    HAL_UART_MspInit                         0x08002ec9   Thumb Code   378  stm32f7xx_hal_msp.o(.text.HAL_UART_MspInit)
    HAL_UART_RxCpltCallback                  0x08003049   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_RxCpltCallback)
    HAL_UART_RxHalfCpltCallback              0x08003051   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback)
    HAL_UART_TxCpltCallback                  0x08003059   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_TxCpltCallback)
    HAL_UART_TxHalfCpltCallback              0x08003061   Thumb Code     8  stm32f7xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback)
    OS_Tick_AcknowledgeIRQ                   0x080032d9   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x080032e9   Thumb Code    60  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08003329   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08003331   Thumb Code   126  os_systick.o(.text.OS_Tick_Setup)
    SystemClock_Config                       0x080033e9   Thumb Code   192  main.o(.text.SystemClock_Config)
    SystemInit                               0x080034a9   Thumb Code    18  system_stm32f7xx.o(.text.SystemInit)
    TIM6_DAC_IRQHandler                      0x080034c1   Thumb Code    16  stm32f7xx_it.o(.text.TIM6_DAC_IRQHandler)
    TIM_Base_SetConfig                       0x080034d1   Thumb Code   410  stm32f7xx_hal_tim.o(.text.TIM_Base_SetConfig)
    UART_AdvFeatureConfig                    0x08003719   Thumb Code   328  stm32f7xx_hal_uart.o(.text.UART_AdvFeatureConfig)
    UART_CheckIdleState                      0x08003861   Thumb Code   112  stm32f7xx_hal_uart.o(.text.UART_CheckIdleState)
    UART_InitCallbacksToDefault              0x080038d1   Thumb Code   134  stm32f7xx_hal_uart.o(.text.UART_InitCallbacksToDefault)
    UART_SetConfig                           0x08003959   Thumb Code  1242  stm32f7xx_hal_uart.o(.text.UART_SetConfig)
    UART_WaitOnFlagUntilTimeout              0x08003e39   Thumb Code   356  stm32f7xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout)
    _mutex_acquire                           0x08004061   Thumb Code    32  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x08004081   Thumb Code    18  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x08004099   Thumb Code    50  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x080040d1   Thumb Code    28  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x080040f1   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    concatenate4Strings                      0x080040f9   Thumb Code   318  initmain.o(.text.concatenate4Strings)
    main                                     0x08004239   Thumb Code   272  main.o(.text.main)
    mainThread                               0x08004349   Thumb Code    38  initmain.o(.text.mainThread)
    osKernelGetState                         0x08004371   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x080043a1   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080043cd   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x080043f1   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x08004461   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x080044e1   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08004505   Thumb Code    32  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08004529   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x0800454d   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x08004571   Thumb Code    48  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x080045a1   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelBeforeInit                    0x080045a9   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelBeforeInit)
    osRtxKernelErrorNotify                   0x080045ab   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxMemoryAlloc                         0x080045af   Thumb Code   110  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0800461d   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0800465f   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08004695   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x080046cf   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08004719   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x080047fd   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x08004821   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x08004869   Thumb Code    74  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x080048b5   Thumb Code   124  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08004959   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBeforeFree                    0x080049c9   Thumb Code    16  rtx_lib.o(.text.osRtxThreadBeforeFree)
    osRtxThreadDelayRemove                   0x08004a89   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayTick                     0x08004ac5   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x08004b11   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    osRtxThreadDispatch                      0x08004b31   Thumb Code    84  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadJoinWakeup                    0x08004bdd   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    osRtxThreadListGet                       0x08004bfb   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08004c0d   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08004c39   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08004c4d   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08004c9d   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08004cad   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x08004cc1   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08004cf5   Thumb Code    28  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08004d15   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08004d51   Thumb Code    50  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08004d85   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x08004df9   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x08004e19   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x08004eb1   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x08004ebd   Thumb Code    40  rtx_thread.o(.text.osThreadNew)
    $Super$$_fp_init                         0x08005831   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08005849   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08005849   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    osRtxConfig                              0x0800584c   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x080058bc   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x080058f4   Data          16  system_stm32f7xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x08005904   Data           8  system_stm32f7xx.o(.rodata.APBPrescTable)
    osRtxUserSVC                             0x08005914   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08005998   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080059c8   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20010000   Data           4  system_stm32f7xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x20010004   Data         164  rtx_kernel.o(.data.os)
    uwTickFreq                               0x200100a8   Data           4  stm32f7xx_hal.o(.data.uwTickFreq)
    uwTickPrio                               0x200100ac   Data           4  stm32f7xx_hal.o(.data.uwTickPrio)
    __libspace_start                         0x200100b0   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20010110   Data           0  libspace.o(.bss)
    hdma_usart6_rx                           0x20010110   Data         100  main.o(.bss.hdma_usart6_rx)
    hdma_usart6_tx                           0x20010174   Data         100  main.o(.bss.hdma_usart6_tx)
    htim6                                    0x200101d8   Data         112  stm32f7xx_hal_timebase_tim.o(.bss.htim6)
    huart6                                   0x20010248   Data         180  main.o(.bss.huart6)
    .bss.os.msgqueue.cb$$Base                0x20018534   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20018568   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200185b8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20018658   Number         0  rtx_lib.o(.bss.os.thread.cb)
    uwTick                                   0x20018a5c   Data           4  stm32f7xx_hal.o(.bss.uwTick)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001c9

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00005a78, Max: 0x00100000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000059c8, Max: 0x00100000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001c8   Data   RO         1235    RESET               startup_stm32f746xx.o
    0x080001c8   0x080001c8   0x00000008   Code   RO         1821  * !!!main             c_wu.l(__main.o)
    0x080001d0   0x080001d0   0x00000034   Code   RO         2042    !!!scatter          c_wu.l(__scatter.o)
    0x08000204   0x08000204   0x0000001a   Code   RO         2044    !!handler_copy      c_wu.l(__scatter_copy.o)
    0x0800021e   0x0800021e   0x00000002   PAD
    0x08000220   0x08000220   0x0000001c   Code   RO         2046    !!handler_zi        c_wu.l(__scatter_zi.o)
    0x0800023c   0x0800023c   0x00000002   Code   RO         1992    .ARM.Collect$$libinit$$00000000  c_wu.l(libinit.o)
    0x0800023e   0x0800023e   0x00000004   Code   RO         1867    .ARM.Collect$$libinit$$00000001  c_wu.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         1870    .ARM.Collect$$libinit$$00000004  c_wu.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         1872    .ARM.Collect$$libinit$$00000006  c_wu.l(libinit2.o)
    0x08000242   0x08000242   0x00000008   Code   RO         1873    .ARM.Collect$$libinit$$00000007  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1875    .ARM.Collect$$libinit$$0000000C  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1877    .ARM.Collect$$libinit$$0000000E  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1879    .ARM.Collect$$libinit$$00000010  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1882    .ARM.Collect$$libinit$$00000013  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1884    .ARM.Collect$$libinit$$00000015  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1886    .ARM.Collect$$libinit$$00000017  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1888    .ARM.Collect$$libinit$$00000019  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1890    .ARM.Collect$$libinit$$0000001B  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1892    .ARM.Collect$$libinit$$0000001D  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1894    .ARM.Collect$$libinit$$0000001F  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1896    .ARM.Collect$$libinit$$00000021  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1898    .ARM.Collect$$libinit$$00000023  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1900    .ARM.Collect$$libinit$$00000025  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1902    .ARM.Collect$$libinit$$00000027  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1906    .ARM.Collect$$libinit$$0000002E  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1908    .ARM.Collect$$libinit$$00000030  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1910    .ARM.Collect$$libinit$$00000032  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000000   Code   RO         1912    .ARM.Collect$$libinit$$00000034  c_wu.l(libinit2.o)
    0x0800024a   0x0800024a   0x00000002   Code   RO         1913    .ARM.Collect$$libinit$$00000035  c_wu.l(libinit2.o)
    0x0800024c   0x0800024c   0x00000002   Code   RO         1993    .ARM.Collect$$libshutdown$$00000000  c_wu.l(libshutdown.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2005    .ARM.Collect$$libshutdown$$00000002  c_wu.l(libshutdown2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2007    .ARM.Collect$$libshutdown$$00000004  c_wu.l(libshutdown2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2010    .ARM.Collect$$libshutdown$$00000007  c_wu.l(libshutdown2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2013    .ARM.Collect$$libshutdown$$0000000A  c_wu.l(libshutdown2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2015    .ARM.Collect$$libshutdown$$0000000C  c_wu.l(libshutdown2.o)
    0x0800024e   0x0800024e   0x00000004   Code   RO         2016    .ARM.Collect$$libshutdown$$0000000D  c_wu.l(libshutdown2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         2018    .ARM.Collect$$libshutdown$$0000000F  c_wu.l(libshutdown2.o)
    0x08000252   0x08000252   0x00000002   Code   RO         2019    .ARM.Collect$$libshutdown$$00000010  c_wu.l(libshutdown2.o)
    0x08000254   0x08000254   0x00000000   Code   RO         1825    .ARM.Collect$$rtentry$$00000000  c_wu.l(__rtentry.o)
    0x08000254   0x08000254   0x00000000   Code   RO         1922    .ARM.Collect$$rtentry$$00000002  c_wu.l(__rtentry2.o)
    0x08000254   0x08000254   0x00000006   Code   RO         1934    .ARM.Collect$$rtentry$$00000004  c_wu.l(__rtentry4.o)
    0x0800025a   0x0800025a   0x00000008   Code   RO         1923    .ARM.Collect$$rtentry$$00000008  c_wu.l(__rtentry2.o)
    0x08000262   0x08000262   0x00000004   Code   RO         1925    .ARM.Collect$$rtentry$$0000000A  c_wu.l(__rtentry2.o)
    0x08000266   0x08000266   0x00000000   Code   RO         1927    .ARM.Collect$$rtentry$$0000000C  c_wu.l(__rtentry2.o)
    0x08000266   0x08000266   0x00000008   Code   RO         1928    .ARM.Collect$$rtentry$$0000000D  c_wu.l(__rtentry2.o)
    0x0800026e   0x0800026e   0x00000002   Code   RO         1826    .ARM.Collect$$rtexit$$00000000  c_wu.l(rtexit.o)
    0x08000270   0x08000270   0x00000000   Code   RO         1937    .ARM.Collect$$rtexit$$00000002  c_wu.l(rtexit2.o)
    0x08000270   0x08000270   0x00000004   Code   RO         1938    .ARM.Collect$$rtexit$$00000003  c_wu.l(rtexit2.o)
    0x08000274   0x08000274   0x00000006   Code   RO         1939    .ARM.Collect$$rtexit$$00000004  c_wu.l(rtexit2.o)
    0x0800027a   0x0800027a   0x00000002   PAD
    0x0800027c   0x0800027c   0x00000040   Code   RO         1236    .text               startup_stm32f746xx.o
    0x080002bc   0x080002bc   0x000000c4   Code   RO         1256    .text               RTX_V7MF.lib(irq_armv7m.o)
    0x08000380   0x08000380   0x000000a6   Code   RO         1757    .text               c_wu.l(h1_alloc_threads.o)
    0x08000426   0x08000426   0x000000f0   Code   RO         1809    .text               c_wu.l(lludivv7m.o)
    0x08000516   0x08000516   0x00000012   Code   RO         1811    .text               c_wu.l(exit.o)
    0x08000528   0x08000528   0x0000008a   Code   RO         1813    .text               c_wu.l(rt_memcpy_v6.o)
    0x080005b2   0x080005b2   0x00000044   Code   RO         1815    .text               c_wu.l(rt_memclr.o)
    0x080005f6   0x080005f6   0x0000004e   Code   RO         1817    .text               c_wu.l(rt_memclr_w.o)
    0x08000644   0x08000644   0x00000006   Code   RO         1819    .text               c_wu.l(heapauxi.o)
    0x0800064a   0x0800064a   0x0000000a   Code   RO         1837    .text               c_wu.l(rt_heap_descriptor_twolibspace.o)
    0x08000654   0x08000654   0x00000004   Code   RO         1839    .text               c_wu.l(hguard.o)
    0x08000658   0x08000658   0x0000008a   Code   RO         1841    .text               c_wu.l(init_alloc.o)
    0x080006e2   0x080006e2   0x00000012   Code   RO         1851    .text               c_wu.l(h1_init_threads.o)
    0x080006f4   0x080006f4   0x00000076   Code   RO         1853    .text               c_wu.l(h1_free_threads.o)
    0x0800076a   0x0800076a   0x00000064   Code   RO         1863    .text               c_wu.l(rt_memcpy_w.o)
    0x080007ce   0x080007ce   0x00000002   PAD
    0x080007d0   0x080007d0   0x00000008   Code   RO         1918    .text               c_wu.l(libspace.o)
    0x080007d8   0x080007d8   0x00000000   Code   RO         1948    .text               c_wu.l(maybetermalloc2.o)
    0x080007d8   0x080007d8   0x00000052   Code   RO         1951    .text               c_wu.l(h1_extend_threads.o)
    0x0800082a   0x0800082a   0x0000000e   Code   RO         1953    .text               c_wu.l(defsig_rtmem_outer.o)
    0x08000838   0x08000838   0x0000000c   Code   RO         1962    .text               c_wu.l(sys_exit.o)
    0x08000844   0x08000844   0x00000002   Code   RO         1966    .text               c_wu.l(use_no_semi.o)
    0x08000846   0x08000846   0x00000000   Code   RO         1968    .text               c_wu.l(indicate_semi.o)
    0x08000846   0x08000846   0x0000004a   Code   RO         1969    .text               c_wu.l(sys_stackheap_outer.o)
    0x08000890   0x08000890   0x00000010   Code   RO         1973    .text               c_wu.l(term_alloc.o)
    0x080008a0   0x080008a0   0x0000000a   Code   RO         1975    .text               c_wu.l(defsig_exit.o)
    0x080008aa   0x080008aa   0x00000002   PAD
    0x080008ac   0x080008ac   0x00000050   Code   RO         1981    .text               c_wu.l(defsig_rtmem_inner.o)
    0x080008fc   0x080008fc   0x0000000a   Code   RO         1996    .text               c_wu.l(h1_final_threads.o)
    0x08000906   0x08000906   0x00000032   Code   RO         2000    .text               c_wu.l(defsig_general.o)
    0x08000938   0x08000938   0x0000000e   Code   RO         2020    .text               c_wu.l(sys_wrch.o)
    0x08000946   0x08000946   0x00000002   PAD
    0x08000948   0x08000948   0x00000016   Code   RO           55    .text.$Sub$$_fp_init  rtx_lib.o
    0x0800095e   0x0800095e   0x00000002   PAD
    0x08000960   0x08000960   0x00000010   Code   RO           42    .text.DMA2_Stream1_IRQHandler  stm32f7xx_it.o
    0x08000970   0x08000970   0x00000010   Code   RO           44    .text.DMA2_Stream6_IRQHandler  stm32f7xx_it.o
    0x08000980   0x08000980   0x00000056   Code   RO          275    .text.DMA_CalcBaseAndBitshift  stm32f7xx_hal_dma.o
    0x080009d6   0x080009d6   0x00000002   PAD
    0x080009d8   0x080009d8   0x000000de   Code   RO          273    .text.DMA_CheckFifoParam  stm32f7xx_hal_dma.o
    0x08000ab6   0x08000ab6   0x00000002   PAD
    0x08000ab8   0x08000ab8   0x00000006   Code   RO           25    .text.Error_Handler  main.o
    0x08000abe   0x08000abe   0x00000002   PAD
    0x08000ac0   0x08000ac0   0x0000030c   Code   RO          291    .text.HAL_DMA_IRQHandler  stm32f7xx_hal_dma.o
    0x08000dcc   0x08000dcc   0x00000004   PAD
    0x08000dd0   0x08000dd0   0x0000015a   Code   RO          271    .text.HAL_DMA_Init  stm32f7xx_hal_dma.o
    0x08000f2a   0x08000f2a   0x00000006   PAD
    0x08000f30   0x08000f30   0x000003ec   Code   RO          324    .text.HAL_GPIO_Init  stm32f7xx_hal_gpio.o
    0x0800131c   0x0800131c   0x00000004   PAD
    0x08001320   0x08001320   0x0000002a   Code   RO          330    .text.HAL_GPIO_WritePin  stm32f7xx_hal_gpio.o
    0x0800134a   0x0800134a   0x00000006   PAD
    0x08001350   0x08001350   0x0000000c   Code   RO          144    .text.HAL_GetTick   stm32f7xx_hal.o
    0x0800135c   0x0800135c   0x00000004   PAD
    0x08001360   0x08001360   0x0000001a   Code   RO          142    .text.HAL_IncTick   stm32f7xx_hal.o
    0x0800137a   0x0800137a   0x00000006   PAD
    0x08001380   0x08001380   0x00000026   Code   RO          132    .text.HAL_Init      stm32f7xx_hal.o
    0x080013a6   0x080013a6   0x00000002   PAD
    0x080013a8   0x080013a8   0x000000e0   Code   RO         1220    .text.HAL_InitTick  stm32f7xx_hal_timebase_tim.o
    0x08001488   0x08001488   0x00000042   Code   RO         1207    .text.HAL_MspInit   stm32f7xx_hal_msp.o
    0x080014ca   0x080014ca   0x00000006   PAD
    0x080014d0   0x080014d0   0x00000010   Code   RO          212    .text.HAL_NVIC_EnableIRQ  stm32f7xx_hal_cortex.o
    0x080014e0   0x080014e0   0x0000002e   Code   RO          204    .text.HAL_NVIC_SetPriority  stm32f7xx_hal_cortex.o
    0x0800150e   0x0800150e   0x00000002   PAD
    0x08001510   0x08001510   0x00000010   Code   RO          200    .text.HAL_NVIC_SetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x08001520   0x08001520   0x000000be   Code   RO          404    .text.HAL_PWREx_EnableOverDrive  stm32f7xx_hal_pwr_ex.o
    0x080015de   0x080015de   0x00000002   PAD
    0x080015e0   0x080015e0   0x00000860   Code   RO          456    .text.HAL_RCCEx_PeriphCLKConfig  stm32f7xx_hal_rcc_ex.o
    0x08001e40   0x08001e40   0x0000025a   Code   RO          425    .text.HAL_RCC_ClockConfig  stm32f7xx_hal_rcc.o
    0x0800209a   0x0800209a   0x00000006   PAD
    0x080020a0   0x080020a0   0x00000054   Code   RO          443    .text.HAL_RCC_GetClockConfig  stm32f7xx_hal_rcc.o
    0x080020f4   0x080020f4   0x00000004   PAD
    0x080020f8   0x080020f8   0x0000000c   Code   RO          435    .text.HAL_RCC_GetHCLKFreq  stm32f7xx_hal_rcc.o
    0x08002104   0x08002104   0x00000004   PAD
    0x08002108   0x08002108   0x00000022   Code   RO          437    .text.HAL_RCC_GetPCLK1Freq  stm32f7xx_hal_rcc.o
    0x0800212a   0x0800212a   0x00000006   PAD
    0x08002130   0x08002130   0x00000022   Code   RO          439    .text.HAL_RCC_GetPCLK2Freq  stm32f7xx_hal_rcc.o
    0x08002152   0x08002152   0x00000006   PAD
    0x08002158   0x08002158   0x000000e6   Code   RO          427    .text.HAL_RCC_GetSysClockFreq  stm32f7xx_hal_rcc.o
    0x0800223e   0x0800223e   0x00000002   PAD
    0x08002240   0x08002240   0x000006ee   Code   RO          423    .text.HAL_RCC_OscConfig  stm32f7xx_hal_rcc.o
    0x0800292e   0x0800292e   0x00000002   PAD
    0x08002930   0x08002930   0x00000008   Code   RO          808    .text.HAL_TIMEx_Break2Callback  stm32f7xx_hal_tim_ex.o
    0x08002938   0x08002938   0x00000008   Code   RO          806    .text.HAL_TIMEx_BreakCallback  stm32f7xx_hal_tim_ex.o
    0x08002940   0x08002940   0x00000008   Code   RO          802    .text.HAL_TIMEx_CommutCallback  stm32f7xx_hal_tim_ex.o
    0x08002948   0x08002948   0x00000084   Code   RO          477    .text.HAL_TIM_Base_Init  stm32f7xx_hal_tim.o
    0x080029cc   0x080029cc   0x00000004   PAD
    0x080029d0   0x080029d0   0x00000008   Code   RO          479    .text.HAL_TIM_Base_MspInit  stm32f7xx_hal_tim.o
    0x080029d8   0x080029d8   0x000000fa   Code   RO          491    .text.HAL_TIM_Base_Start_IT  stm32f7xx_hal_tim.o
    0x08002ad2   0x08002ad2   0x00000006   PAD
    0x08002ad8   0x08002ad8   0x00000008   Code   RO          613    .text.HAL_TIM_IC_CaptureCallback  stm32f7xx_hal_tim.o
    0x08002ae0   0x08002ae0   0x000002b4   Code   RO          611    .text.HAL_TIM_IRQHandler  stm32f7xx_hal_tim.o
    0x08002d94   0x08002d94   0x00000004   PAD
    0x08002d98   0x08002d98   0x00000008   Code   RO          615    .text.HAL_TIM_OC_DelayElapsedCallback  stm32f7xx_hal_tim.o
    0x08002da0   0x08002da0   0x00000008   Code   RO          617    .text.HAL_TIM_PWM_PulseFinishedCallback  stm32f7xx_hal_tim.o
    0x08002da8   0x08002da8   0x00000022   Code   RO           27    .text.HAL_TIM_PeriodElapsedCallback  main.o
    0x08002dca   0x08002dca   0x00000006   PAD
    0x08002dd0   0x08002dd0   0x00000008   Code   RO          621    .text.HAL_TIM_TriggerCallback  stm32f7xx_hal_tim.o
    0x08002dd8   0x08002dd8   0x0000000c   Code   RO          867    .text.HAL_UARTEx_RxEventCallback  stm32f7xx_hal_uart.o
    0x08002de4   0x08002de4   0x00000004   PAD
    0x08002de8   0x08002de8   0x00000008   Code   RO          857    .text.HAL_UART_AbortCpltCallback  stm32f7xx_hal_uart.o
    0x08002df0   0x08002df0   0x00000008   Code   RO          861    .text.HAL_UART_AbortReceiveCpltCallback  stm32f7xx_hal_uart.o
    0x08002df8   0x08002df8   0x00000008   Code   RO          859    .text.HAL_UART_AbortTransmitCpltCallback  stm32f7xx_hal_uart.o
    0x08002e00   0x08002e00   0x00000008   Code   RO          855    .text.HAL_UART_ErrorCallback  stm32f7xx_hal_uart.o
    0x08002e08   0x08002e08   0x000000be   Code   RO          821    .text.HAL_UART_Init  stm32f7xx_hal_uart.o
    0x08002ec6   0x08002ec6   0x00000002   PAD
    0x08002ec8   0x08002ec8   0x0000017a   Code   RO         1209    .text.HAL_UART_MspInit  stm32f7xx_hal_msp.o
    0x08003042   0x08003042   0x00000006   PAD
    0x08003048   0x08003048   0x00000008   Code   RO          853    .text.HAL_UART_RxCpltCallback  stm32f7xx_hal_uart.o
    0x08003050   0x08003050   0x00000008   Code   RO          851    .text.HAL_UART_RxHalfCpltCallback  stm32f7xx_hal_uart.o
    0x08003058   0x08003058   0x00000008   Code   RO          849    .text.HAL_UART_TxCpltCallback  stm32f7xx_hal_uart.o
    0x08003060   0x08003060   0x00000008   Code   RO          847    .text.HAL_UART_TxHalfCpltCallback  stm32f7xx_hal_uart.o
    0x08003068   0x08003068   0x00000016   Code   RO         1422    .text.IsIrqMasked   RTX_V7MF.lib(rtx_thread.o)
    0x0800307e   0x0800307e   0x00000002   PAD
    0x08003080   0x08003080   0x0000004c   Code   RO           21    .text.MX_DMA_Init   main.o
    0x080030cc   0x080030cc   0x00000004   PAD
    0x080030d0   0x080030d0   0x0000009c   Code   RO           19    .text.MX_GPIO_Init  main.o
    0x0800316c   0x0800316c   0x00000004   PAD
    0x08003170   0x08003170   0x00000044   Code   RO           23    .text.MX_USART6_UART_Init  main.o
    0x080031b4   0x080031b4   0x00000040   Code   RO         1718    .text.MessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x080031f4   0x080031f4   0x00000058   Code   RO         1714    .text.MessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x0800324c   0x0800324c   0x0000001c   Code   RO         1712    .text.MessageQueueRemove  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08003268   0x08003268   0x0000006c   Code   RO          210    .text.NVIC_EncodePriority  stm32f7xx_hal_cortex.o
    0x080032d4   0x080032d4   0x00000004   PAD
    0x080032d8   0x080032d8   0x0000000c   Code   RO          101    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x080032e4   0x080032e4   0x00000004   PAD
    0x080032e8   0x080032e8   0x0000003c   Code   RO           97    .text.OS_Tick_Enable  os_systick.o
    0x08003324   0x08003324   0x00000004   PAD
    0x08003328   0x08003328   0x00000006   Code   RO          103    .text.OS_Tick_GetIRQn  os_systick.o
    0x0800332e   0x0800332e   0x00000002   PAD
    0x08003330   0x08003330   0x0000007e   Code   RO           95    .text.OS_Tick_Setup  os_systick.o
    0x080033ae   0x080033ae   0x0000000c   Code   RO         1330    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_kernel.o)
    0x080033ba   0x080033ba   0x00000010   Code   RO         1546    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_thread.o)
    0x080033ca   0x080033ca   0x0000000c   Code   RO         1726    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_msgqueue.o)
    0x080033d6   0x080033d6   0x00000006   Code   RO         1332    .text.OUTLINED_FUNCTION_1  RTX_V7MF.lib(rtx_kernel.o)
    0x080033dc   0x080033dc   0x00000006   Code   RO         1728    .text.OUTLINED_FUNCTION_1  RTX_V7MF.lib(rtx_msgqueue.o)
    0x080033e2   0x080033e2   0x00000006   PAD
    0x080033e8   0x080033e8   0x000000c0   Code   RO           17    .text.SystemClock_Config  main.o
    0x080034a8   0x080034a8   0x00000012   Code   RO         1243    .text.SystemInit    system_stm32f7xx.o
    0x080034ba   0x080034ba   0x00000006   PAD
    0x080034c0   0x080034c0   0x00000010   Code   RO           40    .text.TIM6_DAC_IRQHandler  stm32f7xx_it.o
    0x080034d0   0x080034d0   0x0000019a   Code   RO          481    .text.TIM_Base_SetConfig  stm32f7xx_hal_tim.o
    0x0800366a   0x0800366a   0x00000064   Code   RO         1498    .text.ThreadFlagsCheck  RTX_V7MF.lib(rtx_thread.o)
    0x080036ce   0x080036ce   0x00000002   PAD
    0x080036d0   0x080036d0   0x00000048   Code   RO         1588    .text.TimerInsert   RTX_V7MF.lib(rtx_timer.o)
    0x08003718   0x08003718   0x00000148   Code   RO          829    .text.UART_AdvFeatureConfig  stm32f7xx_hal_uart.o
    0x08003860   0x08003860   0x00000070   Code   RO          831    .text.UART_CheckIdleState  stm32f7xx_hal_uart.o
    0x080038d0   0x080038d0   0x00000086   Code   RO          823    .text.UART_InitCallbacksToDefault  stm32f7xx_hal_uart.o
    0x08003956   0x08003956   0x00000002   PAD
    0x08003958   0x08003958   0x000004da   Code   RO          827    .text.UART_SetConfig  stm32f7xx_hal_uart.o
    0x08003e32   0x08003e32   0x00000006   PAD
    0x08003e38   0x08003e38   0x00000164   Code   RO          871    .text.UART_WaitOnFlagUntilTimeout  stm32f7xx_hal_uart.o
    0x08003f9c   0x08003f9c   0x00000004   PAD
    0x08003fa0   0x08003fa0   0x0000002a   Code   RO          214    .text.__NVIC_EnableIRQ  stm32f7xx_hal_cortex.o
    0x08003fca   0x08003fca   0x00000006   PAD
    0x08003fd0   0x08003fd0   0x00000010   Code   RO          206    .text.__NVIC_GetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x08003fe0   0x08003fe0   0x0000003a   Code   RO          208    .text.__NVIC_SetPriority  stm32f7xx_hal_cortex.o
    0x0800401a   0x0800401a   0x00000006   PAD
    0x08004020   0x08004020   0x0000003c   Code   RO          202    .text.__NVIC_SetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x0800405c   0x0800405c   0x00000004   PAD
    0x08004060   0x08004060   0x00000020   Code   RO           67    .text._mutex_acquire  rtx_lib.o
    0x08004080   0x08004080   0x00000012   Code   RO           71    .text._mutex_free   rtx_lib.o
    0x08004092   0x08004092   0x00000006   PAD
    0x08004098   0x08004098   0x00000032   Code   RO           65    .text._mutex_initialize  rtx_lib.o
    0x080040ca   0x080040ca   0x00000006   PAD
    0x080040d0   0x080040d0   0x0000001c   Code   RO           69    .text._mutex_release  rtx_lib.o
    0x080040ec   0x080040ec   0x00000004   PAD
    0x080040f0   0x080040f0   0x00000008   Code   RO           53    .text._platform_post_stackheap_init  rtx_lib.o
    0x080040f8   0x080040f8   0x0000013e   Code   RO            2    .text.concatenate4Strings  initmain.o
    0x08004236   0x08004236   0x00000002   PAD
    0x08004238   0x08004238   0x00000110   Code   RO           15    .text.main          main.o
    0x08004348   0x08004348   0x00000026   Code   RO            4    .text.mainThread    initmain.o
    0x0800436e   0x0800436e   0x00000002   PAD
    0x08004370   0x08004370   0x00000030   Code   RO         1274    .text.osKernelGetState  RTX_V7MF.lib(rtx_kernel.o)
    0x080043a0   0x080043a0   0x0000002c   Code   RO         1268    .text.osKernelInitialize  RTX_V7MF.lib(rtx_kernel.o)
    0x080043cc   0x080043cc   0x00000024   Code   RO         1278    .text.osKernelStart  RTX_V7MF.lib(rtx_kernel.o)
    0x080043f0   0x080043f0   0x00000070   Code   RO         1688    .text.osMessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08004460   0x08004460   0x00000080   Code   RO         1686    .text.osMessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x080044e0   0x080044e0   0x00000024   Code   RO         1354    .text.osMutexAcquire  RTX_V7MF.lib(rtx_mutex.o)
    0x08004504   0x08004504   0x00000024   Code   RO         1360    .text.osMutexDelete  RTX_V7MF.lib(rtx_mutex.o)
    0x08004528   0x08004528   0x00000024   Code   RO         1348    .text.osMutexNew    RTX_V7MF.lib(rtx_mutex.o)
    0x0800454c   0x0800454c   0x00000024   Code   RO         1356    .text.osMutexRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x08004570   0x08004570   0x00000030   Code   RO          123    .text.osRtxErrorNotify  rtx_config.o
    0x080045a0   0x080045a0   0x00000008   Code   RO          121    .text.osRtxIdleThread  rtx_config.o
    0x080045a8   0x080045a8   0x00000002   Code   RO         1264    .text.osRtxKernelBeforeInit  RTX_V7MF.lib(rtx_kernel.o)
    0x080045aa   0x080045aa   0x00000004   Code   RO         1266    .text.osRtxKernelErrorNotify  RTX_V7MF.lib(rtx_kernel.o)
    0x080045ae   0x080045ae   0x0000006e   Code   RO         1612    .text.osRtxMemoryAlloc  RTX_V7MF.lib(rtx_memory.o)
    0x0800461c   0x0800461c   0x00000042   Code   RO         1614    .text.osRtxMemoryFree  RTX_V7MF.lib(rtx_memory.o)
    0x0800465e   0x0800465e   0x00000036   Code   RO         1610    .text.osRtxMemoryInit  RTX_V7MF.lib(rtx_memory.o)
    0x08004694   0x08004694   0x0000003a   Code   RO         1626    .text.osRtxMemoryPoolAlloc  RTX_V7MF.lib(rtx_mempool.o)
    0x080046ce   0x080046ce   0x0000004a   Code   RO         1628    .text.osRtxMemoryPoolFree  RTX_V7MF.lib(rtx_mempool.o)
    0x08004718   0x08004718   0x00000038   Code   RO         1624    .text.osRtxMemoryPoolInit  RTX_V7MF.lib(rtx_mempool.o)
    0x08004750   0x08004750   0x000000aa   Code   RO         1710    .text.osRtxMessageQueuePostProcess  RTX_V7MF.lib(rtx_msgqueue.o)
    0x080047fa   0x080047fa   0x00000002   PAD
    0x080047fc   0x080047fc   0x00000024   Code   RO         1676    .text.osRtxMessageQueueTimerSetup  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08004820   0x08004820   0x00000048   Code   RO         1344    .text.osRtxMutexOwnerRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x08004868   0x08004868   0x0000004a   Code   RO         1346    .text.osRtxMutexOwnerRestore  RTX_V7MF.lib(rtx_mutex.o)
    0x080048b2   0x080048b2   0x00000002   PAD
    0x080048b4   0x080048b4   0x000000a4   Code   RO         1740    .text.osRtxPendSV_Handler  RTX_V7MF.lib(rtx_system.o)
    0x08004958   0x08004958   0x00000070   Code   RO         1742    .text.osRtxPostProcess  RTX_V7MF.lib(rtx_system.o)
    0x080049c8   0x080049c8   0x00000010   Code   RO           61    .text.osRtxThreadBeforeFree  rtx_lib.o
    0x080049d8   0x080049d8   0x00000034   Code   RO         1400    .text.osRtxThreadBlock  RTX_V7MF.lib(rtx_thread.o)
    0x08004a0c   0x08004a0c   0x0000007c   Code   RO         1406    .text.osRtxThreadDelayInsert  RTX_V7MF.lib(rtx_thread.o)
    0x08004a88   0x08004a88   0x0000003c   Code   RO         1390    .text.osRtxThreadDelayRemove  RTX_V7MF.lib(rtx_thread.o)
    0x08004ac4   0x08004ac4   0x0000004c   Code   RO         1392    .text.osRtxThreadDelayTick  RTX_V7MF.lib(rtx_thread.o)
    0x08004b10   0x08004b10   0x00000020   Code   RO         1410    .text.osRtxThreadDestroy  RTX_V7MF.lib(rtx_thread.o)
    0x08004b30   0x08004b30   0x00000054   Code   RO         1398    .text.osRtxThreadDispatch  RTX_V7MF.lib(rtx_thread.o)
    0x08004b84   0x08004b84   0x00000058   Code   RO         1412    .text.osRtxThreadFree  RTX_V7MF.lib(rtx_thread.o)
    0x08004bdc   0x08004bdc   0x0000001e   Code   RO         1408    .text.osRtxThreadJoinWakeup  RTX_V7MF.lib(rtx_thread.o)
    0x08004bfa   0x08004bfa   0x00000012   Code   RO         1382    .text.osRtxThreadListGet  RTX_V7MF.lib(rtx_thread.o)
    0x08004c0c   0x08004c0c   0x0000002c   Code   RO         1380    .text.osRtxThreadListPut  RTX_V7MF.lib(rtx_thread.o)
    0x08004c38   0x08004c38   0x00000014   Code   RO         1386    .text.osRtxThreadListRemove  RTX_V7MF.lib(rtx_thread.o)
    0x08004c4c   0x08004c4c   0x00000026   Code   RO         1384    .text.osRtxThreadListSort  RTX_V7MF.lib(rtx_thread.o)
    0x08004c72   0x08004c72   0x00000028   Code   RO         1496    .text.osRtxThreadPostProcess  RTX_V7MF.lib(rtx_thread.o)
    0x08004c9a   0x08004c9a   0x00000002   PAD
    0x08004c9c   0x08004c9c   0x00000010   Code   RO         1388    .text.osRtxThreadReadyPut  RTX_V7MF.lib(rtx_thread.o)
    0x08004cac   0x08004cac   0x00000014   Code   RO         1394    .text.osRtxThreadRegPtr  RTX_V7MF.lib(rtx_thread.o)
    0x08004cc0   0x08004cc0   0x00000034   Code   RO         1416    .text.osRtxThreadStartup  RTX_V7MF.lib(rtx_thread.o)
    0x08004cf4   0x08004cf4   0x00000020   Code   RO         1396    .text.osRtxThreadSwitch  RTX_V7MF.lib(rtx_thread.o)
    0x08004d14   0x08004d14   0x0000003c   Code   RO         1404    .text.osRtxThreadWaitEnter  RTX_V7MF.lib(rtx_thread.o)
    0x08004d50   0x08004d50   0x00000032   Code   RO         1402    .text.osRtxThreadWaitExit  RTX_V7MF.lib(rtx_thread.o)
    0x08004d82   0x08004d82   0x00000002   PAD
    0x08004d84   0x08004d84   0x00000074   Code   RO         1738    .text.osRtxTick_Handler  RTX_V7MF.lib(rtx_system.o)
    0x08004df8   0x08004df8   0x00000020   Code   RO         1568    .text.osRtxTimerSetup  RTX_V7MF.lib(rtx_timer.o)
    0x08004e18   0x08004e18   0x00000020   Code   RO         1572    .text.osRtxTimerThread  RTX_V7MF.lib(rtx_timer.o)
    0x08004e38   0x08004e38   0x00000070   Code   RO         1570    .text.osRtxTimerTick  RTX_V7MF.lib(rtx_timer.o)
    0x08004ea8   0x08004ea8   0x00000006   Code   RO         1494    .text.osThreadEntry  RTX_V7MF.lib(rtx_thread.o)
    0x08004eae   0x08004eae   0x00000002   PAD
    0x08004eb0   0x08004eb0   0x0000000c   Code   RO         1460    .text.osThreadExit  RTX_V7MF.lib(rtx_thread.o)
    0x08004ebc   0x08004ebc   0x0000002c   Code   RO         1420    .text.osThreadNew   RTX_V7MF.lib(rtx_thread.o)
    0x08004ee8   0x08004ee8   0x00000036   Code   RO           59    .text.os_kernel_is_active  rtx_lib.o
    0x08004f1e   0x08004f1e   0x00000002   PAD
    0x08004f20   0x08004f20   0x0000000c   Code   RO         1276    .text.svcRtxKernelGetState  RTX_V7MF.lib(rtx_kernel.o)
    0x08004f2c   0x08004f2c   0x00000108   Code   RO         1314    .text.svcRtxKernelInitialize  RTX_V7MF.lib(rtx_kernel.o)
    0x08005034   0x08005034   0x00000078   Code   RO         1316    .text.svcRtxKernelStart  RTX_V7MF.lib(rtx_kernel.o)
    0x080050ac   0x080050ac   0x000000cc   Code   RO         1720    .text.svcRtxMessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08005178   0x08005178   0x00000120   Code   RO         1678    .text.svcRtxMessageQueueNew  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08005298   0x08005298   0x000000a8   Code   RO         1716    .text.svcRtxMessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08005340   0x08005340   0x00000090   Code   RO         1364    .text.svcRtxMutexAcquire  RTX_V7MF.lib(rtx_mutex.o)
    0x080053d0   0x080053d0   0x000000b0   Code   RO         1370    .text.svcRtxMutexDelete  RTX_V7MF.lib(rtx_mutex.o)
    0x08005480   0x08005480   0x00000068   Code   RO         1362    .text.svcRtxMutexNew  RTX_V7MF.lib(rtx_mutex.o)
    0x080054e8   0x080054e8   0x000000b4   Code   RO         1366    .text.svcRtxMutexRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x0800559c   0x0800559c   0x0000004c   Code   RO         1522    .text.svcRtxThreadExit  RTX_V7MF.lib(rtx_thread.o)
    0x080055e8   0x080055e8   0x000001fc   Code   RO         1418    .text.svcRtxThreadNew  RTX_V7MF.lib(rtx_thread.o)
    0x080057e4   0x080057e4   0x00000004   PAD
    0x080057e8   0x080057e8   0x00000048   Code   RO           63    .text.user_perthread_libspace_free  rtx_lib.o
    0x08005830   0x08005830   0x0000001a   Code   RO         1823    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0800584a   0x0800584a   0x00000002   PAD
    0x0800584c   0x0800584c   0x00000070   Data   RO           77    .rodata             rtx_lib.o
    0x080058bc   0x080058bc   0x00000038   Data   RO           80    .rodata             rtx_lib.o
    0x080058f4   0x080058f4   0x00000010   Data   RO         1248    .rodata.AHBPrescTable  system_stm32f7xx.o
    0x08005904   0x08005904   0x00000008   Data   RO         1249    .rodata.APBPrescTable  system_stm32f7xx.o
    0x0800590c   0x0800590c   0x00000008   Data   RO          301    .rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset  stm32f7xx_hal_dma.o
    0x08005914   0x08005914   0x00000004   Data   RO           79    .rodata.osRtxUserSVC  rtx_lib.o
    0x08005918   0x08005918   0x00000024   Data   RO           74    .rodata.os_idle_thread_attr  rtx_lib.o
    0x0800593c   0x0800593c   0x00000018   Data   RO           76    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08005954   0x08005954   0x00000024   Data   RO           75    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08005978   0x08005978   0x00000014   Data   RO            6    .rodata.str1.1      initmain.o
    0x0800598c   0x0800598c   0x0000000b   Data   RO         1334    .rodata.str1.4      RTX_V7MF.lib(rtx_kernel.o)
    0x08005997   0x08005997   0x00000001   PAD
    0x08005998   0x08005998   0x00000030   Data   RO         2041    Region$$Table       anon$$obj.o


    Execution Region RW_DTCM (Exec base: 0x20000000, Load base: 0x080059c8, Size: 0x00000600, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000        -       0x00000200   Zero   RW         1234    HEAP                startup_stm32f746xx.o
    0x20000200        -       0x00000400   Zero   RW         1233    STACK               startup_stm32f746xx.o


    Execution Region RW_SRAM1 (Exec base: 0x20010000, Load base: 0x080059c8, Size: 0x00008a60, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20010000   0x080059c8   0x00000004   Data   RW         1247    .data.SystemCoreClock  system_stm32f7xx.o
    0x20010004   0x080059cc   0x000000a4   Data   RW         1335    .data.os            RTX_V7MF.lib(rtx_kernel.o)
    0x200100a8   0x08005a70   0x00000004   Data   RW          191    .data.uwTickFreq    stm32f7xx_hal.o
    0x200100ac   0x08005a74   0x00000004   Data   RW          190    .data.uwTickPrio    stm32f7xx_hal.o
    0x200100b0        -       0x00000060   Zero   RW         1919    .bss                c_wu.l(libspace.o)
    0x20010110        -       0x00000064   Zero   RW           30    .bss.hdma_usart6_rx  main.o
    0x20010174        -       0x00000064   Zero   RW           31    .bss.hdma_usart6_tx  main.o
    0x200101d8        -       0x00000070   Zero   RW         1226    .bss.htim6          stm32f7xx_hal_timebase_tim.o
    0x20010248        -       0x000000b4   Zero   RW           29    .bss.huart6         main.o
    0x200102fc   0x08005a78   0x00000004   PAD
    0x20010300        -       0x00008040   Zero   RW           73    .bss.os             rtx_lib.o
    0x20018340        -       0x00000001   Zero   RW          113    .bss.os             os_systick.o
    0x20018341   0x08005a78   0x00000003   PAD
    0x20018344        -       0x000001f0   Zero   RW           81    .bss.os.libspace    rtx_lib.o
    0x20018534        -       0x00000034   Zero   RW           85    .bss.os.msgqueue.cb  rtx_lib.o
    0x20018568        -       0x00000050   Zero   RW           86    .bss.os.msgqueue.mem  rtx_lib.o
    0x200185b8        -       0x000000a0   Zero   RW           82    .bss.os.thread.cb   rtx_lib.o
    0x20018658        -       0x00000200   Zero   RW           83    .bss.os.thread.idle.stack  rtx_lib.o
    0x20018858        -       0x00000200   Zero   RW           84    .bss.os.thread.timer.stack  rtx_lib.o
    0x20018a58        -       0x00000001   Zero   RW           87    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20018a59   0x08005a78   0x00000003   PAD
    0x20018a5c        -       0x00000004   Zero   RW          192    .bss.uwTick         stm32f7xx_hal.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       356          0         20          0          0       1277   initmain.o
       804          0          0          0        380      12960   main.o
       204          0          0          0          1       5721   os_systick.o
        56          6          0          0          0        728   rtx_config.o
       300          0        268          0      34645       8157   rtx_lib.o
        64         26        456          0       1536        900   startup_stm32f746xx.o
        76          0          0          8          4       8039   stm32f7xx_hal.o
       362          0          0          0          0      10681   stm32f7xx_hal_cortex.o
      1434          8          8          0          0       8743   stm32f7xx_hal_dma.o
      1046          0          0          0          0       5463   stm32f7xx_hal_gpio.o
       444          0          0          0          0       7163   stm32f7xx_hal_msp.o
       190          0          0          0          0       5982   stm32f7xx_hal_pwr_ex.o
      2770          0          0          0          0       8291   stm32f7xx_hal_rcc.o
      2144          0          0          0          0       7508   stm32f7xx_hal_rcc_ex.o
      1524          0          0          0          0      37029   stm32f7xx_hal_tim.o
        24          0          0          0          0      16158   stm32f7xx_hal_tim_ex.o
       224          0          0          0        112       7885   stm32f7xx_hal_timebase_tim.o
      2438         38          0          0          0      26127   stm32f7xx_hal_uart.o
        48          0          0          0          0        667   stm32f7xx_it.o
        18          0         24          4          0       3408   system_stm32f7xx.o

    ----------------------------------------------------------------------
     14716         78        824         12      36688     182887   Object Totals
         0          0         48          0          0          0   (incl. Generated)
       190          0          0          0         10          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       196         12          0          0          0        712   irq_armv7m.o
       548         44         11        164          0      19332   rtx_kernel.o
       230          0          0          0          0       2808   rtx_memory.o
       188          0          0          0          0      16536   rtx_mempool.o
      1304         24          0          0          0      19223   rtx_msgqueue.o
       894         28          0          0          0      10977   rtx_mutex.o
       392         48          0          0          0       5563   rtx_system.o
      1720         52          0          0          0      38973   rtx_thread.o
       248         16          0          0          0      11024   rtx_timer.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        18          0          0          0          0         80   exit.o
       166          0          0          0          0        144   h1_alloc_threads.o
        82          0          0          0          0        104   h1_extend_threads.o
        10          0          0          0          0         76   h1_final_threads.o
       118          0          0          0          0        108   h1_free_threads.o
        18          0          0          0          0         84   h1_init_threads.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
         2          0          0          0          0          0   libinit.o
        14          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       240          0          0          0          0        100   lludivv7m.o
         0          0          0          0          0          0   maybetermalloc2.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
        16          0          0          0          0         80   term_alloc.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      7432        302         12        164         96     127608   Library Totals
        36          4          1          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5720        224         11        164          0     125148   RTX_V7MF.lib
      1650         74          0          0         96       2344   c_wu.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      7432        302         12        164         96     127608   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22148        380        836        176      36784     308779   Grand Totals
     22148        380        836        176      36784     308779   ELF Image Totals
     22148        380        836        176          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                22984 (  22.45kB)
    Total RW  Size (RW Data + ZI Data)             36960 (  36.09kB)
    Total ROM Size (Code + RO Data + RW Data)      23160 (  22.62kB)

==============================================================================

